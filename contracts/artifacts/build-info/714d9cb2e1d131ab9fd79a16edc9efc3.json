{
	"id": "714d9cb2e1d131ab9fd79a16edc9efc3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FaisaaToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity =0.5.16;\r\n\r\nimport './libraries/SafeMath.sol';\r\n\r\ncontract Faisaa {\r\n    /// @notice EIP-20 token name for this token\r\n    string public constant name = \"Faisaa\";\r\n\r\n    /// @notice EIP-20 token symbol for this token\r\n    string public constant symbol = \"FAISAA\";\r\n\r\n    /// @notice EIP-20 token decimals for this token\r\n    uint8 public constant decimals = 18;\r\n\r\n    /// @notice Total number of tokens in circulation\r\n    uint public totalSupply = 100_000_000e18; // 100 million Faisaa\r\n\r\n    /// @notice Address which may mint new tokens\r\n    address public minter;\r\n\r\n    /// @notice The timestamp after which minting may occur\r\n    uint public mintingAllowedAfter;\r\n\r\n    /// @notice Minimum time between mints\r\n    uint32 public constant minimumTimeBetweenMints = 1 days * 365;\r\n\r\n    /// @notice Cap on the percentage of totalSupply that can be minted at each mint\r\n    uint8 public constant mintCap = 2;\r\n\r\n    /// @notice Allowance amounts on behalf of others\r\n    mapping (address => mapping (address => uint96)) internal allowances;\r\n\r\n    /// @notice Official record of token balances for each account\r\n    mapping (address => uint96) internal balances;\r\n\r\n    /// @notice A record of each accounts delegate\r\n    mapping (address => address) public delegates;\r\n\r\n    /// @notice A checkpoint for marking number of votes from a given block\r\n    struct Checkpoint {\r\n        uint32 fromBlock;\r\n        uint96 votes;\r\n    }\r\n\r\n    /// @notice A record of votes checkpoints for each account, by index\r\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\r\n\r\n    /// @notice The number of checkpoints for each account\r\n    mapping (address => uint32) public numCheckpoints;\r\n\r\n    /// @notice The EIP-712 typehash for the contract's domain\r\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\r\n\r\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\r\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\r\n\r\n    /// @notice The EIP-712 typehash for the permit struct used by the contract\r\n    bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\r\n\r\n    /// @notice A record of states for signing / validating signatures\r\n    mapping (address => uint) public nonces;\r\n\r\n    /// @notice An event thats emitted when the minter address is changed\r\n    event MinterChanged(address minter, address newMinter);\r\n\r\n    /// @notice An event thats emitted when an account changes its delegate\r\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\r\n\r\n    /// @notice An event thats emitted when a delegate account's vote balance changes\r\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\r\n\r\n    /// @notice The standard EIP-20 transfer event\r\n    event Transfer(address indexed from, address indexed to, uint256 amount);\r\n\r\n    /// @notice The standard EIP-20 approval event\r\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\r\n\r\n    /**\r\n     * @notice Construct a new Faisaa token\r\n     * @param account The initial account to grant all the tokens\r\n     * @param minter_ The account with minting ability\r\n     * @param mintingAllowedAfter_ The timestamp after which minting may occur\r\n     */\r\n    constructor(address account, address minter_, uint mintingAllowedAfter_) public {\r\n        require(mintingAllowedAfter_ >= block.timestamp, \"Faisaa::constructor: minting can only begin after deployment\");\r\n\r\n        balances[account] = uint96(totalSupply);\r\n        emit Transfer(address(0), account, totalSupply);\r\n        minter = minter_;\r\n        emit MinterChanged(address(0), minter);\r\n        mintingAllowedAfter = mintingAllowedAfter_;\r\n    }\r\n\r\n    /**\r\n     * @notice Change the minter address\r\n     * @param minter_ The address of the new minter\r\n     */\r\n    function setMinter(address minter_) external {\r\n        require(msg.sender == minter, \"Faisaa::setMinter: only the minter can change the minter address\");\r\n        emit MinterChanged(minter, minter_);\r\n        minter = minter_;\r\n    }\r\n\r\n    /**\r\n     * @notice Mint new tokens\r\n     * @param dst The address of the destination account\r\n     * @param rawAmount The number of tokens to be minted\r\n     */\r\n    function mint(address dst, uint rawAmount) external {\r\n        require(msg.sender == minter, \"Faisaa::mint: only the minter can mint\");\r\n        require(block.timestamp >= mintingAllowedAfter, \"Faisaa::mint: minting not allowed yet\");\r\n        require(dst != address(0), \"Faisaa::mint: cannot transfer to the zero address\");\r\n\r\n        // record the mint\r\n        mintingAllowedAfter = SafeMath.add(block.timestamp, minimumTimeBetweenMints);\r\n\r\n        // mint the amount\r\n        uint96 amount = safe96(rawAmount, \"Faisaa::mint: amount exceeds 96 bits\");\r\n        //require(amount <= SafeMath.div(SafeMath.mul(totalSupply, mintCap), 100), \"Faisaa::mint: exceeded mint cap\");\r\n        totalSupply = safe96(SafeMath.add(totalSupply, amount), \"Faisaa::mint: totalSupply exceeds 96 bits\");\r\n\r\n        // transfer the amount to the recipient\r\n        balances[dst] = add96(balances[dst], amount, \"Faisaa::mint: transfer amount overflows\");\r\n        emit Transfer(address(0), dst, amount);\r\n\r\n        // move delegates\r\n        _moveDelegates(address(0), delegates[dst], amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\r\n     * @param account The address of the account holding the funds\r\n     * @param spender The address of the account spending the funds\r\n     * @return The number of tokens approved\r\n     */\r\n    function allowance(address account, address spender) external view returns (uint) {\r\n        return allowances[account][spender];\r\n    }\r\n\r\n    /**\r\n     * @notice Approve `spender` to transfer up to `amount` from `src`\r\n     * @dev This will overwrite the approval amount for `spender`\r\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\r\n     * @param spender The address of the account which may transfer tokens\r\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\r\n     * @return Whether or not the approval succeeded\r\n     */\r\n    function approve(address spender, uint rawAmount) external returns (bool) {\r\n        uint96 amount;\r\n        if (rawAmount == uint(-1)) {\r\n            amount = uint96(-1);\r\n        } else {\r\n            amount = safe96(rawAmount, \"Faisaa::approve: amount exceeds 96 bits\");\r\n        }\r\n\r\n        allowances[msg.sender][spender] = amount;\r\n\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice Triggers an approval from owner to spends\r\n     * @param owner The address to approve from\r\n     * @param spender The address to be approved\r\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\r\n     * @param deadline The time at which to expire the signature\r\n     * @param v The recovery byte of the signature\r\n     * @param r Half of the ECDSA signature pair\r\n     * @param s Half of the ECDSA signature pair\r\n     */\r\n    function permit(address owner, address spender, uint rawAmount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r\n        uint96 amount;\r\n        if (rawAmount == uint(-1)) {\r\n            amount = uint96(-1);\r\n        } else {\r\n            amount = safe96(rawAmount, \"Faisaa::permit: amount exceeds 96 bits\");\r\n        }\r\n\r\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\r\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline));\r\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\r\n        address signatory = ecrecover(digest, v, r, s);\r\n        require(signatory != address(0), \"Faisaa::permit: invalid signature\");\r\n        require(signatory == owner, \"Faisaa::permit: unauthorized\");\r\n        require(now <= deadline, \"Faisaa::permit: signature expired\");\r\n\r\n        allowances[owner][spender] = amount;\r\n\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Get the number of tokens held by the `account`\r\n     * @param account The address of the account to get the balance of\r\n     * @return The number of tokens held\r\n     */\r\n    function balanceOf(address account) external view returns (uint) {\r\n        return balances[account];\r\n    }\r\n\r\n    /**\r\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\r\n     * @param dst The address of the destination account\r\n     * @param rawAmount The number of tokens to transfer\r\n     * @return Whether or not the transfer succeeded\r\n     */\r\n    function transfer(address dst, uint rawAmount) external returns (bool) {\r\n        uint96 amount = safe96(rawAmount, \"Faisaa::transfer: amount exceeds 96 bits\");\r\n        _transferTokens(msg.sender, dst, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice Transfer `amount` tokens from `src` to `dst`\r\n     * @param src The address of the source account\r\n     * @param dst The address of the destination account\r\n     * @param rawAmount The number of tokens to transfer\r\n     * @return Whether or not the transfer succeeded\r\n     */\r\n    function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {\r\n        address spender = msg.sender;\r\n        uint96 spenderAllowance = allowances[src][spender];\r\n        uint96 amount = safe96(rawAmount, \"Faisaa::approve: amount exceeds 96 bits\");\r\n\r\n        if (spender != src && spenderAllowance != uint96(-1)) {\r\n            uint96 newAllowance = sub96(spenderAllowance, amount, \"Faisaa::transferFrom: transfer amount exceeds spender allowance\");\r\n            allowances[src][spender] = newAllowance;\r\n\r\n            emit Approval(src, spender, newAllowance);\r\n        }\r\n\r\n        _transferTokens(src, dst, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice Delegate votes from `msg.sender` to `delegatee`\r\n     * @param delegatee The address to delegate votes to\r\n     */\r\n    function delegate(address delegatee) public {\r\n        return _delegate(msg.sender, delegatee);\r\n    }\r\n\r\n    /**\r\n     * @notice Delegates votes from signatory to `delegatee`\r\n     * @param delegatee The address to delegate votes to\r\n     * @param nonce The contract state required to match the signature\r\n     * @param expiry The time at which to expire the signature\r\n     * @param v The recovery byte of the signature\r\n     * @param r Half of the ECDSA signature pair\r\n     * @param s Half of the ECDSA signature pair\r\n     */\r\n    function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\r\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\r\n        bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\r\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\r\n        address signatory = ecrecover(digest, v, r, s);\r\n        require(signatory != address(0), \"Faisaa::delegateBySig: invalid signature\");\r\n        require(nonce == nonces[signatory]++, \"Faisaa::delegateBySig: invalid nonce\");\r\n        require(now <= expiry, \"Faisaa::delegateBySig: signature expired\");\r\n        return _delegate(signatory, delegatee);\r\n    }\r\n\r\n    /**\r\n     * @notice Gets the current votes balance for `account`\r\n     * @param account The address to get votes balance\r\n     * @return The number of current votes for `account`\r\n     */\r\n    function getCurrentVotes(address account) external view returns (uint96) {\r\n        uint32 nCheckpoints = numCheckpoints[account];\r\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\r\n    }\r\n\r\n    /**\r\n     * @notice Determine the prior number of votes for an account as of a block number\r\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\r\n     * @param account The address of the account to check\r\n     * @param blockNumber The block number to get the vote balance at\r\n     * @return The number of votes the account had as of the given block\r\n     */\r\n    function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {\r\n        require(blockNumber < block.number, \"Faisaa::getPriorVotes: not yet determined\");\r\n\r\n        uint32 nCheckpoints = numCheckpoints[account];\r\n        if (nCheckpoints == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // First check most recent balance\r\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\r\n            return checkpoints[account][nCheckpoints - 1].votes;\r\n        }\r\n\r\n        // Next check implicit zero balance\r\n        if (checkpoints[account][0].fromBlock > blockNumber) {\r\n            return 0;\r\n        }\r\n\r\n        uint32 lower = 0;\r\n        uint32 upper = nCheckpoints - 1;\r\n        while (upper > lower) {\r\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\r\n            Checkpoint memory cp = checkpoints[account][center];\r\n            if (cp.fromBlock == blockNumber) {\r\n                return cp.votes;\r\n            } else if (cp.fromBlock < blockNumber) {\r\n                lower = center;\r\n            } else {\r\n                upper = center - 1;\r\n            }\r\n        }\r\n        return checkpoints[account][lower].votes;\r\n    }\r\n\r\n    function _delegate(address delegator, address delegatee) internal {\r\n        address currentDelegate = delegates[delegator];\r\n        uint96 delegatorBalance = balances[delegator];\r\n        delegates[delegator] = delegatee;\r\n\r\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\r\n\r\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\r\n    }\r\n\r\n    function _transferTokens(address src, address dst, uint96 amount) internal {\r\n        require(src != address(0), \"Faisaa::_transferTokens: cannot transfer from the zero address\");\r\n        require(dst != address(0), \"Faisaa::_transferTokens: cannot transfer to the zero address\");\r\n\r\n        balances[src] = sub96(balances[src], amount, \"Faisaa::_transferTokens: transfer amount exceeds balance\");\r\n        balances[dst] = add96(balances[dst], amount, \"Faisaa::_transferTokens: transfer amount overflows\");\r\n        emit Transfer(src, dst, amount);\r\n\r\n        _moveDelegates(delegates[src], delegates[dst], amount);\r\n    }\r\n\r\n    function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {\r\n        if (srcRep != dstRep && amount > 0) {\r\n            if (srcRep != address(0)) {\r\n                uint32 srcRepNum = numCheckpoints[srcRep];\r\n                uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\r\n                uint96 srcRepNew = sub96(srcRepOld, amount, \"Faisaa::_moveVotes: vote amount underflows\");\r\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\r\n            }\r\n\r\n            if (dstRep != address(0)) {\r\n                uint32 dstRepNum = numCheckpoints[dstRep];\r\n                uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\r\n                uint96 dstRepNew = add96(dstRepOld, amount, \"Faisaa::_moveVotes: vote amount overflows\");\r\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\r\n            }\r\n        }\r\n    }\r\n\r\n    function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {\r\n      uint32 blockNumber = safe32(block.number, \"Faisaa::_writeCheckpoint: block number exceeds 32 bits\");\r\n\r\n      if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r\n          checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\r\n      } else {\r\n          checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\r\n          numCheckpoints[delegatee] = nCheckpoints + 1;\r\n      }\r\n\r\n      emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\r\n    }\r\n\r\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\r\n        require(n < 2**32, errorMessage);\r\n        return uint32(n);\r\n    }\r\n\r\n    function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {\r\n        require(n < 2**96, errorMessage);\r\n        return uint96(n);\r\n    }\r\n\r\n    function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\r\n        uint96 c = a + b;\r\n        require(c >= a, errorMessage);\r\n        return c;\r\n    }\r\n\r\n    function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\r\n        require(b <= a, errorMessage);\r\n        return a - b;\r\n    }\r\n\r\n    function getChainId() internal pure returns (uint) {\r\n        uint256 chainId;\r\n        assembly { chainId := chainid() }\r\n        return chainId;\r\n    }\r\n}"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "pragma solidity =0.5.16;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, 'ds-math-add-overflow');\n    }\n\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\n    }\n\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 9999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/FaisaaToken.sol": {
				"Faisaa": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "minter_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "mintingAllowedAfter_",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newMinter",
									"type": "address"
								}
							],
							"name": "MinterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint96",
									"name": "votes",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minimumTimeBetweenMints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "mintCap",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "mintingAllowedAfter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "minter_",
									"type": "address"
								}
							],
							"name": "setMinter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"params": {
									"account": "The address of the account holding the funds",
									"spender": "The address of the account spending the funds"
								},
								"return": "The number of tokens approved"
							},
							"approve(address,uint256)": {
								"details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
								"params": {
									"rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
									"spender": "The address of the account which may transfer tokens"
								},
								"return": "Whether or not the approval succeeded"
							},
							"balanceOf(address)": {
								"params": {
									"account": "The address of the account to get the balance of"
								},
								"return": "The number of tokens held"
							},
							"constructor": {
								"params": {
									"account": "The initial account to grant all the tokens",
									"minter_": "The account with minting ability",
									"mintingAllowedAfter_": "The timestamp after which minting may occur"
								}
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"return": "The number of current votes for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"return": "The number of votes the account had as of the given block"
							},
							"mint(address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to be minted"
								}
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The time at which to expire the signature",
									"owner": "The address to approve from",
									"r": "Half of the ECDSA signature pair",
									"rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
									"s": "Half of the ECDSA signature pair",
									"spender": "The address to be approved",
									"v": "The recovery byte of the signature"
								}
							},
							"setMinter(address)": {
								"params": {
									"minter_": "The address of the new minter"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer"
								},
								"return": "Whether or not the transfer succeeded"
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer",
									"src": "The address of the source account"
								},
								"return": "Whether or not the transfer succeeded"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/FaisaaToken.sol\":99:17348  contract Faisaa {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FaisaaToken.sol\":499:513  100_000_000e18 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"contracts/FaisaaToken.sol\":473:513  uint public totalSupply = 100_000_000e18 */\n  0x00\n  sstore\n    /* \"contracts/FaisaaToken.sol\":3568:4018  constructor(address account, address minter_, uint mintingAllowedAfter_) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/FaisaaToken.sol\":3568:4018  constructor(address account, address minter_, uint mintingAllowedAfter_) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x60\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n  pop\n    /* \"contracts/FaisaaToken.sol\":3568:4018  constructor(address account, address minter_, uint mintingAllowedAfter_) public {\r... */\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  swap1\n  swap3\n  add\n  mload\n  swap1\n  swap2\n  swap1\n    /* \"contracts/FaisaaToken.sol\":3691:3706  block.timestamp */\n  timestamp\n    /* \"contracts/FaisaaToken.sol\":3667:3706  mintingAllowedAfter_ >= block.timestamp */\n  dup2\n  lt\n  iszero\n    /* \"contracts/FaisaaToken.sol\":3659:3771  require(mintingAllowedAfter_ >= block.timestamp, \"Faisaa::constructor: minting can only begin after deployment\") */\n  tag_5\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x3c\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_1906b60f827988cd8840816d324d3ccfb646804467122c5fcf48b849b7cb54bb\n  0x3c\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_5:\n    /* \"contracts/FaisaaToken.sol\":3811:3822  totalSupply */\n  0x00\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/FaisaaToken.sol\":3784:3801  balances[account] */\n  dup6\n  and\n  dup1\n  dup4\n  mstore\n    /* \"contracts/FaisaaToken.sol\":3784:3792  balances */\n  0x04\n    /* \"contracts/FaisaaToken.sol\":3784:3801  balances[account] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup6\n  keccak256\n    /* \"contracts/FaisaaToken.sol\":3784:3823  balances[account] = uint96(totalSupply) */\n  dup1\n  sload\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  sub(shl(0x60, 0x01), 0x01)\n  swap1\n  swap6\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/FaisaaToken.sol\":3869:3880  totalSupply */\n  dup4\n  sload\n    /* \"contracts/FaisaaToken.sol\":3839:3881  Transfer(address(0), account, totalSupply) */\n  dup4\n  mload\n  swap1\n  dup2\n  mstore\n  swap3\n  mload\n    /* \"contracts/FaisaaToken.sol\":3784:3801  balances[account] */\n  swap2\n  swap4\n    /* \"contracts/FaisaaToken.sol\":3811:3822  totalSupply */\n  swap3\n    /* \"contracts/FaisaaToken.sol\":3839:3881  Transfer(address(0), account, totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  swap1\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"contracts/FaisaaToken.sol\":3892:3898  minter */\n  0x01\n    /* \"contracts/FaisaaToken.sol\":3892:3908  minter = minter_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap2\n  dup3\n  swap1\n  sstore\n    /* \"contracts/FaisaaToken.sol\":3924:3957  MinterChanged(address(0), minter) */\n  0x40\n  dup1\n  mload\n  0x00\n  dup2\n  mstore\n    /* \"contracts/FaisaaToken.sol\":3950:3956  minter */\n  swap3\n  swap1\n  swap2\n  and\n    /* \"contracts/FaisaaToken.sol\":3924:3957  MinterChanged(address(0), minter) */\n  0x20\n  dup4\n  add\n  mstore\n  dup1\n  mload\n  0x3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log1\n    /* \"contracts/FaisaaToken.sol\":3968:3987  mintingAllowedAfter */\n  0x02\n    /* \"contracts/FaisaaToken.sol\":3968:4010  mintingAllowedAfter = mintingAllowedAfter_ */\n  sstore\n  pop\n  pop\n    /* \"contracts/FaisaaToken.sol\":99:17348  contract Faisaa {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_1906b60f827988cd8840816d324d3ccfb646804467122c5fcf48b849b7cb54bb 4661697361613a3a636f6e7374727563746f723a206d696e74696e672063616e206f6e6c7920626567696e206166746572206465706c6f796d656e74\n\nsub_0: assembly {\n        /* \"contracts/FaisaaToken.sol\":99:17348  contract Faisaa {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/FaisaaToken.sol\":99:17348  contract Faisaa {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6fcfff45\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb4b5ea57\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfca3b5aa\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xb4b5ea57\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x782d6fe1\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x6fcfff45\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x76c71ca1\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x30adf81f\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x40c10f19\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5c11d62f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x30adf81f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x30b36cef\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x18160ddd\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x07546172\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FaisaaToken.sol\":172:210  string public constant name = \"Faisaa\" */\n    tag_3:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_39:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_39)\n    tag_41:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/FaisaaToken.sol\":172:210  string public constant name = \"Faisaa\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FaisaaToken.sol\":595:616  address public minter */\n    tag_4:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/FaisaaToken.sol\":6547:6968  function approve(address spender, uint rawAmount) external returns (bool) {\r... */\n    tag_5:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_46:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":6547:6968  function approve(address spender, uint rawAmount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_47\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/FaisaaToken.sol\":473:513  uint public totalSupply = 100_000_000e18 */\n    tag_6:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/FaisaaToken.sol\":1824:1946  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_7:\n      tag_48\n      tag_51\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":9645:10321  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {\r... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":9645:10321  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_54\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":2247:2384  bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n    tag_9:\n      tag_48\n      tag_56\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":686:717  uint public mintingAllowedAfter */\n    tag_10:\n      tag_48\n      tag_58\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":374:409  uint8 public constant decimals = 18 */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/FaisaaToken.sol\":4548:5629  function mint(address dst, uint rawAmount) external {\r... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_62:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":4548:5629  function mint(address dst, uint rawAmount) external {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/FaisaaToken.sol\":1274:1319  mapping (address => address) public delegates */\n    tag_13:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n      pop\n        /* \"contracts/FaisaaToken.sol\":1274:1319  mapping (address => address) public delegates */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_66\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":770:831  uint32 public constant minimumTimeBetweenMints = 1 days * 365 */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      0x40\n      dup1\n      mload\n      0xffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/FaisaaToken.sol\":10469:10571  function delegate(address delegatee) public {\r... */\n    tag_15:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_70:\n      pop\n        /* \"contracts/FaisaaToken.sol\":10469:10571  function delegate(address delegatee) public {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_71\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":1702:1751  mapping (address => uint32) public numCheckpoints */\n    tag_16:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_73:\n      pop\n        /* \"contracts/FaisaaToken.sol\":1702:1751  mapping (address => uint32) public numCheckpoints */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_74\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":8723:8831  function balanceOf(address account) external view returns (uint) {\r... */\n    tag_17:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_76:\n      pop\n        /* \"contracts/FaisaaToken.sol\":8723:8831  function balanceOf(address account) external view returns (uint) {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_77\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":926:959  uint8 public constant mintCap = 2 */\n    tag_18:\n      tag_59\n      tag_79\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":12654:13874  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {\r... */\n    tag_19:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_81:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":12654:13874  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_82\n      jump\t// in\n    tag_80:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/FaisaaToken.sol\":2465:2504  mapping (address => uint) public nonces */\n    tag_20:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n      pop\n        /* \"contracts/FaisaaToken.sol\":2465:2504  mapping (address => uint) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_85\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":271:311  string public constant symbol = \"FAISAA\" */\n    tag_21:\n      tag_37\n      tag_87\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":9095:9335  function transfer(address dst, uint rawAmount) external returns (bool) {\r... */\n    tag_22:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_93\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_93:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":9095:9335  function transfer(address dst, uint rawAmount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_94\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":12001:12223  function getCurrentVotes(address account) external view returns (uint96) {\r... */\n    tag_23:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_96\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_96:\n      pop\n        /* \"contracts/FaisaaToken.sol\":12001:12223  function getCurrentVotes(address account) external view returns (uint96) {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_97\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":11005:11800  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\r... */\n    tag_24:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xc0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_99:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":11005:11800  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x60\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x80\n      dup2\n      add\n      calldataload\n      swap1\n      0xa0\n      add\n      calldataload\n      tag_100\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":7458:8520  function permit(address owner, address spender, uint rawAmount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_25:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_102:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":7458:8520  function permit(address owner, address spender, uint rawAmount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_103\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":5933:6069  function allowance(address account, address spender) external view returns (uint) {\r... */\n    tag_26:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_105\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_105:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":5933:6069  function allowance(address account, address spender) external view returns (uint) {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_106\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":2040:2157  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_27:\n      tag_48\n      tag_108\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":1563:1633  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_28:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_110\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_110:\n      pop\n        /* \"contracts/FaisaaToken.sol\":1563:1633  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      0xffffffff\n      and\n      tag_111\n      jump\t// in\n    tag_109:\n      0x40\n      dup1\n      mload\n      0xffffffff\n      swap1\n      swap4\n      and\n      dup4\n      mstore\n      0xffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"contracts/FaisaaToken.sol\":4139:4373  function setMinter(address minter_) external {\r... */\n    tag_29:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_113\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_113:\n      pop\n        /* \"contracts/FaisaaToken.sol\":4139:4373  function setMinter(address minter_) external {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_114\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":172:210  string public constant name = \"Faisaa\" */\n    tag_38:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4661697361610000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":595:616  address public minter */\n    tag_44:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":6547:6968  function approve(address spender, uint rawAmount) external returns (bool) {\r... */\n    tag_47:\n        /* \"contracts/FaisaaToken.sol\":6615:6619  bool */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":6632:6645  uint96 amount */\n      dup1\n      not(0x00)\n        /* \"contracts/FaisaaToken.sol\":6660:6669  rawAmount */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":6660:6681  rawAmount == uint(-1) */\n      eq\n        /* \"contracts/FaisaaToken.sol\":6656:6831  if (rawAmount == uint(-1)) {\r... */\n      iszero\n      tag_116\n      jumpi\n      pop\n      not(0x00)\n      jump(tag_117)\n    tag_116:\n        /* \"contracts/FaisaaToken.sol\":6759:6819  safe96(rawAmount, \"Faisaa::approve: amount exceeds 96 bits\") */\n      tag_118\n        /* \"contracts/FaisaaToken.sol\":6766:6775  rawAmount */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":6759:6819  safe96(rawAmount, \"Faisaa::approve: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_428c16dcdda4166530f34a26c4e94fb86da1569e2a9829862ee509d219284dd8\n      0x27\n      swap2\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":6759:6765  safe96 */\n      tag_119\n        /* \"contracts/FaisaaToken.sol\":6759:6819  safe96(rawAmount, \"Faisaa::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_118:\n        /* \"contracts/FaisaaToken.sol\":6750:6819  amount = safe96(rawAmount, \"Faisaa::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":6656:6831  if (rawAmount == uint(-1)) {\r... */\n    tag_117:\n        /* \"contracts/FaisaaToken.sol\":6854:6864  msg.sender */\n      caller\n        /* \"contracts/FaisaaToken.sol\":6843:6865  allowances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":6843:6853  allowances */\n      0x03\n        /* \"contracts/FaisaaToken.sol\":6843:6865  allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":6843:6874  allowances[msg.sender][spender] */\n      dup10\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":6843:6883  allowances[msg.sender][spender] = amount */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n      and\n      0xffffffffffffffffffffffff\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/FaisaaToken.sol\":6901:6938  Approval(msg.sender, spender, amount) */\n      dup2\n      mload\n      swap1\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/FaisaaToken.sol\":6843:6874  allowances[msg.sender][spender] */\n      swap3\n      swap4\n        /* \"contracts/FaisaaToken.sol\":6854:6864  msg.sender */\n      swap3\n        /* \"contracts/FaisaaToken.sol\":6901:6938  Approval(msg.sender, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/FaisaaToken.sol\":6956:6960  true */\n      0x01\n        /* \"contracts/FaisaaToken.sol\":6949:6960  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/FaisaaToken.sol\":6547:6968  function approve(address spender, uint rawAmount) external returns (bool) {\r... */\n    tag_115:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":473:513  uint public totalSupply = 100_000_000e18 */\n    tag_49:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":1824:1946  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_51:\n        /* \"contracts/FaisaaToken.sol\":1866:1946  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      0x43\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      dup3\n      codecopy\n      0x43\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":1824:1946  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":9645:10321  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {\r... */\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":9809:9824  allowances[src] */\n      dup4\n      and\n        /* \"contracts/FaisaaToken.sol\":9727:9731  bool */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":9809:9824  allowances[src] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":9809:9819  allowances */\n      0x03\n        /* \"contracts/FaisaaToken.sol\":9809:9824  allowances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":9762:9772  msg.sender */\n      caller\n        /* \"contracts/FaisaaToken.sol\":9809:9833  allowances[src][spender] */\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"contracts/FaisaaToken.sol\":9860:9920  safe96(rawAmount, \"Faisaa::approve: amount exceeds 96 bits\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x27\n      dup1\n      dup5\n      mstore\n        /* \"contracts/FaisaaToken.sol\":9762:9772  msg.sender */\n      swap2\n      swap4\n        /* \"contracts/FaisaaToken.sol\":9809:9833  allowances[src][spender] */\n      0xffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap3\n        /* \"contracts/FaisaaToken.sol\":9727:9731  bool */\n      dup6\n      swap3\n        /* \"contracts/FaisaaToken.sol\":9860:9920  safe96(rawAmount, \"Faisaa::approve: amount exceeds 96 bits\") */\n      tag_121\n      swap3\n        /* \"contracts/FaisaaToken.sol\":9867:9876  rawAmount */\n      dup9\n      swap3\n        /* \"contracts/FaisaaToken.sol\":9860:9920  safe96(rawAmount, \"Faisaa::approve: amount exceeds 96 bits\") */\n      swap2\n      swap1\n      data_428c16dcdda4166530f34a26c4e94fb86da1569e2a9829862ee509d219284dd8\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":9860:9866  safe96 */\n      tag_119\n        /* \"contracts/FaisaaToken.sol\":9860:9920  safe96(rawAmount, \"Faisaa::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_121:\n        /* \"contracts/FaisaaToken.sol\":9844:9920  uint96 amount = safe96(rawAmount, \"Faisaa::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":9948:9951  src */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":9937:9951  spender != src */\n      and\n        /* \"contracts/FaisaaToken.sol\":9937:9944  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":9937:9951  spender != src */\n      and\n      eq\n      iszero\n        /* \"contracts/FaisaaToken.sol\":9937:9985  spender != src && spenderAllowance != uint96(-1) */\n      dup1\n      iszero\n      tag_122\n      jumpi\n      pop\n        /* \"contracts/FaisaaToken.sol\":9955:9985  spenderAllowance != uint96(-1) */\n      0xffffffffffffffffffffffff\n      dup3\n      dup2\n      and\n      eq\n      iszero\n        /* \"contracts/FaisaaToken.sol\":9937:9985  spender != src && spenderAllowance != uint96(-1) */\n    tag_122:\n        /* \"contracts/FaisaaToken.sol\":9933:10246  if (spender != src && spenderAllowance != uint96(-1)) {\r... */\n      iszero\n      tag_123\n      jumpi\n        /* \"contracts/FaisaaToken.sol\":10002:10021  uint96 newAllowance */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":10024:10122  sub96(spenderAllowance, amount, \"Faisaa::transferFrom: transfer amount exceeds spender allowance\") */\n      tag_124\n        /* \"contracts/FaisaaToken.sol\":10030:10046  spenderAllowance */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":10048:10054  amount */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":10024:10122  sub96(spenderAllowance, amount, \"Faisaa::transferFrom: transfer amount exceeds spender allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x3f\n      dup2\n      mstore\n      0x20\n      add\n      data_6e6266f1ed26838a519be3251a5adc1b708c96f88b2d9fca8c7664416cc89ae8\n      0x3f\n      swap2\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":10024:10029  sub96 */\n      tag_125\n        /* \"contracts/FaisaaToken.sol\":10024:10122  sub96(spenderAllowance, amount, \"Faisaa::transferFrom: transfer amount exceeds spender allowance\") */\n      jump\t// in\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":10137:10152  allowances[src] */\n      dup10\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":10137:10147  allowances */\n      0x03\n        /* \"contracts/FaisaaToken.sol\":10137:10152  allowances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":10137:10161  allowances[src][spender] */\n      swap5\n      dup11\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":10137:10176  allowances[src][spender] = newAllowance */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n      and\n      0xffffffffffffffffffffffff\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/FaisaaToken.sol\":10198:10234  Approval(src, spender, newAllowance) */\n      dup3\n      mload\n      swap1\n      dup2\n      mstore\n      swap2\n      mload\n        /* \"contracts/FaisaaToken.sol\":10137:10176  allowances[src][spender] = newAllowance */\n      swap5\n      swap6\n      pop\n        /* \"contracts/FaisaaToken.sol\":10137:10161  allowances[src][spender] */\n      swap3\n      swap4\n        /* \"contracts/FaisaaToken.sol\":10137:10152  allowances[src] */\n      swap2\n      swap3\n        /* \"contracts/FaisaaToken.sol\":10198:10234  Approval(src, spender, newAllowance) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/FaisaaToken.sol\":9933:10246  if (spender != src && spenderAllowance != uint96(-1)) {\r... */\n      pop\n    tag_123:\n        /* \"contracts/FaisaaToken.sol\":10258:10291  _transferTokens(src, dst, amount) */\n      tag_126\n        /* \"contracts/FaisaaToken.sol\":10274:10277  src */\n      dup8\n        /* \"contracts/FaisaaToken.sol\":10279:10282  dst */\n      dup8\n        /* \"contracts/FaisaaToken.sol\":10284:10290  amount */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":10258:10273  _transferTokens */\n      tag_127\n        /* \"contracts/FaisaaToken.sol\":10258:10291  _transferTokens(src, dst, amount) */\n      jump\t// in\n    tag_126:\n      pop\n        /* \"contracts/FaisaaToken.sol\":10309:10313  true */\n      0x01\n      swap7\n        /* \"contracts/FaisaaToken.sol\":9645:10321  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {\r... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":2247:2384  bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n    tag_56:\n        /* \"contracts/FaisaaToken.sol\":2289:2384  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      mload(0x40)\n      dup1\n      0x52\n      data_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n      dup3\n      codecopy\n      0x52\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":2247:2384  bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":686:717  uint public mintingAllowedAfter */\n    tag_58:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":374:409  uint8 public constant decimals = 18 */\n    tag_60:\n        /* \"contracts/FaisaaToken.sol\":407:409  18 */\n      0x12\n        /* \"contracts/FaisaaToken.sol\":374:409  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":4548:5629  function mint(address dst, uint rawAmount) external {\r... */\n    tag_63:\n        /* \"contracts/FaisaaToken.sol\":4633:4639  minter */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/FaisaaToken.sol\":4619:4629  msg.sender */\n      caller\n        /* \"contracts/FaisaaToken.sol\":4619:4639  msg.sender == minter */\n      eq\n        /* \"contracts/FaisaaToken.sol\":4611:4682  require(msg.sender == minter, \"Faisaa::mint: only the minter can mint\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_db5d92e49fd459b5013588af7233493889e9b54ed887d70a2e2719b899396d06\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/FaisaaToken.sol\":4720:4739  mintingAllowedAfter */\n      sload(0x02)\n        /* \"contracts/FaisaaToken.sol\":4701:4716  block.timestamp */\n      timestamp\n        /* \"contracts/FaisaaToken.sol\":4701:4739  block.timestamp >= mintingAllowedAfter */\n      lt\n      iszero\n        /* \"contracts/FaisaaToken.sol\":4693:4781  require(block.timestamp >= mintingAllowedAfter, \"Faisaa::mint: minting not allowed yet\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_47cfc577cce83a034131ee7e3a3f248dd2402932183c3369404366188973b247\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":4800:4817  dst != address(0) */\n      dup3\n      and\n        /* \"contracts/FaisaaToken.sol\":4792:4871  require(dst != address(0), \"Faisaa::mint: cannot transfer to the zero address\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x31\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_06ee8fd590cdc34084a0a93806ff7f052e42252de31367891afc0c9c911dcbe5\n      0x31\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/FaisaaToken.sol\":4934:4988  SafeMath.add(block.timestamp, minimumTimeBetweenMints) */\n      tag_132\n        /* \"contracts/FaisaaToken.sol\":4947:4962  block.timestamp */\n      timestamp\n        /* \"contracts/FaisaaToken.sol\":819:831  1 days * 365 */\n      0x01e13380\n        /* \"contracts/FaisaaToken.sol\":4934:4946  SafeMath.add */\n      tag_133\n        /* \"contracts/FaisaaToken.sol\":4934:4988  SafeMath.add(block.timestamp, minimumTimeBetweenMints) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/FaisaaToken.sol\":4912:4931  mintingAllowedAfter */\n      0x02\n        /* \"contracts/FaisaaToken.sol\":4912:4988  mintingAllowedAfter = SafeMath.add(block.timestamp, minimumTimeBetweenMints) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FaisaaToken.sol\":5029:5042  uint96 amount */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":5045:5102  safe96(rawAmount, \"Faisaa::mint: amount exceeds 96 bits\") */\n      tag_134\n        /* \"contracts/FaisaaToken.sol\":5052:5061  rawAmount */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":5045:5102  safe96(rawAmount, \"Faisaa::mint: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_930851ea43cac2873108cbbc75da47df319dfb5d34d9bc02c61e0c540ad465f8\n      0x24\n      swap2\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":5045:5051  safe96 */\n      tag_119\n        /* \"contracts/FaisaaToken.sol\":5045:5102  safe96(rawAmount, \"Faisaa::mint: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_134:\n        /* \"contracts/FaisaaToken.sol\":5029:5102  uint96 amount = safe96(rawAmount, \"Faisaa::mint: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":5247:5333  safe96(SafeMath.add(totalSupply, amount), \"Faisaa::mint: totalSupply exceeds 96 bits\") */\n      tag_135\n        /* \"contracts/FaisaaToken.sol\":5254:5287  SafeMath.add(totalSupply, amount) */\n      tag_136\n        /* \"contracts/FaisaaToken.sol\":5267:5278  totalSupply */\n      sload(0x00)\n        /* \"contracts/FaisaaToken.sol\":5280:5286  amount */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":5254:5287  SafeMath.add(totalSupply, amount) */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FaisaaToken.sol\":5254:5266  SafeMath.add */\n      tag_133\n        /* \"contracts/FaisaaToken.sol\":5254:5287  SafeMath.add(totalSupply, amount) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/FaisaaToken.sol\":5247:5333  safe96(SafeMath.add(totalSupply, amount), \"Faisaa::mint: totalSupply exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      data_a164aaf472e5193ae08911c43f0e932009bd6899893d2553e9b4bae60bf5dbf4\n      0x29\n      swap2\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":5247:5253  safe96 */\n      tag_119\n        /* \"contracts/FaisaaToken.sol\":5247:5333  safe96(SafeMath.add(totalSupply, amount), \"Faisaa::mint: totalSupply exceeds 96 bits\") */\n      jump\t// in\n    tag_135:\n        /* \"contracts/FaisaaToken.sol\":5233:5333  totalSupply = safe96(SafeMath.add(totalSupply, amount), \"Faisaa::mint: totalSupply exceeds 96 bits\") */\n      0xffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"contracts/FaisaaToken.sol\":5233:5244  totalSupply */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":5233:5333  totalSupply = safe96(SafeMath.add(totalSupply, amount), \"Faisaa::mint: totalSupply exceeds 96 bits\") */\n      swap1\n      dup2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":5417:5430  balances[dst] */\n      dup6\n      and\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":5417:5425  balances */\n      0x04\n        /* \"contracts/FaisaaToken.sol\":5417:5430  balances[dst] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/FaisaaToken.sol\":5411:5482  add96(balances[dst], amount, \"Faisaa::mint: transfer amount overflows\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x27\n      dup1\n      dup5\n      mstore\n      tag_137\n      swap5\n        /* \"contracts/FaisaaToken.sol\":5417:5430  balances[dst] */\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"contracts/FaisaaToken.sol\":5432:5438  amount */\n      dup6\n      swap3\n        /* \"contracts/FaisaaToken.sol\":5411:5482  add96(balances[dst], amount, \"Faisaa::mint: transfer amount overflows\") */\n      swap1\n      swap2\n      swap1\n      data_0ef9b1138f7fe56190f837aebeac3f83ce57900277382d69d32939dbf4287f14\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":5411:5416  add96 */\n      tag_138\n        /* \"contracts/FaisaaToken.sol\":5411:5482  add96(balances[dst], amount, \"Faisaa::mint: transfer amount overflows\") */\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":5395:5408  balances[dst] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":5395:5403  balances */\n      0x04\n        /* \"contracts/FaisaaToken.sol\":5395:5408  balances[dst] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":5395:5482  balances[dst] = add96(balances[dst], amount, \"Faisaa::mint: transfer amount overflows\") */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n      and\n      0xffffffffffffffffffffffff\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/FaisaaToken.sol\":5498:5531  Transfer(address(0), dst, amount) */\n      dup1\n      mload\n      swap5\n      dup7\n      and\n      dup6\n      mstore\n      mload\n        /* \"contracts/FaisaaToken.sol\":5395:5408  balances[dst] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"contracts/FaisaaToken.sol\":5498:5531  Transfer(address(0), dst, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":5598:5612  delegates[dst] */\n      dup1\n      dup5\n      and\n        /* \"contracts/FaisaaToken.sol\":5594:5595  0 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":5598:5612  delegates[dst] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":5598:5607  delegates */\n      0x05\n        /* \"contracts/FaisaaToken.sol\":5598:5612  delegates[dst] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/FaisaaToken.sol\":5571:5621  _moveDelegates(address(0), delegates[dst], amount) */\n      tag_139\n      swap3\n        /* \"contracts/FaisaaToken.sol\":5598:5612  delegates[dst] */\n      and\n        /* \"contracts/FaisaaToken.sol\":5614:5620  amount */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":5571:5585  _moveDelegates */\n      tag_140\n        /* \"contracts/FaisaaToken.sol\":5571:5621  _moveDelegates(address(0), delegates[dst], amount) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/FaisaaToken.sol\":4548:5629  function mint(address dst, uint rawAmount) external {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":1274:1319  mapping (address => address) public delegates */\n    tag_66:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":770:831  uint32 public constant minimumTimeBetweenMints = 1 days * 365 */\n    tag_68:\n        /* \"contracts/FaisaaToken.sol\":819:831  1 days * 365 */\n      0x01e13380\n        /* \"contracts/FaisaaToken.sol\":770:831  uint32 public constant minimumTimeBetweenMints = 1 days * 365 */\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":10469:10571  function delegate(address delegatee) public {\r... */\n    tag_71:\n        /* \"contracts/FaisaaToken.sol\":10531:10563  _delegate(msg.sender, delegatee) */\n      tag_142\n        /* \"contracts/FaisaaToken.sol\":10541:10551  msg.sender */\n      caller\n        /* \"contracts/FaisaaToken.sol\":10553:10562  delegatee */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":10531:10540  _delegate */\n      tag_143\n        /* \"contracts/FaisaaToken.sol\":10531:10563  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/FaisaaToken.sol\":10469:10571  function delegate(address delegatee) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":1702:1751  mapping (address => uint32) public numCheckpoints */\n    tag_74:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":8723:8831  function balanceOf(address account) external view returns (uint) {\r... */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":8806:8823  balances[account] */\n      and\n        /* \"contracts/FaisaaToken.sol\":8782:8786  uint */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":8806:8823  balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":8806:8814  balances */\n      0x04\n        /* \"contracts/FaisaaToken.sol\":8806:8823  balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffff\n      and\n      swap1\n        /* \"contracts/FaisaaToken.sol\":8723:8831  function balanceOf(address account) external view returns (uint) {\r... */\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":926:959  uint8 public constant mintCap = 2 */\n    tag_79:\n        /* \"contracts/FaisaaToken.sol\":958:959  2 */\n      0x02\n        /* \"contracts/FaisaaToken.sol\":926:959  uint8 public constant mintCap = 2 */\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":12654:13874  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {\r... */\n    tag_82:\n        /* \"contracts/FaisaaToken.sol\":12733:12739  uint96 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":12774:12786  block.number */\n      number\n        /* \"contracts/FaisaaToken.sol\":12760:12771  blockNumber */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":12760:12786  blockNumber < block.number */\n      lt\n        /* \"contracts/FaisaaToken.sol\":12752:12832  require(blockNumber < block.number, \"Faisaa::getPriorVotes: not yet determined\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e175c657e0f1e403f720ee547408b254751930f62507bddf82a8534bbb500da4\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":12867:12890  numCheckpoints[account] */\n      dup4\n      and\n        /* \"contracts/FaisaaToken.sol\":12845:12864  uint32 nCheckpoints */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":12867:12890  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":12867:12881  numCheckpoints */\n      0x07\n        /* \"contracts/FaisaaToken.sol\":12867:12890  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/FaisaaToken.sol\":12905:12922  nCheckpoints == 0 */\n      dup1\n        /* \"contracts/FaisaaToken.sol\":12901:12959  if (nCheckpoints == 0) {\r... */\n      tag_147\n      jumpi\n        /* \"contracts/FaisaaToken.sol\":12946:12947  0 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":12939:12947  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_115)\n        /* \"contracts/FaisaaToken.sol\":12901:12959  if (nCheckpoints == 0) {\r... */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":13019:13039  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":13019:13030  checkpoints */\n      0x06\n        /* \"contracts/FaisaaToken.sol\":13019:13039  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":13019:13057  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/FaisaaToken.sol\":13040:13056  nCheckpoints - 1 */\n      dup7\n      add\n        /* \"contracts/FaisaaToken.sol\":13019:13057  checkpoints[account][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":13019:13067  checkpoints[account][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"contracts/FaisaaToken.sol\":13019:13082  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      dup4\n      lt\n        /* \"contracts/FaisaaToken.sol\":13015:13162  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\r... */\n      tag_148\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":13106:13126  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":13106:13117  checkpoints */\n      0x06\n        /* \"contracts/FaisaaToken.sol\":13106:13126  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"contracts/FaisaaToken.sol\":13127:13143  nCheckpoints - 1 */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"contracts/FaisaaToken.sol\":13106:13144  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":13106:13150  checkpoints[account][nCheckpoints - 1].votes */\n      sload\n      0x0100000000\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":13099:13150  return checkpoints[account][nCheckpoints - 1].votes */\n      jump(tag_115)\n        /* \"contracts/FaisaaToken.sol\":13015:13162  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\r... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":13223:13243  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":13223:13234  checkpoints */\n      0x06\n        /* \"contracts/FaisaaToken.sol\":13223:13243  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":13223:13246  checkpoints[account][0] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":13223:13256  checkpoints[account][0].fromBlock */\n      sload\n        /* \"contracts/FaisaaToken.sol\":13223:13246  checkpoints[account][0] */\n      0xffffffff\n        /* \"contracts/FaisaaToken.sol\":13223:13256  checkpoints[account][0].fromBlock */\n      and\n        /* \"contracts/FaisaaToken.sol\":13223:13270  checkpoints[account][0].fromBlock > blockNumber */\n      dup4\n      lt\n        /* \"contracts/FaisaaToken.sol\":13219:13307  if (checkpoints[account][0].fromBlock > blockNumber) {\r... */\n      iszero\n      tag_149\n      jumpi\n        /* \"contracts/FaisaaToken.sol\":13294:13295  0 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":13287:13295  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_115)\n        /* \"contracts/FaisaaToken.sol\":13219:13307  if (checkpoints[account][0].fromBlock > blockNumber) {\r... */\n    tag_149:\n        /* \"contracts/FaisaaToken.sol\":13319:13331  uint32 lower */\n      0x00\n      not(0x00)\n        /* \"contracts/FaisaaToken.sol\":13361:13377  nCheckpoints - 1 */\n      dup3\n      add\n        /* \"contracts/FaisaaToken.sol\":13388:13816  while (upper > lower) {\r... */\n    tag_150:\n        /* \"contracts/FaisaaToken.sol\":13403:13408  lower */\n      dup2\n        /* \"contracts/FaisaaToken.sol\":13395:13408  upper > lower */\n      0xffffffff\n      and\n        /* \"contracts/FaisaaToken.sol\":13395:13400  upper */\n      dup2\n        /* \"contracts/FaisaaToken.sol\":13395:13408  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/FaisaaToken.sol\":13388:13816  while (upper > lower) {\r... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contracts/FaisaaToken.sol\":13467:13468  2 */\n      0x02\n        /* \"contracts/FaisaaToken.sol\":13450:13463  upper - lower */\n      dup3\n      dup3\n      sub\n        /* \"contracts/FaisaaToken.sol\":13449:13468  (upper - lower) / 2 */\n      0xffffffff\n      and\n      div\n        /* \"contracts/FaisaaToken.sol\":13441:13468  upper - (upper - lower) / 2 */\n      dup2\n      sub\n        /* \"contracts/FaisaaToken.sol\":13510:13530  Checkpoint memory cp */\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":13533:13553  checkpoints[account] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":13533:13544  checkpoints */\n      0x06\n        /* \"contracts/FaisaaToken.sol\":13533:13553  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":13533:13561  checkpoints[account][center] */\n      0xffffffff\n      dup6\n      dup2\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":13510:13561  Checkpoint memory cp = checkpoints[account][center] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      sload\n      swap3\n      dup4\n      and\n      dup1\n      dup3\n      mstore\n      0x0100000000\n      swap1\n      swap4\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"contracts/FaisaaToken.sol\":13580:13607  cp.fromBlock == blockNumber */\n      dup8\n      eq\n        /* \"contracts/FaisaaToken.sol\":13576:13805  if (cp.fromBlock == blockNumber) {\r... */\n      iszero\n      tag_155\n      jumpi\n        /* \"contracts/FaisaaToken.sol\":13635:13643  cp.votes */\n      0x20\n      add\n      mload\n      swap5\n      pop\n        /* \"contracts/FaisaaToken.sol\":13628:13643  return cp.votes */\n      tag_115\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/FaisaaToken.sol\":13576:13805  if (cp.fromBlock == blockNumber) {\r... */\n    tag_155:\n        /* \"contracts/FaisaaToken.sol\":13669:13681  cp.fromBlock */\n      dup1\n      mload\n        /* \"contracts/FaisaaToken.sol\":13669:13695  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      dup8\n      gt\n        /* \"contracts/FaisaaToken.sol\":13665:13805  if (cp.fromBlock < blockNumber) {\r... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/FaisaaToken.sol\":13724:13730  center */\n      dup2\n        /* \"contracts/FaisaaToken.sol\":13716:13730  lower = center */\n      swap4\n      pop\n        /* \"contracts/FaisaaToken.sol\":13665:13805  if (cp.fromBlock < blockNumber) {\r... */\n      jump(tag_158)\n    tag_157:\n        /* \"contracts/FaisaaToken.sol\":13788:13789  1 */\n      0x01\n        /* \"contracts/FaisaaToken.sol\":13779:13785  center */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":13779:13789  center - 1 */\n      sub\n        /* \"contracts/FaisaaToken.sol\":13771:13789  upper = center - 1 */\n      swap3\n      pop\n        /* \"contracts/FaisaaToken.sol\":13665:13805  if (cp.fromBlock < blockNumber) {\r... */\n    tag_158:\n        /* \"contracts/FaisaaToken.sol\":13388:13816  while (upper > lower) {\r... */\n      pop\n      pop\n      jump(tag_150)\n    tag_151:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":13833:13853  checkpoints[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":13833:13844  checkpoints */\n      0x06\n        /* \"contracts/FaisaaToken.sol\":13833:13853  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":13833:13860  checkpoints[account][lower] */\n      0xffffffff\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":13833:13866  checkpoints[account][lower].votes */\n      sload\n      0xffffffffffffffffffffffff\n      0x0100000000\n      swap1\n      swap2\n      div\n      and\n      swap2\n      pop\n      pop\n        /* \"contracts/FaisaaToken.sol\":12654:13874  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":2465:2504  mapping (address => uint) public nonces */\n    tag_85:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":271:311  string public constant symbol = \"FAISAA\" */\n    tag_87:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x4641495341410000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":9095:9335  function transfer(address dst, uint rawAmount) external returns (bool) {\r... */\n    tag_94:\n        /* \"contracts/FaisaaToken.sol\":9160:9164  bool */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":9177:9190  uint96 amount */\n      dup1\n        /* \"contracts/FaisaaToken.sol\":9193:9254  safe96(rawAmount, \"Faisaa::transfer: amount exceeds 96 bits\") */\n      tag_160\n        /* \"contracts/FaisaaToken.sol\":9200:9209  rawAmount */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":9193:9254  safe96(rawAmount, \"Faisaa::transfer: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_b7ebab050738648e1b5349fb2fbed408028a6c60180b562f13f48eb805432532\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":9193:9199  safe96 */\n      tag_119\n        /* \"contracts/FaisaaToken.sol\":9193:9254  safe96(rawAmount, \"Faisaa::transfer: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_160:\n        /* \"contracts/FaisaaToken.sol\":9177:9254  uint96 amount = safe96(rawAmount, \"Faisaa::transfer: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":9265:9305  _transferTokens(msg.sender, dst, amount) */\n      tag_161\n        /* \"contracts/FaisaaToken.sol\":9281:9291  msg.sender */\n      caller\n        /* \"contracts/FaisaaToken.sol\":9293:9296  dst */\n      dup6\n        /* \"contracts/FaisaaToken.sol\":9298:9304  amount */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":9265:9280  _transferTokens */\n      tag_127\n        /* \"contracts/FaisaaToken.sol\":9265:9305  _transferTokens(msg.sender, dst, amount) */\n      jump\t// in\n    tag_161:\n      pop\n        /* \"contracts/FaisaaToken.sol\":9323:9327  true */\n      0x01\n      swap4\n        /* \"contracts/FaisaaToken.sol\":9095:9335  function transfer(address dst, uint rawAmount) external returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":12001:12223  function getCurrentVotes(address account) external view returns (uint96) {\r... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":12107:12130  numCheckpoints[account] */\n      dup2\n      and\n        /* \"contracts/FaisaaToken.sol\":12066:12072  uint96 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":12107:12130  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":12107:12121  numCheckpoints */\n      0x07\n        /* \"contracts/FaisaaToken.sol\":12107:12130  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"contracts/FaisaaToken.sol\":12148:12164  nCheckpoints > 0 */\n      dup1\n        /* \"contracts/FaisaaToken.sol\":12148:12215  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_163\n      jumpi\n        /* \"contracts/FaisaaToken.sol\":12214:12215  0 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":12148:12215  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_164)\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":12167:12187  checkpoints[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":12167:12178  checkpoints */\n      0x06\n        /* \"contracts/FaisaaToken.sol\":12167:12187  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"contracts/FaisaaToken.sol\":12188:12204  nCheckpoints - 1 */\n      dup6\n      add\n        /* \"contracts/FaisaaToken.sol\":12167:12205  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":12167:12211  checkpoints[account][nCheckpoints - 1].votes */\n      sload\n      0x0100000000\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FaisaaToken.sol\":12148:12215  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_164:\n        /* \"contracts/FaisaaToken.sol\":12141:12215  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap4\n        /* \"contracts/FaisaaToken.sol\":12001:12223  function getCurrentVotes(address account) external view returns (uint96) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":11005:11800  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\r... */\n    tag_100:\n        /* \"contracts/FaisaaToken.sol\":11121:11144  bytes32 domainSeparator */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":1866:1946  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      0x43\n      swap2\n      codecopy\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      0x43\n      add\n      dup3\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":11201:11205  name */\n      dup3\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x06\n      dup3\n      mstore\n      0x4661697361610000000000000000000000000000000000000000000000000000\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":1866:1946  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":11185:11207  keccak256(bytes(name)) */\n      0x9869eadf408163ba154b1c0ee82ba4780d5d47224d67622ac848d92c700ab76d\n        /* \"contracts/FaisaaToken.sol\":11209:11221  getChainId() */\n      tag_166\n        /* \"contracts/FaisaaToken.sol\":11209:11219  getChainId */\n      tag_167\n        /* \"contracts/FaisaaToken.sol\":11209:11221  getChainId() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/FaisaaToken.sol\":11231:11235  this */\n      address\n        /* \"contracts/FaisaaToken.sol\":11157:11237  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/FaisaaToken.sol\":11157:11237  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/FaisaaToken.sol\":11147:11238  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":11121:11238  bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":11249:11267  bytes32 structHash */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":2086:2157  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      0x3a\n      swap2\n      codecopy\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      0x3a\n      add\n      dup3\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":11280:11337  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup13\n      and\n      dup4\n      dup4\n      add\n      mstore\n      0x60\n      dup4\n      add\n      dup12\n      swap1\n      mstore\n      0x80\n      dup1\n      dup5\n      add\n      dup12\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":11280:11337  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0xa0\n      dup5\n      add\n      dup4\n      mstore\n        /* \"contracts/FaisaaToken.sol\":11270:11338  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      dup1\n      mload\n      swap1\n      dup3\n      add\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":11376:11433  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      0xc0\n      dup6\n      add\n      mstore\n      0xc2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      0xe2\n      dup1\n      dup6\n      add\n      dup3\n      swap1\n      mstore\n      dup4\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":11376:11433  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x0102\n      dup6\n      add\n      dup1\n      dup6\n      mstore\n        /* \"contracts/FaisaaToken.sol\":11366:11434  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup2\n      mload\n      swap2\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n      0x00\n        /* \"contracts/FaisaaToken.sol\":11465:11491  ecrecover(digest, v, r, s) */\n      swap2\n      dup3\n      swap1\n      mstore\n      0x0122\n      dup7\n      add\n      dup1\n      dup7\n      mstore\n      dup2\n      swap1\n      mstore\n      0xff\n      dup13\n      and\n      0x0142\n      dup8\n      add\n      mstore\n      0x0162\n      dup7\n      add\n      dup12\n      swap1\n      mstore\n      0x0182\n      dup7\n      add\n      dup11\n      swap1\n      mstore\n      swap4\n      mload\n        /* \"contracts/FaisaaToken.sol\":11270:11338  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      swap2\n      swap7\n      pop\n        /* \"contracts/FaisaaToken.sol\":11366:11434  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap3\n      swap5\n      pop\n      swap2\n      swap3\n        /* \"contracts/FaisaaToken.sol\":11465:11491  ecrecover(digest, v, r, s) */\n      0x01\n      swap3\n      0x01a2\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/FaisaaToken.sol\":11280:11337  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      swap3\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"contracts/FaisaaToken.sol\":11465:11491  ecrecover(digest, v, r, s) */\n      dup4\n      add\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_168\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_168:\n      pop\n      pop\n        /* \"contracts/FaisaaToken.sol\":11465:11491  ecrecover(digest, v, r, s) */\n      mload(add(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0, mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":11510:11533  signatory != address(0) */\n      dup2\n      and\n        /* \"contracts/FaisaaToken.sol\":11502:11578  require(signatory != address(0), \"Faisaa::delegateBySig: invalid signature\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fc42ecd0ad65ac67b8bb4dbac768677706fb9a0fbb6335d058dc53a56bbd31df\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":11606:11623  nonces[signatory] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":11606:11612  nonces */\n      0x08\n        /* \"contracts/FaisaaToken.sol\":11606:11623  nonces[signatory] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":11606:11625  nonces[signatory]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"contracts/FaisaaToken.sol\":11597:11625  nonce == nonces[signatory]++ */\n      dup10\n      eq\n        /* \"contracts/FaisaaToken.sol\":11589:11666  require(nonce == nonces[signatory]++, \"Faisaa::delegateBySig: invalid nonce\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_be8a6d809cc9f4ff1cf4521b91f51874149bae2006223ec41845b088e1693560\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/FaisaaToken.sol\":11692:11698  expiry */\n      dup8\n        /* \"contracts/FaisaaToken.sol\":11685:11688  now */\n      timestamp\n        /* \"contracts/FaisaaToken.sol\":11685:11698  now <= expiry */\n      gt\n      iszero\n        /* \"contracts/FaisaaToken.sol\":11677:11743  require(now <= expiry, \"Faisaa::delegateBySig: signature expired\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a2f14eebe3bbc7d4adc60052a7d595b79f34724fbfa7082143585fb5bd8626ee\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/FaisaaToken.sol\":11761:11792  _delegate(signatory, delegatee) */\n      tag_172\n        /* \"contracts/FaisaaToken.sol\":11771:11780  signatory */\n      dup2\n        /* \"contracts/FaisaaToken.sol\":11782:11791  delegatee */\n      dup12\n        /* \"contracts/FaisaaToken.sol\":11761:11770  _delegate */\n      tag_143\n        /* \"contracts/FaisaaToken.sol\":11761:11792  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/FaisaaToken.sol\":11754:11792  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FaisaaToken.sol\":11005:11800  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\r... */\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":7458:8520  function permit(address owner, address spender, uint rawAmount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_103:\n        /* \"contracts/FaisaaToken.sol\":7588:7601  uint96 amount */\n      0x00\n      not(0x00)\n        /* \"contracts/FaisaaToken.sol\":7616:7625  rawAmount */\n      dup7\n        /* \"contracts/FaisaaToken.sol\":7616:7637  rawAmount == uint(-1) */\n      eq\n        /* \"contracts/FaisaaToken.sol\":7612:7786  if (rawAmount == uint(-1)) {\r... */\n      iszero\n      tag_174\n      jumpi\n      pop\n      not(0x00)\n      jump(tag_175)\n    tag_174:\n        /* \"contracts/FaisaaToken.sol\":7715:7774  safe96(rawAmount, \"Faisaa::permit: amount exceeds 96 bits\") */\n      tag_176\n        /* \"contracts/FaisaaToken.sol\":7722:7731  rawAmount */\n      dup7\n        /* \"contracts/FaisaaToken.sol\":7715:7774  safe96(rawAmount, \"Faisaa::permit: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a4168aba4fc669f0dc452530929310103d41a501cffe432724f3e347c4692ffd\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":7715:7721  safe96 */\n      tag_119\n        /* \"contracts/FaisaaToken.sol\":7715:7774  safe96(rawAmount, \"Faisaa::permit: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_176:\n        /* \"contracts/FaisaaToken.sol\":7706:7774  amount = safe96(rawAmount, \"Faisaa::permit: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":7612:7786  if (rawAmount == uint(-1)) {\r... */\n    tag_175:\n        /* \"contracts/FaisaaToken.sol\":7798:7821  bytes32 domainSeparator */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":1866:1946  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n      0x43\n      swap2\n      codecopy\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      0x43\n      add\n      dup3\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":7878:7882  name */\n      dup3\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x06\n      dup3\n      mstore\n      0x4661697361610000000000000000000000000000000000000000000000000000\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":1866:1946  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":7862:7884  keccak256(bytes(name)) */\n      0x9869eadf408163ba154b1c0ee82ba4780d5d47224d67622ac848d92c700ab76d\n        /* \"contracts/FaisaaToken.sol\":7886:7898  getChainId() */\n      tag_177\n        /* \"contracts/FaisaaToken.sol\":7886:7896  getChainId */\n      tag_167\n        /* \"contracts/FaisaaToken.sol\":7886:7898  getChainId() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/FaisaaToken.sol\":7908:7912  this */\n      address\n        /* \"contracts/FaisaaToken.sol\":7834:7914  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/FaisaaToken.sol\":7834:7914  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/FaisaaToken.sol\":7824:7915  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":7798:7915  bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":7926:7944  bytes32 structHash */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":2289:2384  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      mload(0x40)\n      dup1\n      dup1\n      data_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n      0x52\n      swap2\n      codecopy\n      0x52\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":7985:7990  owner */\n      dup11\n        /* \"contracts/FaisaaToken.sol\":7992:7999  spender */\n      dup11\n        /* \"contracts/FaisaaToken.sol\":8001:8010  rawAmount */\n      dup11\n        /* \"contracts/FaisaaToken.sol\":8012:8018  nonces */\n      0x08\n        /* \"contracts/FaisaaToken.sol\":8012:8025  nonces[owner] */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":8019:8024  owner */\n      dup16\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":8012:8025  nonces[owner] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FaisaaToken.sol\":8012:8027  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/FaisaaToken.sol\":8029:8037  deadline */\n      dup12\n        /* \"contracts/FaisaaToken.sol\":7957:8038  abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/FaisaaToken.sol\":7957:8038  abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/FaisaaToken.sol\":7947:8039  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":7926:8039  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, rawAmount, nonces[owner]++, deadline)) */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":8050:8064  bytes32 digest */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":8106:8121  domainSeparator */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":8123:8133  structHash */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":8077:8134  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/FaisaaToken.sol\":8077:8134  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/FaisaaToken.sol\":8067:8135  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":8050:8135  bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":8146:8163  address signatory */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":8166:8192  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"contracts/FaisaaToken.sol\":8176:8182  digest */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":8184:8185  v */\n      dup10\n        /* \"contracts/FaisaaToken.sol\":8187:8188  r */\n      dup10\n        /* \"contracts/FaisaaToken.sol\":8190:8191  s */\n      dup10\n        /* \"contracts/FaisaaToken.sol\":8166:8192  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_178\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_178:\n      pop\n      pop\n        /* \"contracts/FaisaaToken.sol\":8166:8192  ecrecover(digest, v, r, s) */\n      mload(add(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0, mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":8211:8234  signatory != address(0) */\n      dup2\n      and\n        /* \"contracts/FaisaaToken.sol\":8203:8272  require(signatory != address(0), \"Faisaa::permit: invalid signature\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7bba7b7f3786cb16c894e9f3d17e6938ea20c55fb0d256b4342cf8e91cd2677e\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/FaisaaToken.sol\":8304:8309  owner */\n      dup12\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":8291:8309  signatory == owner */\n      and\n        /* \"contracts/FaisaaToken.sol\":8291:8300  signatory */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":8291:8309  signatory == owner */\n      and\n      eq\n        /* \"contracts/FaisaaToken.sol\":8283:8342  require(signatory == owner, \"Faisaa::permit: unauthorized\") */\n      tag_180\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x4661697361613a3a7065726d69743a20756e617574686f72697a656400000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/FaisaaToken.sol\":8368:8376  deadline */\n      dup9\n        /* \"contracts/FaisaaToken.sol\":8361:8364  now */\n      timestamp\n        /* \"contracts/FaisaaToken.sol\":8361:8376  now <= deadline */\n      gt\n      iszero\n        /* \"contracts/FaisaaToken.sol\":8353:8414  require(now <= deadline, \"Faisaa::permit: signature expired\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_66d321922337c5b7814f518438c8464c8efbbb77ade775957918251086a37924\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/FaisaaToken.sol\":8456:8462  amount */\n      dup5\n        /* \"contracts/FaisaaToken.sol\":8427:8437  allowances */\n      0x03\n        /* \"contracts/FaisaaToken.sol\":8427:8444  allowances[owner] */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":8438:8443  owner */\n      dup15\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":8427:8444  allowances[owner] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":8427:8453  allowances[owner][spender] */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":8445:8452  spender */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":8427:8453  allowances[owner][spender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FaisaaToken.sol\":8427:8462  allowances[owner][spender] = amount */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FaisaaToken.sol\":8496:8503  spender */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":8480:8512  Approval(owner, spender, amount) */\n      and\n        /* \"contracts/FaisaaToken.sol\":8489:8494  owner */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":8480:8512  Approval(owner, spender, amount) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/FaisaaToken.sol\":8505:8511  amount */\n      dup8\n        /* \"contracts/FaisaaToken.sol\":8480:8512  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FaisaaToken.sol\":7458:8520  function permit(address owner, address spender, uint rawAmount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":5933:6069  function allowance(address account, address spender) external view returns (uint) {\r... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":6033:6052  allowances[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/FaisaaToken.sol\":6009:6013  uint */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":6033:6052  allowances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":6033:6043  allowances */\n      0x03\n        /* \"contracts/FaisaaToken.sol\":6033:6052  allowances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":6033:6061  allowances[account][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xffffffffffffffffffffffff\n      and\n      swap1\n        /* \"contracts/FaisaaToken.sol\":5933:6069  function allowance(address account, address spender) external view returns (uint) {\r... */\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":2040:2157  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_108:\n        /* \"contracts/FaisaaToken.sol\":2086:2157  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      mload(0x40)\n      dup1\n      0x3a\n      data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n      dup3\n      codecopy\n      0x3a\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":2040:2157  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":1563:1633  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_111:\n      0x06\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      dup2\n      and\n      swap1\n      0x0100000000\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      dup3\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":4139:4373  function setMinter(address minter_) external {\r... */\n    tag_114:\n        /* \"contracts/FaisaaToken.sol\":4217:4223  minter */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/FaisaaToken.sol\":4203:4213  msg.sender */\n      caller\n        /* \"contracts/FaisaaToken.sol\":4203:4223  msg.sender == minter */\n      eq\n        /* \"contracts/FaisaaToken.sol\":4195:4292  require(msg.sender == minter, \"Faisaa::setMinter: only the minter can change the minter address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x40\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6856bf735a26f81aa3418108149773825e6954c4c601de22633b87a95b09de31\n      0x40\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/FaisaaToken.sol\":4322:4328  minter */\n      sload(0x01)\n        /* \"contracts/FaisaaToken.sol\":4308:4338  MinterChanged(minter, minter_) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":4322:4328  minter */\n      swap3\n      dup4\n      and\n        /* \"contracts/FaisaaToken.sol\":4308:4338  MinterChanged(minter, minter_) */\n      dup2\n      mstore\n      swap2\n      dup4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      0x3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f6\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"contracts/FaisaaToken.sol\":4349:4355  minter */\n      0x01\n        /* \"contracts/FaisaaToken.sol\":4349:4365  minter = minter_ */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/FaisaaToken.sol\":4139:4373  function setMinter(address minter_) external {\r... */\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":16654:16815  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {\r... */\n    tag_119:\n        /* \"contracts/FaisaaToken.sol\":16729:16735  uint96 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":16767:16779  errorMessage */\n      dup2\n        /* \"contracts/FaisaaToken.sol\":16760:16765  2**96 */\n      0x01000000000000000000000000\n        /* \"contracts/FaisaaToken.sol\":16756:16765  n < 2**96 */\n      dup5\n      lt\n        /* \"contracts/FaisaaToken.sol\":16748:16780  require(n < 2**96, errorMessage) */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_187:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_189\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_187)\n    tag_189:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/FaisaaToken.sol\":16748:16780  require(n < 2**96, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_190:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n      pop\n        /* \"contracts/FaisaaToken.sol\":16805:16806  n */\n      swap2\n      swap3\n        /* \"contracts/FaisaaToken.sol\":16654:16815  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":17019:17184  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\r... */\n    tag_125:\n        /* \"contracts/FaisaaToken.sol\":17105:17111  uint96 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":17137:17138  a */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":17132:17138  b <= a */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FaisaaToken.sol\":17132:17133  b */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":17132:17138  b <= a */\n      0xffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/FaisaaToken.sol\":17140:17152  errorMessage */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":17124:17153  require(b <= a, errorMessage) */\n      swap1\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_189\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_187)\n        /* \"contracts/FaisaaToken.sol\":17124:17153  require(b <= a, errorMessage) */\n    tag_192:\n      pop\n      pop\n      pop\n        /* \"contracts/FaisaaToken.sol\":17171:17176  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/FaisaaToken.sol\":17019:17184  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\r... */\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":14265:14887  function _transferTokens(address src, address dst, uint96 amount) internal {\r... */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":14359:14376  src != address(0) */\n      dup4\n      and\n        /* \"contracts/FaisaaToken.sol\":14351:14443  require(src != address(0), \"Faisaa::_transferTokens: cannot transfer from the zero address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_74df45df00faba5bc1ed7d46b19584c67a1a16fa2b4884024b61f1c877a11495\n      0x3e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":14462:14479  dst != address(0) */\n      dup3\n      and\n        /* \"contracts/FaisaaToken.sol\":14454:14544  require(dst != address(0), \"Faisaa::_transferTokens: cannot transfer to the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4b8291aee6764a0a745b0e353b7b208822ccbb09ab1975dce9e22b9009718407\n      0x3c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":14579:14592  balances[src] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":14579:14587  balances */\n      0x04\n        /* \"contracts/FaisaaToken.sol\":14579:14592  balances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/FaisaaToken.sol\":14573:14661  sub96(balances[src], amount, \"Faisaa::_transferTokens: transfer amount exceeds balance\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x38\n      dup1\n      dup5\n      mstore\n      tag_200\n      swap4\n        /* \"contracts/FaisaaToken.sol\":14579:14592  balances[src] */\n      0xffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      swap3\n        /* \"contracts/FaisaaToken.sol\":14594:14600  amount */\n      dup6\n      swap3\n        /* \"contracts/FaisaaToken.sol\":14573:14661  sub96(balances[src], amount, \"Faisaa::_transferTokens: transfer amount exceeds balance\") */\n      swap2\n      swap1\n      data_43ed79fb8577a7fd423a8b2881d6391af07471b5737d457346ebe6ee6b0cee9e\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":14573:14578  sub96 */\n      tag_125\n        /* \"contracts/FaisaaToken.sol\":14573:14661  sub96(balances[src], amount, \"Faisaa::_transferTokens: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":14557:14570  balances[src] */\n      dup5\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":14557:14565  balances */\n      0x04\n        /* \"contracts/FaisaaToken.sol\":14557:14570  balances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":14557:14661  balances[src] = sub96(balances[src], amount, \"Faisaa::_transferTokens: transfer amount exceeds balance\") */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n      and\n      0xffffffffffffffffffffffff\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/FaisaaToken.sol\":14694:14707  balances[dst] */\n      swap3\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/FaisaaToken.sol\":14688:14770  add96(balances[dst], amount, \"Faisaa::_transferTokens: transfer amount overflows\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x32\n      dup1\n      dup5\n      mstore\n      tag_201\n      swap5\n        /* \"contracts/FaisaaToken.sol\":14694:14707  balances[dst] */\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"contracts/FaisaaToken.sol\":14709:14715  amount */\n      dup6\n      swap3\n        /* \"contracts/FaisaaToken.sol\":14688:14770  add96(balances[dst], amount, \"Faisaa::_transferTokens: transfer amount overflows\") */\n      swap1\n      swap2\n      swap1\n      data_2916bd5d9f3a5329c4fa4d99e766ef3046ffc185f6f1990dafcd61d8c37227ba\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":14688:14693  add96 */\n      tag_138\n        /* \"contracts/FaisaaToken.sol\":14688:14770  add96(balances[dst], amount, \"Faisaa::_transferTokens: transfer amount overflows\") */\n      jump\t// in\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":14672:14685  balances[dst] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":14672:14680  balances */\n      0x04\n        /* \"contracts/FaisaaToken.sol\":14672:14685  balances[dst] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":14672:14770  balances[dst] = add96(balances[dst], amount, \"Faisaa::_transferTokens: transfer amount overflows\") */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n      and\n      0xffffffffffffffffffffffff\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/FaisaaToken.sol\":14786:14812  Transfer(src, dst, amount) */\n      dup2\n      mload\n      swap5\n      dup7\n      and\n      dup6\n      mstore\n      swap1\n      mload\n        /* \"contracts/FaisaaToken.sol\":14672:14685  balances[dst] */\n      swap2\n      swap4\n        /* \"contracts/FaisaaToken.sol\":14786:14812  Transfer(src, dst, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":14840:14854  delegates[src] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":14840:14849  delegates */\n      0x05\n        /* \"contracts/FaisaaToken.sol\":14840:14854  delegates[src] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/FaisaaToken.sol\":14856:14870  delegates[dst] */\n      dup6\n      dup5\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"contracts/FaisaaToken.sol\":14825:14879  _moveDelegates(delegates[src], delegates[dst], amount) */\n      tag_139\n      swap3\n        /* \"contracts/FaisaaToken.sol\":14840:14854  delegates[src] */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/FaisaaToken.sol\":14856:14870  delegates[dst] */\n      and\n        /* \"contracts/FaisaaToken.sol\":14872:14878  amount */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":14825:14839  _moveDelegates */\n      tag_140\n        /* \"contracts/FaisaaToken.sol\":14825:14879  _moveDelegates(delegates[src], delegates[dst], amount) */\n      jump\t// in\n        /* \"contracts/libraries/SafeMath.sol\":155:281  function add(uint x, uint y) internal pure returns (uint z) {... */\n    tag_133:\n        /* \"contracts/libraries/SafeMath.sol\":238:243  x + y */\n      dup1\n      dup3\n      add\n        /* \"contracts/libraries/SafeMath.sol\":233:249  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":225:274  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_115\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"contracts/FaisaaToken.sol\":16823:17011  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\r... */\n    tag_138:\n        /* \"contracts/FaisaaToken.sol\":16909:16915  uint96 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":16939:16944  a + b */\n      dup4\n      dup4\n      add\n        /* \"contracts/FaisaaToken.sol\":16971:16983  errorMessage */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":16963:16969  c >= a */\n      0xffffffffffffffffffffffff\n      dup1\n      dup8\n      and\n      swap1\n      dup4\n      and\n      lt\n      iszero\n        /* \"contracts/FaisaaToken.sol\":16955:16984  require(c >= a, errorMessage) */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_189\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_187)\n        /* \"contracts/FaisaaToken.sol\":16955:16984  require(c >= a, errorMessage) */\n    tag_206:\n      pop\n        /* \"contracts/FaisaaToken.sol\":17002:17003  c */\n      swap5\n        /* \"contracts/FaisaaToken.sol\":16823:17011  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":14895:15838  function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {\r... */\n    tag_140:\n        /* \"contracts/FaisaaToken.sol\":15000:15006  dstRep */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":14990:15006  srcRep != dstRep */\n      and\n        /* \"contracts/FaisaaToken.sol\":14990:14996  srcRep */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":14990:15006  srcRep != dstRep */\n      and\n      eq\n      iszero\n        /* \"contracts/FaisaaToken.sol\":14990:15020  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_212\n      jumpi\n      pop\n        /* \"contracts/FaisaaToken.sol\":15019:15020  0 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":15010:15016  amount */\n      dup2\n        /* \"contracts/FaisaaToken.sol\":15010:15020  amount > 0 */\n      0xffffffffffffffffffffffff\n      and\n      gt\n        /* \"contracts/FaisaaToken.sol\":14990:15020  srcRep != dstRep && amount > 0 */\n    tag_212:\n        /* \"contracts/FaisaaToken.sol\":14986:15831  if (srcRep != dstRep && amount > 0) {\r... */\n      iszero\n      tag_139\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":15041:15061  srcRep != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/FaisaaToken.sol\":15037:15421  if (srcRep != address(0)) {\r... */\n      tag_214\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":15101:15123  numCheckpoints[srcRep] */\n      dup4\n      and\n        /* \"contracts/FaisaaToken.sol\":15082:15098  uint32 srcRepNum */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":15101:15123  numCheckpoints[srcRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":15101:15115  numCheckpoints */\n      0x07\n        /* \"contracts/FaisaaToken.sol\":15101:15123  numCheckpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/FaisaaToken.sol\":15161:15174  srcRepNum > 0 */\n      dup2\n        /* \"contracts/FaisaaToken.sol\":15161:15221  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_215\n      jumpi\n        /* \"contracts/FaisaaToken.sol\":15220:15221  0 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":15161:15221  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_216)\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":15177:15196  checkpoints[srcRep] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":15177:15188  checkpoints */\n      0x06\n        /* \"contracts/FaisaaToken.sol\":15177:15196  checkpoints[srcRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"contracts/FaisaaToken.sol\":15197:15210  srcRepNum - 1 */\n      dup7\n      add\n        /* \"contracts/FaisaaToken.sol\":15177:15211  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":15177:15217  checkpoints[srcRep][srcRepNum - 1].votes */\n      sload\n      0x0100000000\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FaisaaToken.sol\":15161:15221  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_216:\n        /* \"contracts/FaisaaToken.sol\":15142:15221  uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":15240:15256  uint96 srcRepNew */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":15259:15329  sub96(srcRepOld, amount, \"Faisaa::_moveVotes: vote amount underflows\") */\n      tag_217\n        /* \"contracts/FaisaaToken.sol\":15265:15274  srcRepOld */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":15276:15282  amount */\n      dup6\n        /* \"contracts/FaisaaToken.sol\":15259:15329  sub96(srcRepOld, amount, \"Faisaa::_moveVotes: vote amount underflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_b50b21b8e6629dceee6e3bfa4e8b2213ec51504b30e82482904829a475f147a4\n      0x2a\n      swap2\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":15259:15264  sub96 */\n      tag_125\n        /* \"contracts/FaisaaToken.sol\":15259:15329  sub96(srcRepOld, amount, \"Faisaa::_moveVotes: vote amount underflows\") */\n      jump\t// in\n    tag_217:\n        /* \"contracts/FaisaaToken.sol\":15240:15329  uint96 srcRepNew = sub96(srcRepOld, amount, \"Faisaa::_moveVotes: vote amount underflows\") */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":15348:15405  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_218\n        /* \"contracts/FaisaaToken.sol\":15365:15371  srcRep */\n      dup7\n        /* \"contracts/FaisaaToken.sol\":15373:15382  srcRepNum */\n      dup5\n        /* \"contracts/FaisaaToken.sol\":15384:15393  srcRepOld */\n      dup5\n        /* \"contracts/FaisaaToken.sol\":15395:15404  srcRepNew */\n      dup5\n        /* \"contracts/FaisaaToken.sol\":15348:15364  _writeCheckpoint */\n      tag_219\n        /* \"contracts/FaisaaToken.sol\":15348:15405  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/FaisaaToken.sol\":15037:15421  if (srcRep != address(0)) {\r... */\n      pop\n      pop\n      pop\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":15441:15461  dstRep != address(0) */\n      dup3\n      and\n      iszero\n        /* \"contracts/FaisaaToken.sol\":15437:15820  if (dstRep != address(0)) {\r... */\n      tag_139\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":15501:15523  numCheckpoints[dstRep] */\n      dup3\n      and\n        /* \"contracts/FaisaaToken.sol\":15482:15498  uint32 dstRepNum */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":15501:15523  numCheckpoints[dstRep] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":15501:15515  numCheckpoints */\n      0x07\n        /* \"contracts/FaisaaToken.sol\":15501:15523  numCheckpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"contracts/FaisaaToken.sol\":15561:15574  dstRepNum > 0 */\n      dup2\n        /* \"contracts/FaisaaToken.sol\":15561:15621  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_221\n      jumpi\n        /* \"contracts/FaisaaToken.sol\":15620:15621  0 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":15561:15621  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_222)\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":15577:15596  checkpoints[dstRep] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":15577:15588  checkpoints */\n      0x06\n        /* \"contracts/FaisaaToken.sol\":15577:15596  checkpoints[dstRep] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"contracts/FaisaaToken.sol\":15597:15610  dstRepNum - 1 */\n      dup7\n      add\n        /* \"contracts/FaisaaToken.sol\":15577:15611  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":15577:15617  checkpoints[dstRep][dstRepNum - 1].votes */\n      sload\n      0x0100000000\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FaisaaToken.sol\":15561:15621  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_222:\n        /* \"contracts/FaisaaToken.sol\":15542:15621  uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":15640:15656  uint96 dstRepNew */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":15659:15728  add96(dstRepOld, amount, \"Faisaa::_moveVotes: vote amount overflows\") */\n      tag_223\n        /* \"contracts/FaisaaToken.sol\":15665:15674  dstRepOld */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":15676:15682  amount */\n      dup6\n        /* \"contracts/FaisaaToken.sol\":15659:15728  add96(dstRepOld, amount, \"Faisaa::_moveVotes: vote amount overflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      data_fc81d128416baf4fee714ec0d5401cbb3caca3ea6e814a2d780d0598ff531954\n      0x29\n      swap2\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":15659:15664  add96 */\n      tag_138\n        /* \"contracts/FaisaaToken.sol\":15659:15728  add96(dstRepOld, amount, \"Faisaa::_moveVotes: vote amount overflows\") */\n      jump\t// in\n    tag_223:\n        /* \"contracts/FaisaaToken.sol\":15640:15728  uint96 dstRepNew = add96(dstRepOld, amount, \"Faisaa::_moveVotes: vote amount overflows\") */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":15747:15804  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_165\n        /* \"contracts/FaisaaToken.sol\":15764:15770  dstRep */\n      dup6\n        /* \"contracts/FaisaaToken.sol\":15772:15781  dstRepNum */\n      dup5\n        /* \"contracts/FaisaaToken.sol\":15783:15792  dstRepOld */\n      dup5\n        /* \"contracts/FaisaaToken.sol\":15794:15803  dstRepNew */\n      dup5\n        /* \"contracts/FaisaaToken.sol\":15747:15763  _writeCheckpoint */\n      tag_219\n        /* \"contracts/FaisaaToken.sol\":15747:15804  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n        /* \"contracts/FaisaaToken.sol\":13882:14257  function _delegate(address delegator, address delegatee) internal {\r... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":13985:14005  delegates[delegator] */\n      dup1\n      dup4\n      and\n        /* \"contracts/FaisaaToken.sol\":13959:13982  address currentDelegate */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":13985:14005  delegates[delegator] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":13985:13994  delegates */\n      0x05\n        /* \"contracts/FaisaaToken.sol\":13985:14005  delegates[delegator] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      dup1\n      sload\n        /* \"contracts/FaisaaToken.sol\":14042:14050  balances */\n      0x04\n        /* \"contracts/FaisaaToken.sol\":14042:14061  balances[delegator] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n      sload\n        /* \"contracts/FaisaaToken.sol\":14072:14092  delegates[delegator] */\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"contracts/FaisaaToken.sol\":14072:14104  delegates[delegator] = delegatee */\n      dup8\n      dup8\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/FaisaaToken.sol\":14122:14176  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap1\n      mload\n        /* \"contracts/FaisaaToken.sol\":13985:14005  delegates[delegator] */\n      swap2\n      swap1\n      swap6\n      and\n      swap5\n        /* \"contracts/FaisaaToken.sol\":14042:14061  balances[delegator] */\n      0xffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      swap4\n        /* \"contracts/FaisaaToken.sol\":14072:14104  delegates[delegator] = delegatee */\n      swap2\n      swap3\n        /* \"contracts/FaisaaToken.sol\":13985:14005  delegates[delegator] */\n      dup6\n      swap3\n      swap2\n        /* \"contracts/FaisaaToken.sol\":14122:14176  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      swap2\n        /* \"contracts/FaisaaToken.sol\":13959:13982  address currentDelegate */\n      swap1\n        /* \"contracts/FaisaaToken.sol\":14122:14176  DelegateChanged(delegator, currentDelegate, delegatee) */\n      log4\n        /* \"contracts/FaisaaToken.sol\":14189:14249  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_226\n        /* \"contracts/FaisaaToken.sol\":14204:14219  currentDelegate */\n      dup3\n        /* \"contracts/FaisaaToken.sol\":14221:14230  delegatee */\n      dup5\n        /* \"contracts/FaisaaToken.sol\":14232:14248  delegatorBalance */\n      dup4\n        /* \"contracts/FaisaaToken.sol\":14189:14203  _moveDelegates */\n      tag_140\n        /* \"contracts/FaisaaToken.sol\":14189:14249  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/FaisaaToken.sol\":13882:14257  function _delegate(address delegator, address delegatee) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":17192:17345  function getChainId() internal pure returns (uint) {\r... */\n    tag_167:\n        /* \"contracts/FaisaaToken.sol\":17302:17311  chainid() */\n      chainid\n        /* \"contracts/FaisaaToken.sol\":17192:17345  function getChainId() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":15846:16477  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {\r... */\n    tag_219:\n        /* \"contracts/FaisaaToken.sol\":15964:15982  uint32 blockNumber */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":15985:16063  safe32(block.number, \"Faisaa::_writeCheckpoint: block number exceeds 32 bits\") */\n      tag_229\n        /* \"contracts/FaisaaToken.sol\":15992:16004  block.number */\n      number\n        /* \"contracts/FaisaaToken.sol\":15985:16063  safe32(block.number, \"Faisaa::_writeCheckpoint: block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      data_b03f8a305451fbc58fdc933bd269d18af5db07650e26a77dc772c6fadf875335\n      0x36\n      swap2\n      codecopy\n        /* \"contracts/FaisaaToken.sol\":15985:15991  safe32 */\n      tag_230\n        /* \"contracts/FaisaaToken.sol\":15985:16063  safe32(block.number, \"Faisaa::_writeCheckpoint: block number exceeds 32 bits\") */\n      jump\t// in\n    tag_229:\n        /* \"contracts/FaisaaToken.sol\":15964:16063  uint32 blockNumber = safe32(block.number, \"Faisaa::_writeCheckpoint: block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"contracts/FaisaaToken.sol\":16093:16094  0 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":16078:16090  nCheckpoints */\n      dup5\n        /* \"contracts/FaisaaToken.sol\":16078:16094  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/FaisaaToken.sol\":16078:16163  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_231\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":16098:16120  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":16098:16109  checkpoints */\n      0x06\n        /* \"contracts/FaisaaToken.sol\":16098:16120  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":16098:16163  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      not(0x00)\n        /* \"contracts/FaisaaToken.sol\":16121:16137  nCheckpoints - 1 */\n      dup10\n      add\n        /* \"contracts/FaisaaToken.sol\":16098:16138  checkpoints[delegatee][nCheckpoints - 1] */\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":16098:16148  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      sload\n        /* \"contracts/FaisaaToken.sol\":16098:16163  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup3\n      dup3\n      and\n        /* \"contracts/FaisaaToken.sol\":16098:16148  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      swap2\n      and\n        /* \"contracts/FaisaaToken.sol\":16098:16163  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      eq\n        /* \"contracts/FaisaaToken.sol\":16078:16163  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_231:\n        /* \"contracts/FaisaaToken.sol\":16074:16403  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r... */\n      iszero\n      tag_232\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":16178:16200  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":16178:16189  checkpoints */\n      0x06\n        /* \"contracts/FaisaaToken.sol\":16178:16200  checkpoints[delegatee] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      not(0x00)\n        /* \"contracts/FaisaaToken.sol\":16201:16217  nCheckpoints - 1 */\n      dup9\n      add\n        /* \"contracts/FaisaaToken.sol\":16178:16218  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":16178:16235  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffff000000000000000000000000ffffffff\n      and\n      0x0100000000\n      0xffffffffffffffffffffffff\n      dup6\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/FaisaaToken.sol\":16074:16403  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r... */\n      jump(tag_233)\n    tag_232:\n        /* \"contracts/FaisaaToken.sol\":16303:16336  Checkpoint(blockNumber, newVotes) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup1\n      dup5\n      and\n      dup3\n      mstore\n      0xffffffffffffffffffffffff\n      dup1\n      dup7\n      and\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FaisaaToken.sol\":16264:16286  checkpoints[delegatee] */\n      dup12\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/FaisaaToken.sol\":16264:16275  checkpoints */\n      0x06\n        /* \"contracts/FaisaaToken.sol\":16264:16286  checkpoints[delegatee] */\n      dup4\n      mstore\n      dup8\n      dup2\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":16264:16300  checkpoints[delegatee][nCheckpoints] */\n      dup13\n      dup8\n      and\n      dup3\n      mstore\n      dup4\n      mstore\n      dup8\n      dup2\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":16264:16336  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      swap7\n      mload\n      dup8\n      sload\n      swap5\n      mload\n      swap1\n      swap6\n      and\n      0x0100000000\n      mul\n      0xffffffffffffffffffffffffffffffff000000000000000000000000ffffffff\n      swap6\n      dup8\n      and\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000\n      swap6\n      dup7\n      and\n      or\n      swap6\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap6\n      sstore\n        /* \"contracts/FaisaaToken.sol\":16349:16374  numCheckpoints[delegatee] */\n      swap4\n      dup3\n      mstore\n        /* \"contracts/FaisaaToken.sol\":16349:16363  numCheckpoints */\n      0x07\n        /* \"contracts/FaisaaToken.sol\":16349:16374  numCheckpoints[delegatee] */\n      swap1\n      swap4\n      mstore\n      swap3\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/FaisaaToken.sol\":16349:16393  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      dup1\n      sload\n        /* \"contracts/FaisaaToken.sol\":16264:16336  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      0x01\n        /* \"contracts/FaisaaToken.sol\":16377:16393  nCheckpoints + 1 */\n      dup9\n      add\n        /* \"contracts/FaisaaToken.sol\":16349:16393  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/FaisaaToken.sol\":16074:16403  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\r... */\n    tag_233:\n        /* \"contracts/FaisaaToken.sol\":16418:16469  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffff\n      dup1\n      dup7\n      and\n      dup3\n      mstore\n      dup5\n      and\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      swap3\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"contracts/FaisaaToken.sol\":15846:16477  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FaisaaToken.sol\":16485:16646  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\r... */\n    tag_230:\n        /* \"contracts/FaisaaToken.sol\":16560:16566  uint32 */\n      0x00\n        /* \"contracts/FaisaaToken.sol\":16598:16610  errorMessage */\n      dup2\n        /* \"contracts/FaisaaToken.sol\":16591:16596  2**32 */\n      0x0100000000\n        /* \"contracts/FaisaaToken.sol\":16587:16596  n < 2**32 */\n      dup5\n      lt\n        /* \"contracts/FaisaaToken.sol\":16579:16611  require(n < 2**32, errorMessage) */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_189\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_187)\n        /* \"contracts/FaisaaToken.sol\":99:17348  contract Faisaa {\r... */\n    tag_154:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n    stop\n    data_06ee8fd590cdc34084a0a93806ff7f052e42252de31367891afc0c9c911dcbe5 4661697361613a3a6d696e743a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373\n    data_0ef9b1138f7fe56190f837aebeac3f83ce57900277382d69d32939dbf4287f14 4661697361613a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773\n    data_2916bd5d9f3a5329c4fa4d99e766ef3046ffc185f6f1990dafcd61d8c37227ba 4661697361613a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773\n    data_428c16dcdda4166530f34a26c4e94fb86da1569e2a9829862ee509d219284dd8 4661697361613a3a617070726f76653a20616d6f756e7420657863656564732039362062697473\n    data_43ed79fb8577a7fd423a8b2881d6391af07471b5737d457346ebe6ee6b0cee9e 4661697361613a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_47cfc577cce83a034131ee7e3a3f248dd2402932183c3369404366188973b247 4661697361613a3a6d696e743a206d696e74696e67206e6f7420616c6c6f77656420796574\n    data_4b8291aee6764a0a745b0e353b7b208822ccbb09ab1975dce9e22b9009718407 4661697361613a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373\n    data_66d321922337c5b7814f518438c8464c8efbbb77ade775957918251086a37924 4661697361613a3a7065726d69743a207369676e61747572652065787069726564\n    data_6856bf735a26f81aa3418108149773825e6954c4c601de22633b87a95b09de31 4661697361613a3a7365744d696e7465723a206f6e6c7920746865206d696e7465722063616e206368616e676520746865206d696e7465722061646472657373\n    data_6e6266f1ed26838a519be3251a5adc1b708c96f88b2d9fca8c7664416cc89ae8 4661697361613a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365\n    data_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529\n    data_74df45df00faba5bc1ed7d46b19584c67a1a16fa2b4884024b61f1c877a11495 4661697361613a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_7bba7b7f3786cb16c894e9f3d17e6938ea20c55fb0d256b4342cf8e91cd2677e 4661697361613a3a7065726d69743a20696e76616c6964207369676e6174757265\n    data_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866 454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n    data_930851ea43cac2873108cbbc75da47df319dfb5d34d9bc02c61e0c540ad465f8 4661697361613a3a6d696e743a20616d6f756e7420657863656564732039362062697473\n    data_a164aaf472e5193ae08911c43f0e932009bd6899893d2553e9b4bae60bf5dbf4 4661697361613a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473\n    data_a2f14eebe3bbc7d4adc60052a7d595b79f34724fbfa7082143585fb5bd8626ee 4661697361613a3a64656c656761746542795369673a207369676e61747572652065787069726564\n    data_a4168aba4fc669f0dc452530929310103d41a501cffe432724f3e347c4692ffd 4661697361613a3a7065726d69743a20616d6f756e7420657863656564732039362062697473\n    data_b03f8a305451fbc58fdc933bd269d18af5db07650e26a77dc772c6fadf875335 4661697361613a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_b50b21b8e6629dceee6e3bfa4e8b2213ec51504b30e82482904829a475f147a4 4661697361613a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773\n    data_b7ebab050738648e1b5349fb2fbed408028a6c60180b562f13f48eb805432532 4661697361613a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473\n    data_be8a6d809cc9f4ff1cf4521b91f51874149bae2006223ec41845b088e1693560 4661697361613a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365\n    data_db5d92e49fd459b5013588af7233493889e9b54ed887d70a2e2719b899396d06 4661697361613a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d696e74\n    data_e175c657e0f1e403f720ee547408b254751930f62507bddf82a8534bbb500da4 4661697361613a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564\n    data_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf 44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929\n    data_fc42ecd0ad65ac67b8bb4dbac768677706fb9a0fbb6335d058dc53a56bbd31df 4661697361613a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265\n    data_fc81d128416baf4fee714ec0d5401cbb3caca3ea6e814a2d780d0598ff531954 4661697361613a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773\n\n    auxdata: 0xa265627a7a7231582075cf1ac95cf72a24f2fcb0d7b3b4d5f89ca3ab88684d72b11352e2cba61a6a1764736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526a52b7d2dcc80cd2e400000060005534801561001f57600080fd5b506040516127963803806127968339818101604052606081101561004257600080fd5b5080516020820151604090920151909190428110156100925760405162461bcd60e51b815260040180806020018281038252603c81526020018061275a603c913960400191505060405180910390fd5b600080546001600160a01b03851680835260046020908152604080852080546001600160601b0319166001600160601b03909516949094179093558354835190815292519193927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3600180546001600160a01b0319166001600160a01b038481169190911791829055604080516000815292909116602083015280517f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f69281900390910190a160025550506125e4806101766000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80636fcfff45116100f9578063b4b5ea5711610097578063dd62ed3e11610071578063dd62ed3e14610579578063e7a324dc146105a7578063f1127ed8146105af578063fca3b5aa1461060e576101b9565b8063b4b5ea57146104bb578063c3cda520146104e1578063d505accf14610528576101b9565b8063782d6fe1116100d3578063782d6fe1146104145780637ecebe001461046157806395d89b4114610487578063a9059cbb1461048f576101b9565b80636fcfff45146103c057806370a08231146103e657806376c71ca11461040c576101b9565b806330adf81f1161016657806340c10f191161014057806340c10f1914610325578063587cde1e146103535780635c11d62f146103795780635c19a95c1461039a576101b9565b806330adf81f146102f757806330b36cef146102ff578063313ce56714610307576101b9565b806318160ddd1161019757806318160ddd1461029f57806320606b70146102b957806323b872dd146102c1576101b9565b806306fdde03146101be578063075461721461023b578063095ea7b31461025f575b600080fd5b6101c6610634565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102005781810151838201526020016101e8565b50505050905090810190601f16801561022d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024361066d565b604080516001600160a01b039092168252519081900360200190f35b61028b6004803603604081101561027557600080fd5b506001600160a01b03813516906020013561067c565b604080519115158252519081900360200190f35b6102a7610757565b60408051918252519081900360200190f35b6102a761075d565b61028b600480360360608110156102d757600080fd5b506001600160a01b03813581169160208101359091169060400135610778565b6102a76108e4565b6102a76108ff565b61030f610905565b6040805160ff9092168252519081900360200190f35b6103516004803603604081101561033b57600080fd5b506001600160a01b03813516906020013561090a565b005b6102436004803603602081101561036957600080fd5b50356001600160a01b0316610b57565b610381610b72565b6040805163ffffffff9092168252519081900360200190f35b610351600480360360208110156103b057600080fd5b50356001600160a01b0316610b7a565b610381600480360360208110156103d657600080fd5b50356001600160a01b0316610b87565b6102a7600480360360208110156103fc57600080fd5b50356001600160a01b0316610b9f565b61030f610bc8565b6104406004803603604081101561042a57600080fd5b506001600160a01b038135169060200135610bcd565b604080516bffffffffffffffffffffffff9092168252519081900360200190f35b6102a76004803603602081101561047757600080fd5b50356001600160a01b0316610e0c565b6101c6610e1e565b61028b600480360360408110156104a557600080fd5b506001600160a01b038135169060200135610e57565b610440600480360360208110156104d157600080fd5b50356001600160a01b0316610e93565b610351600480360360c08110156104f757600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135610f0a565b610351600480360360e081101561053e57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561121f565b6102a76004803603604081101561058f57600080fd5b506001600160a01b0381358116916020013516611692565b6102a76116cb565b6105e1600480360360408110156105c557600080fd5b5080356001600160a01b0316906020013563ffffffff166116e6565b6040805163ffffffff90931683526bffffffffffffffffffffffff90911660208301528051918290030190f35b6103516004803603602081101561062457600080fd5b50356001600160a01b0316611721565b6040518060400160405280600681526020017f466169736161000000000000000000000000000000000000000000000000000081525081565b6001546001600160a01b031681565b60008060001983141561069257506000196106b7565b6106b48360405180606001604052806027815260200161213b602791396117ec565b90505b3360008181526003602090815260408083206001600160a01b0389168085529083529281902080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff8716908117909155815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a360019150505b92915050565b60005481565b60405180604361234c82396043019050604051809103902081565b6001600160a01b03831660009081526003602090815260408083203380855290835281842054825160608101909352602780845291936bffffffffffffffffffffffff9091169285926107d5928892919061213b908301396117ec565b9050866001600160a01b0316836001600160a01b03161415801561080757506bffffffffffffffffffffffff82811614155b156108cc57600061083183836040518060600160405280603f815260200161225c603f913961188f565b6001600160a01b038981166000818152600360209081526040808320948a168084529482529182902080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff871690811790915582519081529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a3505b6108d7878783611906565b5060019695505050505050565b60405180605261229b82396052019050604051809103902081565b60025481565b601281565b6001546001600160a01b031633146109535760405162461bcd60e51b81526004018080602001828103825260268152602001806124d66026913960400191505060405180910390fd5b6002544210156109945760405162461bcd60e51b815260040180806020018281038252602581526020018061219a6025913960400191505060405180910390fd5b6001600160a01b0382166109d95760405162461bcd60e51b81526004018080602001828103825260318152602001806120b16031913960400191505060405180910390fd5b6109e7426301e13380611b25565b6002819055506000610a118260405180606001604052806024815260200161238f602491396117ec565b9050610a4e610a30600054836bffffffffffffffffffffffff16611b25565b6040518060600160405280602981526020016123b3602991396117ec565b6bffffffffffffffffffffffff90811660009081556001600160a01b038516815260046020908152604091829020548251606081019093526027808452610aa594919091169285929091906120e290830139611b7d565b6001600160a01b038416600081815260046020908152604080832080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff9687161790558051948616855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36001600160a01b03808416600090815260056020526040812054610b52921683611bec565b505050565b6005602052600090815260409020546001600160a01b031681565b6301e1338081565b610b843382611d8f565b50565b60076020526000908152604090205463ffffffff1681565b6001600160a01b03166000908152600460205260409020546bffffffffffffffffffffffff1690565b600281565b6000438210610c0d5760405162461bcd60e51b81526004018080602001828103825260298152602001806124fc6029913960400191505060405180910390fd5b6001600160a01b03831660009081526007602052604090205463ffffffff1680610c3b576000915050610751565b6001600160a01b038416600090815260066020908152604080832063ffffffff600019860181168552925290912054168310610cbd576001600160a01b03841660009081526006602090815260408083206000199490940163ffffffff168352929052205464010000000090046bffffffffffffffffffffffff169050610751565b6001600160a01b038416600090815260066020908152604080832083805290915290205463ffffffff16831015610cf8576000915050610751565b600060001982015b8163ffffffff168163ffffffff161115610dc157600282820363ffffffff16048103610d2a612099565b506001600160a01b038716600090815260066020908152604080832063ffffffff8581168552908352928190208151808301909252549283168082526401000000009093046bffffffffffffffffffffffff169181019190915290871415610d9c576020015194506107519350505050565b805163ffffffff16871115610db357819350610dba565b6001820392505b5050610d00565b506001600160a01b038516600090815260066020908152604080832063ffffffff909416835292905220546bffffffffffffffffffffffff6401000000009091041691505092915050565b60086020526000908152604090205481565b6040518060400160405280600681526020017f464149534141000000000000000000000000000000000000000000000000000081525081565b600080610e7c8360405180606001604052806028815260200161248a602891396117ec565b9050610e89338583611906565b5060019392505050565b6001600160a01b03811660009081526007602052604081205463ffffffff1680610ebe576000610f03565b6001600160a01b0383166000908152600660209081526040808320600019850163ffffffff16845290915290205464010000000090046bffffffffffffffffffffffff165b9392505050565b6000604051808061234c6043913960408051918290036043018220828201909152600682527f466169736161000000000000000000000000000000000000000000000000000060209092019190915290507f9869eadf408163ba154b1c0ee82ba4780d5d47224d67622ac848d92c700ab76d610f84611e36565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b0316815260200194505050505060405160208183030381529060405280519060200120905060006040518080612525603a91396040805191829003603a0182206020808401919091526001600160a01b038c1683830152606083018b905260808084018b90528251808503909101815260a0840183528051908201207f190100000000000000000000000000000000000000000000000000000000000060c085015260c2840187905260e2808501829052835180860390910181526101028501808552815191840191909120600091829052610122860180865281905260ff8c1661014287015261016286018b905261018286018a9052935191965092945091926001926101a280830193927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08301929081900390910190855afa1580156110fb573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b03811661116b5760405162461bcd60e51b815260040180806020018281038252602881526020018061255f6028913960400191505060405180910390fd5b6001600160a01b038116600090815260086020526040902080546001810190915589146111c95760405162461bcd60e51b81526004018080602001828103825260248152602001806124b26024913960400191505060405180910390fd5b874211156112085760405162461bcd60e51b81526004018080602001828103825260288152602001806123dc6028913960400191505060405180910390fd5b611212818b611d8f565b505050505b505050505050565b60006000198614156112345750600019611259565b61125686604051806060016040528060268152602001612404602691396117ec565b90505b6000604051808061234c6043913960408051918290036043018220828201909152600682527f466169736161000000000000000000000000000000000000000000000000000060209092019190915290507f9869eadf408163ba154b1c0ee82ba4780d5d47224d67622ac848d92c700ab76d6112d3611e36565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b031681526020019450505050506040516020818303038152906040528051906020012090506000604051808061229b60529139605201905060405180910390208a8a8a600860008f6001600160a01b03166001600160a01b031681526020019081526020016000206000815480929190600101919050558b60405160200180878152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b0316815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018289898960405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561149f573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b03811661150f5760405162461bcd60e51b815260040180806020018281038252602181526020018061232b6021913960400191505060405180910390fd5b8b6001600160a01b0316816001600160a01b031614611575576040805162461bcd60e51b815260206004820152601c60248201527f4661697361613a3a7065726d69743a20756e617574686f72697a656400000000604482015290519081900360640190fd5b884211156115b45760405162461bcd60e51b81526004018080602001828103825260218152602001806121fb6021913960400191505060405180910390fd5b84600360008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508a6001600160a01b03168c6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258760405180826bffffffffffffffffffffffff16815260200191505060405180910390a3505050505050505050505050565b6001600160a01b0391821660009081526003602090815260408083209390941682529190915220546bffffffffffffffffffffffff1690565b60405180603a6125258239603a019050604051809103902081565b600660209081526000928352604080842090915290825290205463ffffffff81169064010000000090046bffffffffffffffffffffffff1682565b6001546001600160a01b0316331461176a5760405162461bcd60e51b815260040180806020018281038252604081526020018061221c6040913960400191505060405180910390fd5b600154604080516001600160a01b039283168152918316602083015280517f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f69281900390910190a1600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000816c0100000000000000000000000084106118875760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561184c578181015183820152602001611834565b50505050905090810190601f1680156118795780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b509192915050565b6000836bffffffffffffffffffffffff16836bffffffffffffffffffffffff16111582906118fe5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561184c578181015183820152602001611834565b505050900390565b6001600160a01b03831661194b5760405162461bcd60e51b815260040180806020018281038252603e8152602001806122ed603e913960400191505060405180910390fd5b6001600160a01b0382166119905760405162461bcd60e51b815260040180806020018281038252603c8152602001806121bf603c913960400191505060405180910390fd5b6001600160a01b0383166000908152600460209081526040918290205482516060810190935260388084526119e0936bffffffffffffffffffffffff90921692859291906121629083013961188f565b6001600160a01b03848116600090815260046020908152604080832080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff968716179055928616825290829020548251606081019093526032808452611a65949190911692859290919061210990830139611b7d565b6001600160a01b0383811660008181526004602090815260409182902080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff9687161790558151948616855290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36001600160a01b03808416600090815260056020526040808220548584168352912054610b5292918216911683611bec565b80820182811015610751576040805162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000604482015290519081900360640190fd5b6000838301826bffffffffffffffffffffffff8087169083161015611be35760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561184c578181015183820152602001611834565b50949350505050565b816001600160a01b0316836001600160a01b031614158015611c1c57506000816bffffffffffffffffffffffff16115b15610b52576001600160a01b03831615611cda576001600160a01b03831660009081526007602052604081205463ffffffff169081611c5c576000611ca1565b6001600160a01b0385166000908152600660209081526040808320600019860163ffffffff16845290915290205464010000000090046bffffffffffffffffffffffff165b90506000611cc882856040518060600160405280602a8152602001612460602a913961188f565b9050611cd686848484611e3a565b5050505b6001600160a01b03821615610b52576001600160a01b03821660009081526007602052604081205463ffffffff169081611d15576000611d5a565b6001600160a01b0384166000908152600660209081526040808320600019860163ffffffff16845290915290205464010000000090046bffffffffffffffffffffffff165b90506000611d81828560405180606001604052806029815260200161258760299139611b7d565b905061121785848484611e3a565b6001600160a01b03808316600081815260056020818152604080842080546004845282862054949093528787167fffffffffffffffffffffffff000000000000000000000000000000000000000084168117909155905191909516946bffffffffffffffffffffffff9092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611e30828483611bec565b50505050565b4690565b6000611e5e4360405180606001604052806036815260200161242a60369139612043565b905060008463ffffffff16118015611ea757506001600160a01b038516600090815260066020908152604080832063ffffffff6000198901811685529252909120548282169116145b15611f1b576001600160a01b0385166000908152600660209081526040808320600019880163ffffffff168452909152902080547fffffffffffffffffffffffffffffffff000000000000000000000000ffffffff166401000000006bffffffffffffffffffffffff851602179055611fea565b60408051808201825263ffffffff80841682526bffffffffffffffffffffffff80861660208085019182526001600160a01b038b166000818152600683528781208c871682528352878120965187549451909516640100000000027fffffffffffffffffffffffffffffffff000000000000000000000000ffffffff9587167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000958616179590951694909417909555938252600790935292909220805460018801909316929091169190911790555b604080516bffffffffffffffffffffffff80861682528416602082015281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b60008164010000000084106118875760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561184c578181015183820152602001611834565b60408051808201909152600080825260208201529056fe4661697361613a3a6d696e743a2063616e6e6f74207472616e7366657220746f20746865207a65726f20616464726573734661697361613a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f77734661697361613a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f77734661697361613a3a617070726f76653a20616d6f756e74206578636565647320393620626974734661697361613a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e63654661697361613a3a6d696e743a206d696e74696e67206e6f7420616c6c6f776564207965744661697361613a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f20616464726573734661697361613a3a7065726d69743a207369676e617475726520657870697265644661697361613a3a7365744d696e7465723a206f6e6c7920746865206d696e7465722063616e206368616e676520746865206d696e74657220616464726573734661697361613a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e63655065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e65294661697361613a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f20616464726573734661697361613a3a7065726d69743a20696e76616c6964207369676e6174757265454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374294661697361613a3a6d696e743a20616d6f756e74206578636565647320393620626974734661697361613a3a6d696e743a20746f74616c537570706c79206578636565647320393620626974734661697361613a3a64656c656761746542795369673a207369676e617475726520657870697265644661697361613a3a7065726d69743a20616d6f756e74206578636565647320393620626974734661697361613a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974734661697361613a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77734661697361613a3a7472616e736665723a20616d6f756e74206578636565647320393620626974734661697361613a3a64656c656761746542795369673a20696e76616c6964206e6f6e63654661697361613a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d696e744661697361613a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656444656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e7432353620657870697279294661697361613a3a64656c656761746542795369673a20696e76616c6964207369676e61747572654661697361613a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773a265627a7a7231582075cf1ac95cf72a24f2fcb0d7b3b4d5f89ca3ab88684d72b11352e2cba61a6a1764736f6c634300051000324661697361613a3a636f6e7374727563746f723a206d696e74696e672063616e206f6e6c7920626567696e206166746572206465706c6f796d656e74",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2796 CODESIZE SUB DUP1 PUSH2 0x2796 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP2 SWAP1 TIMESTAMP DUP2 LT ISZERO PUSH2 0x92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x275A PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP4 SLOAD DUP4 MLOAD SWAP1 DUP2 MSTORE SWAP3 MLOAD SWAP2 SWAP4 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x2 SSTORE POP POP PUSH2 0x25E4 DUP1 PUSH2 0x176 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x60E JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x528 JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x48F JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x76C71CA1 EQ PUSH2 0x40C JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x5C11D62F EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x39A JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x30B36CEF EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x307 JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x197 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C1 JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6 PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x200 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x22D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0x757 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0x75D JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x778 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x30F PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x90A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x381 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x30F PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE0C JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0xE1E JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x121F JUMP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x5E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x16E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4661697361610000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x692 JUMPI POP PUSH1 0x0 NOT PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x6B4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213B PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x234C DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x27 DUP1 DUP5 MSTORE SWAP2 SWAP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 PUSH2 0x7D5 SWAP3 DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x213B SWAP1 DUP4 ADD CODECOPY PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x807 JUMPI POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8CC JUMPI PUSH1 0x0 PUSH2 0x831 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x225C PUSH1 0x3F SWAP2 CODECOPY PUSH2 0x188F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP11 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP JUMPDEST PUSH2 0x8D7 DUP8 DUP8 DUP4 PUSH2 0x1906 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x52 PUSH2 0x229B DUP3 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24D6 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x219A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20B1 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E7 TIMESTAMP PUSH4 0x1E13380 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xA11 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x238F PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP PUSH2 0xA4E PUSH2 0xA30 PUSH1 0x0 SLOAD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23B3 PUSH1 0x29 SWAP2 CODECOPY PUSH2 0x17EC JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x27 DUP1 DUP5 MSTORE PUSH2 0xAA5 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x20E2 SWAP1 DUP4 ADD CODECOPY PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND OR SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP7 AND DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB52 SWAP3 AND DUP4 PUSH2 0x1BEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0xB84 CALLER DUP3 PUSH2 0x1D8F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xC0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24FC PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xC3B JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xCBD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP5 SWAP1 SWAP5 ADD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xD2A PUSH2 0x2099 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP6 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH5 0x100000000 SWAP1 SWAP4 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0xD9C JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x751 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xDB3 JUMPI DUP2 SWAP4 POP PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xD00 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH5 0x100000000 SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4641495341410000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE7C DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x248A PUSH1 0x28 SWAP2 CODECOPY PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP PUSH2 0xE89 CALLER DUP6 DUP4 PUSH2 0x1906 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xEBE JUMPI PUSH1 0x0 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP6 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x234C PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x43 ADD DUP3 KECCAK256 DUP3 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH32 0x4661697361610000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP PUSH32 0x9869EADF408163BA154B1C0EE82BA4780D5D47224D67622AC848D92C700AB76D PUSH2 0xF84 PUSH2 0x1E36 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2525 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x3A ADD DUP3 KECCAK256 PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP5 ADD DUP12 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC2 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0xE2 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x102 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x122 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP13 AND PUSH2 0x142 DUP8 ADD MSTORE PUSH2 0x162 DUP7 ADD DUP12 SWAP1 MSTORE PUSH2 0x182 DUP7 ADD DUP11 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP7 POP SWAP3 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x1A2 DUP1 DUP4 ADD SWAP4 SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x255F PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0x11C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24B2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23DC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1212 DUP2 DUP12 PUSH2 0x1D8F JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP7 EQ ISZERO PUSH2 0x1234 JUMPI POP PUSH1 0x0 NOT PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x1256 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2404 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x234C PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x43 ADD DUP3 KECCAK256 DUP3 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH32 0x4661697361610000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP PUSH32 0x9869EADF408163BA154B1C0EE82BA4780D5D47224D67622AC848D92C700AB76D PUSH2 0x12D3 PUSH2 0x1E36 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x229B PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP11 DUP11 DUP11 PUSH1 0x8 PUSH1 0x0 DUP16 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x149F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x150F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x232B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1575 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661697361613A3A7065726D69743A20756E617574686F72697A656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP9 TIMESTAMP GT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21FB PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x3 PUSH1 0x0 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x2525 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x176A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x221C PUSH1 0x40 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH13 0x1000000000000000000000000 DUP5 LT PUSH2 0x1887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x184C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1834 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1879 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO DUP3 SWAP1 PUSH2 0x18FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x184C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1834 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x194B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22ED PUSH1 0x3E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1990 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21BF PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x38 DUP1 DUP5 MSTORE PUSH2 0x19E0 SWAP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x2162 SWAP1 DUP4 ADD CODECOPY PUSH2 0x188F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP3 DUP7 AND DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x32 DUP1 DUP5 MSTORE PUSH2 0x1A65 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2109 SWAP1 DUP4 ADD CODECOPY PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND OR SWAP1 SSTORE DUP2 MLOAD SWAP5 DUP7 AND DUP6 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xB52 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1BEC JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x751 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP1 DUP4 AND LT ISZERO PUSH2 0x1BE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x184C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1834 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1C1C JUMPI POP PUSH1 0x0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0xB52 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1CDA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1C5C JUMPI PUSH1 0x0 PUSH2 0x1CA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CC8 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2460 PUSH1 0x2A SWAP2 CODECOPY PUSH2 0x188F JUMP JUMPDEST SWAP1 POP PUSH2 0x1CD6 DUP7 DUP5 DUP5 DUP5 PUSH2 0x1E3A JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xB52 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1D15 JUMPI PUSH1 0x0 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D81 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2587 PUSH1 0x29 SWAP2 CODECOPY PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP PUSH2 0x1217 DUP6 DUP5 DUP5 DUP5 PUSH2 0x1E3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x4 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1E30 DUP3 DUP5 DUP4 PUSH2 0x1BEC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5E NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x242A PUSH1 0x36 SWAP2 CODECOPY PUSH2 0x2043 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1EA7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x1F1B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP9 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000FFFFFFFF AND PUSH5 0x100000000 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND MUL OR SWAP1 SSTORE PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE DUP8 DUP2 KECCAK256 DUP13 DUP8 AND DUP3 MSTORE DUP4 MSTORE DUP8 DUP2 KECCAK256 SWAP7 MLOAD DUP8 SLOAD SWAP5 MLOAD SWAP1 SWAP6 AND PUSH5 0x100000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000FFFFFFFF SWAP6 DUP8 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 SWAP6 DUP7 AND OR SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP6 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP9 ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x1887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x184C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH14 0x696E743A2063616E6E6F74207472 PUSH2 0x6E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737346 PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH14 0x696E743A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206F766572666C6F77734661697361613A3A5F74 PUSH19 0x616E73666572546F6B656E733A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206F766572666C6F777346616973 PUSH2 0x613A GASPRICE PUSH2 0x7070 PUSH19 0x6F76653A20616D6F756E742065786365656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE 0x5F PUSH21 0x72616E73666572546F6B656E733A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65466169 PUSH20 0x61613A3A6D696E743A206D696E74696E67206E6F PUSH21 0x20616C6C6F776564207965744661697361613A3A5F PUSH21 0x72616E73666572546F6B656E733A2063616E6E6F74 KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH17 0x65726D69743A207369676E617475726520 PUSH6 0x787069726564 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH20 0x65744D696E7465723A206F6E6C7920746865206D PUSH10 0x6E7465722063616E2063 PUSH9 0x616E67652074686520 PUSH14 0x696E746572206164647265737346 PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH21 0x72616E7366657246726F6D3A207472616E73666572 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E63655065726D69742861646472 PUSH6 0x7373206F776E PUSH6 0x722C61646472 PUSH6 0x737320737065 PUSH15 0x6465722C75696E743235362076616C PUSH22 0x652C75696E74323536206E6F6E63652C75696E743235 CALLDATASIZE KECCAK256 PUSH5 0x6561646C69 PUSH15 0x65294661697361613A3A5F7472616E PUSH20 0x666572546F6B656E733A2063616E6E6F74207472 PUSH2 0x6E73 PUSH7 0x65722066726F6D KECCAK256 PUSH21 0x6865207A65726F2061646472657373466169736161 GASPRICE GASPRICE PUSH17 0x65726D69743A20696E76616C6964207369 PUSH8 0x6E61747572654549 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E747261637429466169736161 GASPRICE GASPRICE PUSH14 0x696E743A20616D6F756E74206578 PUSH4 0x65656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH14 0x696E743A20746F74616C53757070 PUSH13 0x79206578636565647320393620 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A207369676E617475726520657870 PUSH10 0x7265644661697361613A GASPRICE PUSH17 0x65726D69743A20616D6F756E7420657863 PUSH6 0x656473203936 KECCAK256 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE 0x5F PUSH14 0x6F7665566F7465733A20766F7465 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420756E646572666C6F77734661697361613A3A74 PUSH19 0x616E736665723A20616D6F756E742065786365 PUSH6 0x647320393620 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964206E6F6E6365 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH14 0x696E743A206F6E6C792074686520 PUSH14 0x696E7465722063616E206D696E74 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 DIFFICULTY PUSH6 0x6C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964207369676E61 PUSH21 0x7572654661697361613A3A5F6D6F7665566F746573 GASPRICE KECCAK256 PUSH23 0x6F746520616D6F756E74206F766572666C6F7773A26562 PUSH27 0x7A7231582075CF1AC95CF72A24F2FCB0D7B3B4D5F89CA3AB88684D PUSH19 0xB11352E2CBA61A6A1764736F6C634300051000 ORIGIN CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH4 0x6F6E7374 PUSH19 0x7563746F723A206D696E74696E672063616E20 PUSH16 0x6E6C7920626567696E20616674657220 PUSH5 0x65706C6F79 PUSH14 0x656E740000000000000000000000 ",
							"sourceMap": "99:17249:0:-;;;499:14;473:40;;3568:450;8:9:-1;5:2;;;30:1;27;20:12;5:2;3568:450:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3568:450:0;;;;;;;;;;;;;;3691:15;3667:39;;;3659:112;;;;-1:-1:-1;;;3659:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3811:11;;;-1:-1:-1;;;;;3784:17:0;;;;;:8;:17;;;;;;;;:39;;-1:-1:-1;;;;;;3784:39:0;-1:-1:-1;;;;;3784:39:0;;;;;;;;;;3869:11;;3839:42;;;;;;;3784:17;;3811:11;3839:42;;;;;;;;;;;3892:6;:16;;-1:-1:-1;;;;;;3892:16:0;-1:-1:-1;;;;;3892:16:0;;;;;;;;;;;3924:33;;;-1:-1:-1;3924:33:0;;3950:6;;;;3924:33;;;;;;;;;;;;;;;;3968:19;:42;-1:-1:-1;;99:17249:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101b95760003560e01c80636fcfff45116100f9578063b4b5ea5711610097578063dd62ed3e11610071578063dd62ed3e14610579578063e7a324dc146105a7578063f1127ed8146105af578063fca3b5aa1461060e576101b9565b8063b4b5ea57146104bb578063c3cda520146104e1578063d505accf14610528576101b9565b8063782d6fe1116100d3578063782d6fe1146104145780637ecebe001461046157806395d89b4114610487578063a9059cbb1461048f576101b9565b80636fcfff45146103c057806370a08231146103e657806376c71ca11461040c576101b9565b806330adf81f1161016657806340c10f191161014057806340c10f1914610325578063587cde1e146103535780635c11d62f146103795780635c19a95c1461039a576101b9565b806330adf81f146102f757806330b36cef146102ff578063313ce56714610307576101b9565b806318160ddd1161019757806318160ddd1461029f57806320606b70146102b957806323b872dd146102c1576101b9565b806306fdde03146101be578063075461721461023b578063095ea7b31461025f575b600080fd5b6101c6610634565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102005781810151838201526020016101e8565b50505050905090810190601f16801561022d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024361066d565b604080516001600160a01b039092168252519081900360200190f35b61028b6004803603604081101561027557600080fd5b506001600160a01b03813516906020013561067c565b604080519115158252519081900360200190f35b6102a7610757565b60408051918252519081900360200190f35b6102a761075d565b61028b600480360360608110156102d757600080fd5b506001600160a01b03813581169160208101359091169060400135610778565b6102a76108e4565b6102a76108ff565b61030f610905565b6040805160ff9092168252519081900360200190f35b6103516004803603604081101561033b57600080fd5b506001600160a01b03813516906020013561090a565b005b6102436004803603602081101561036957600080fd5b50356001600160a01b0316610b57565b610381610b72565b6040805163ffffffff9092168252519081900360200190f35b610351600480360360208110156103b057600080fd5b50356001600160a01b0316610b7a565b610381600480360360208110156103d657600080fd5b50356001600160a01b0316610b87565b6102a7600480360360208110156103fc57600080fd5b50356001600160a01b0316610b9f565b61030f610bc8565b6104406004803603604081101561042a57600080fd5b506001600160a01b038135169060200135610bcd565b604080516bffffffffffffffffffffffff9092168252519081900360200190f35b6102a76004803603602081101561047757600080fd5b50356001600160a01b0316610e0c565b6101c6610e1e565b61028b600480360360408110156104a557600080fd5b506001600160a01b038135169060200135610e57565b610440600480360360208110156104d157600080fd5b50356001600160a01b0316610e93565b610351600480360360c08110156104f757600080fd5b506001600160a01b038135169060208101359060408101359060ff6060820135169060808101359060a00135610f0a565b610351600480360360e081101561053e57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561121f565b6102a76004803603604081101561058f57600080fd5b506001600160a01b0381358116916020013516611692565b6102a76116cb565b6105e1600480360360408110156105c557600080fd5b5080356001600160a01b0316906020013563ffffffff166116e6565b6040805163ffffffff90931683526bffffffffffffffffffffffff90911660208301528051918290030190f35b6103516004803603602081101561062457600080fd5b50356001600160a01b0316611721565b6040518060400160405280600681526020017f466169736161000000000000000000000000000000000000000000000000000081525081565b6001546001600160a01b031681565b60008060001983141561069257506000196106b7565b6106b48360405180606001604052806027815260200161213b602791396117ec565b90505b3360008181526003602090815260408083206001600160a01b0389168085529083529281902080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff8716908117909155815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a360019150505b92915050565b60005481565b60405180604361234c82396043019050604051809103902081565b6001600160a01b03831660009081526003602090815260408083203380855290835281842054825160608101909352602780845291936bffffffffffffffffffffffff9091169285926107d5928892919061213b908301396117ec565b9050866001600160a01b0316836001600160a01b03161415801561080757506bffffffffffffffffffffffff82811614155b156108cc57600061083183836040518060600160405280603f815260200161225c603f913961188f565b6001600160a01b038981166000818152600360209081526040808320948a168084529482529182902080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff871690811790915582519081529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a3505b6108d7878783611906565b5060019695505050505050565b60405180605261229b82396052019050604051809103902081565b60025481565b601281565b6001546001600160a01b031633146109535760405162461bcd60e51b81526004018080602001828103825260268152602001806124d66026913960400191505060405180910390fd5b6002544210156109945760405162461bcd60e51b815260040180806020018281038252602581526020018061219a6025913960400191505060405180910390fd5b6001600160a01b0382166109d95760405162461bcd60e51b81526004018080602001828103825260318152602001806120b16031913960400191505060405180910390fd5b6109e7426301e13380611b25565b6002819055506000610a118260405180606001604052806024815260200161238f602491396117ec565b9050610a4e610a30600054836bffffffffffffffffffffffff16611b25565b6040518060600160405280602981526020016123b3602991396117ec565b6bffffffffffffffffffffffff90811660009081556001600160a01b038516815260046020908152604091829020548251606081019093526027808452610aa594919091169285929091906120e290830139611b7d565b6001600160a01b038416600081815260046020908152604080832080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff9687161790558051948616855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36001600160a01b03808416600090815260056020526040812054610b52921683611bec565b505050565b6005602052600090815260409020546001600160a01b031681565b6301e1338081565b610b843382611d8f565b50565b60076020526000908152604090205463ffffffff1681565b6001600160a01b03166000908152600460205260409020546bffffffffffffffffffffffff1690565b600281565b6000438210610c0d5760405162461bcd60e51b81526004018080602001828103825260298152602001806124fc6029913960400191505060405180910390fd5b6001600160a01b03831660009081526007602052604090205463ffffffff1680610c3b576000915050610751565b6001600160a01b038416600090815260066020908152604080832063ffffffff600019860181168552925290912054168310610cbd576001600160a01b03841660009081526006602090815260408083206000199490940163ffffffff168352929052205464010000000090046bffffffffffffffffffffffff169050610751565b6001600160a01b038416600090815260066020908152604080832083805290915290205463ffffffff16831015610cf8576000915050610751565b600060001982015b8163ffffffff168163ffffffff161115610dc157600282820363ffffffff16048103610d2a612099565b506001600160a01b038716600090815260066020908152604080832063ffffffff8581168552908352928190208151808301909252549283168082526401000000009093046bffffffffffffffffffffffff169181019190915290871415610d9c576020015194506107519350505050565b805163ffffffff16871115610db357819350610dba565b6001820392505b5050610d00565b506001600160a01b038516600090815260066020908152604080832063ffffffff909416835292905220546bffffffffffffffffffffffff6401000000009091041691505092915050565b60086020526000908152604090205481565b6040518060400160405280600681526020017f464149534141000000000000000000000000000000000000000000000000000081525081565b600080610e7c8360405180606001604052806028815260200161248a602891396117ec565b9050610e89338583611906565b5060019392505050565b6001600160a01b03811660009081526007602052604081205463ffffffff1680610ebe576000610f03565b6001600160a01b0383166000908152600660209081526040808320600019850163ffffffff16845290915290205464010000000090046bffffffffffffffffffffffff165b9392505050565b6000604051808061234c6043913960408051918290036043018220828201909152600682527f466169736161000000000000000000000000000000000000000000000000000060209092019190915290507f9869eadf408163ba154b1c0ee82ba4780d5d47224d67622ac848d92c700ab76d610f84611e36565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b0316815260200194505050505060405160208183030381529060405280519060200120905060006040518080612525603a91396040805191829003603a0182206020808401919091526001600160a01b038c1683830152606083018b905260808084018b90528251808503909101815260a0840183528051908201207f190100000000000000000000000000000000000000000000000000000000000060c085015260c2840187905260e2808501829052835180860390910181526101028501808552815191840191909120600091829052610122860180865281905260ff8c1661014287015261016286018b905261018286018a9052935191965092945091926001926101a280830193927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08301929081900390910190855afa1580156110fb573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b03811661116b5760405162461bcd60e51b815260040180806020018281038252602881526020018061255f6028913960400191505060405180910390fd5b6001600160a01b038116600090815260086020526040902080546001810190915589146111c95760405162461bcd60e51b81526004018080602001828103825260248152602001806124b26024913960400191505060405180910390fd5b874211156112085760405162461bcd60e51b81526004018080602001828103825260288152602001806123dc6028913960400191505060405180910390fd5b611212818b611d8f565b505050505b505050505050565b60006000198614156112345750600019611259565b61125686604051806060016040528060268152602001612404602691396117ec565b90505b6000604051808061234c6043913960408051918290036043018220828201909152600682527f466169736161000000000000000000000000000000000000000000000000000060209092019190915290507f9869eadf408163ba154b1c0ee82ba4780d5d47224d67622ac848d92c700ab76d6112d3611e36565b3060405160200180858152602001848152602001838152602001826001600160a01b03166001600160a01b031681526020019450505050506040516020818303038152906040528051906020012090506000604051808061229b60529139605201905060405180910390208a8a8a600860008f6001600160a01b03166001600160a01b031681526020019081526020016000206000815480929190600101919050558b60405160200180878152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b0316815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018289898960405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561149f573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b03811661150f5760405162461bcd60e51b815260040180806020018281038252602181526020018061232b6021913960400191505060405180910390fd5b8b6001600160a01b0316816001600160a01b031614611575576040805162461bcd60e51b815260206004820152601c60248201527f4661697361613a3a7065726d69743a20756e617574686f72697a656400000000604482015290519081900360640190fd5b884211156115b45760405162461bcd60e51b81526004018080602001828103825260218152602001806121fb6021913960400191505060405180910390fd5b84600360008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508a6001600160a01b03168c6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258760405180826bffffffffffffffffffffffff16815260200191505060405180910390a3505050505050505050505050565b6001600160a01b0391821660009081526003602090815260408083209390941682529190915220546bffffffffffffffffffffffff1690565b60405180603a6125258239603a019050604051809103902081565b600660209081526000928352604080842090915290825290205463ffffffff81169064010000000090046bffffffffffffffffffffffff1682565b6001546001600160a01b0316331461176a5760405162461bcd60e51b815260040180806020018281038252604081526020018061221c6040913960400191505060405180910390fd5b600154604080516001600160a01b039283168152918316602083015280517f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f69281900390910190a1600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000816c0100000000000000000000000084106118875760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561184c578181015183820152602001611834565b50505050905090810190601f1680156118795780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b509192915050565b6000836bffffffffffffffffffffffff16836bffffffffffffffffffffffff16111582906118fe5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561184c578181015183820152602001611834565b505050900390565b6001600160a01b03831661194b5760405162461bcd60e51b815260040180806020018281038252603e8152602001806122ed603e913960400191505060405180910390fd5b6001600160a01b0382166119905760405162461bcd60e51b815260040180806020018281038252603c8152602001806121bf603c913960400191505060405180910390fd5b6001600160a01b0383166000908152600460209081526040918290205482516060810190935260388084526119e0936bffffffffffffffffffffffff90921692859291906121629083013961188f565b6001600160a01b03848116600090815260046020908152604080832080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff968716179055928616825290829020548251606081019093526032808452611a65949190911692859290919061210990830139611b7d565b6001600160a01b0383811660008181526004602090815260409182902080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff9687161790558151948616855290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36001600160a01b03808416600090815260056020526040808220548584168352912054610b5292918216911683611bec565b80820182811015610751576040805162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000604482015290519081900360640190fd5b6000838301826bffffffffffffffffffffffff8087169083161015611be35760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561184c578181015183820152602001611834565b50949350505050565b816001600160a01b0316836001600160a01b031614158015611c1c57506000816bffffffffffffffffffffffff16115b15610b52576001600160a01b03831615611cda576001600160a01b03831660009081526007602052604081205463ffffffff169081611c5c576000611ca1565b6001600160a01b0385166000908152600660209081526040808320600019860163ffffffff16845290915290205464010000000090046bffffffffffffffffffffffff165b90506000611cc882856040518060600160405280602a8152602001612460602a913961188f565b9050611cd686848484611e3a565b5050505b6001600160a01b03821615610b52576001600160a01b03821660009081526007602052604081205463ffffffff169081611d15576000611d5a565b6001600160a01b0384166000908152600660209081526040808320600019860163ffffffff16845290915290205464010000000090046bffffffffffffffffffffffff165b90506000611d81828560405180606001604052806029815260200161258760299139611b7d565b905061121785848484611e3a565b6001600160a01b03808316600081815260056020818152604080842080546004845282862054949093528787167fffffffffffffffffffffffff000000000000000000000000000000000000000084168117909155905191909516946bffffffffffffffffffffffff9092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611e30828483611bec565b50505050565b4690565b6000611e5e4360405180606001604052806036815260200161242a60369139612043565b905060008463ffffffff16118015611ea757506001600160a01b038516600090815260066020908152604080832063ffffffff6000198901811685529252909120548282169116145b15611f1b576001600160a01b0385166000908152600660209081526040808320600019880163ffffffff168452909152902080547fffffffffffffffffffffffffffffffff000000000000000000000000ffffffff166401000000006bffffffffffffffffffffffff851602179055611fea565b60408051808201825263ffffffff80841682526bffffffffffffffffffffffff80861660208085019182526001600160a01b038b166000818152600683528781208c871682528352878120965187549451909516640100000000027fffffffffffffffffffffffffffffffff000000000000000000000000ffffffff9587167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000958616179590951694909417909555938252600790935292909220805460018801909316929091169190911790555b604080516bffffffffffffffffffffffff80861682528416602082015281516001600160a01b038816927fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724928290030190a25050505050565b60008164010000000084106118875760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561184c578181015183820152602001611834565b60408051808201909152600080825260208201529056fe4661697361613a3a6d696e743a2063616e6e6f74207472616e7366657220746f20746865207a65726f20616464726573734661697361613a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f77734661697361613a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f77734661697361613a3a617070726f76653a20616d6f756e74206578636565647320393620626974734661697361613a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e63654661697361613a3a6d696e743a206d696e74696e67206e6f7420616c6c6f776564207965744661697361613a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f20616464726573734661697361613a3a7065726d69743a207369676e617475726520657870697265644661697361613a3a7365744d696e7465723a206f6e6c7920746865206d696e7465722063616e206368616e676520746865206d696e74657220616464726573734661697361613a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e63655065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e65294661697361613a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f20616464726573734661697361613a3a7065726d69743a20696e76616c6964207369676e6174757265454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374294661697361613a3a6d696e743a20616d6f756e74206578636565647320393620626974734661697361613a3a6d696e743a20746f74616c537570706c79206578636565647320393620626974734661697361613a3a64656c656761746542795369673a207369676e617475726520657870697265644661697361613a3a7065726d69743a20616d6f756e74206578636565647320393620626974734661697361613a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d626572206578636565647320333220626974734661697361613a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f77734661697361613a3a7472616e736665723a20616d6f756e74206578636565647320393620626974734661697361613a3a64656c656761746542795369673a20696e76616c6964206e6f6e63654661697361613a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d696e744661697361613a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656444656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e7432353620657870697279294661697361613a3a64656c656761746542795369673a20696e76616c6964207369676e61747572654661697361613a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773a265627a7a7231582075cf1ac95cf72a24f2fcb0d7b3b4d5f89ca3ab88684d72b11352e2cba61a6a1764736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x60E JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x528 JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x48F JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x76C71CA1 EQ PUSH2 0x40C JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x5C11D62F EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x39A JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x30B36CEF EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x307 JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x197 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C1 JUMPI PUSH2 0x1B9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6 PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x200 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x22D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0x757 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0x75D JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x778 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x30F PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x90A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x381 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x30F PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE0C JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0xE1E JUMP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x121F JUMP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x5E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x16E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4661697361610000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x692 JUMPI POP PUSH1 0x0 NOT PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x6B4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213B PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x43 PUSH2 0x234C DUP3 CODECOPY PUSH1 0x43 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x27 DUP1 DUP5 MSTORE SWAP2 SWAP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 PUSH2 0x7D5 SWAP3 DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x213B SWAP1 DUP4 ADD CODECOPY PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x807 JUMPI POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8CC JUMPI PUSH1 0x0 PUSH2 0x831 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x225C PUSH1 0x3F SWAP2 CODECOPY PUSH2 0x188F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP11 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP JUMPDEST PUSH2 0x8D7 DUP8 DUP8 DUP4 PUSH2 0x1906 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x52 PUSH2 0x229B DUP3 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24D6 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x219A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20B1 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E7 TIMESTAMP PUSH4 0x1E13380 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xA11 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x238F PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP PUSH2 0xA4E PUSH2 0xA30 PUSH1 0x0 SLOAD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23B3 PUSH1 0x29 SWAP2 CODECOPY PUSH2 0x17EC JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x27 DUP1 DUP5 MSTORE PUSH2 0xAA5 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x20E2 SWAP1 DUP4 ADD CODECOPY PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND OR SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP7 AND DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB52 SWAP3 AND DUP4 PUSH2 0x1BEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0xB84 CALLER DUP3 PUSH2 0x1D8F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xC0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24FC PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xC3B JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xCBD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP5 SWAP1 SWAP5 ADD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xD2A PUSH2 0x2099 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP6 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH5 0x100000000 SWAP1 SWAP4 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0xD9C JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x751 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xDB3 JUMPI DUP2 SWAP4 POP PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xD00 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH5 0x100000000 SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4641495341410000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE7C DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x248A PUSH1 0x28 SWAP2 CODECOPY PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP PUSH2 0xE89 CALLER DUP6 DUP4 PUSH2 0x1906 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xEBE JUMPI PUSH1 0x0 PUSH2 0xF03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP6 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x234C PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x43 ADD DUP3 KECCAK256 DUP3 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH32 0x4661697361610000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP PUSH32 0x9869EADF408163BA154B1C0EE82BA4780D5D47224D67622AC848D92C700AB76D PUSH2 0xF84 PUSH2 0x1E36 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x2525 PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x3A ADD DUP3 KECCAK256 PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP5 ADD DUP12 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC2 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0xE2 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x102 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x122 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP13 AND PUSH2 0x142 DUP8 ADD MSTORE PUSH2 0x162 DUP7 ADD DUP12 SWAP1 MSTORE PUSH2 0x182 DUP7 ADD DUP11 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP7 POP SWAP3 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x1A2 DUP1 DUP4 ADD SWAP4 SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x255F PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0x11C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24B2 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23DC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1212 DUP2 DUP12 PUSH2 0x1D8F JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP7 EQ ISZERO PUSH2 0x1234 JUMPI POP PUSH1 0x0 NOT PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x1256 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2404 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x234C PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x43 ADD DUP3 KECCAK256 DUP3 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH32 0x4661697361610000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 POP PUSH32 0x9869EADF408163BA154B1C0EE82BA4780D5D47224D67622AC848D92C700AB76D PUSH2 0x12D3 PUSH2 0x1E36 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x229B PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP11 DUP11 DUP11 PUSH1 0x8 PUSH1 0x0 DUP16 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x149F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x150F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x232B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1575 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661697361613A3A7065726D69743A20756E617574686F72697A656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP9 TIMESTAMP GT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21FB PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x3 PUSH1 0x0 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x3A PUSH2 0x2525 DUP3 CODECOPY PUSH1 0x3A ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x176A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x221C PUSH1 0x40 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH13 0x1000000000000000000000000 DUP5 LT PUSH2 0x1887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x184C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1834 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1879 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO DUP3 SWAP1 PUSH2 0x18FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x184C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1834 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x194B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x22ED PUSH1 0x3E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1990 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21BF PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x38 DUP1 DUP5 MSTORE PUSH2 0x19E0 SWAP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x2162 SWAP1 DUP4 ADD CODECOPY PUSH2 0x188F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP3 DUP7 AND DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x32 DUP1 DUP5 MSTORE PUSH2 0x1A65 SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2109 SWAP1 DUP4 ADD CODECOPY PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND OR SWAP1 SSTORE DUP2 MLOAD SWAP5 DUP7 AND DUP6 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xB52 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1BEC JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x751 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP1 DUP4 AND LT ISZERO PUSH2 0x1BE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x184C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1834 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1C1C JUMPI POP PUSH1 0x0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST ISZERO PUSH2 0xB52 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1CDA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1C5C JUMPI PUSH1 0x0 PUSH2 0x1CA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CC8 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2460 PUSH1 0x2A SWAP2 CODECOPY PUSH2 0x188F JUMP JUMPDEST SWAP1 POP PUSH2 0x1CD6 DUP7 DUP5 DUP5 DUP5 PUSH2 0x1E3A JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xB52 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1D15 JUMPI PUSH1 0x0 PUSH2 0x1D5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP7 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D81 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2587 PUSH1 0x29 SWAP2 CODECOPY PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP PUSH2 0x1217 DUP6 DUP5 DUP5 DUP5 PUSH2 0x1E3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x4 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x1E30 DUP3 DUP5 DUP4 PUSH2 0x1BEC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5E NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x242A PUSH1 0x36 SWAP2 CODECOPY PUSH2 0x2043 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x1EA7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x1F1B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT DUP9 ADD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000FFFFFFFF AND PUSH5 0x100000000 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND MUL OR SWAP1 SSTORE PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE DUP8 DUP2 KECCAK256 DUP13 DUP8 AND DUP3 MSTORE DUP4 MSTORE DUP8 DUP2 KECCAK256 SWAP7 MLOAD DUP8 SLOAD SWAP5 MLOAD SWAP1 SWAP6 AND PUSH5 0x100000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000FFFFFFFF SWAP6 DUP8 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 SWAP6 DUP7 AND OR SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP6 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP9 ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x1887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x184C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH14 0x696E743A2063616E6E6F74207472 PUSH2 0x6E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737346 PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH14 0x696E743A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206F766572666C6F77734661697361613A3A5F74 PUSH19 0x616E73666572546F6B656E733A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206F766572666C6F777346616973 PUSH2 0x613A GASPRICE PUSH2 0x7070 PUSH19 0x6F76653A20616D6F756E742065786365656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE 0x5F PUSH21 0x72616E73666572546F6B656E733A207472616E7366 PUSH6 0x7220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65466169 PUSH20 0x61613A3A6D696E743A206D696E74696E67206E6F PUSH21 0x20616C6C6F776564207965744661697361613A3A5F PUSH21 0x72616E73666572546F6B656E733A2063616E6E6F74 KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH17 0x65726D69743A207369676E617475726520 PUSH6 0x787069726564 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH20 0x65744D696E7465723A206F6E6C7920746865206D PUSH10 0x6E7465722063616E2063 PUSH9 0x616E67652074686520 PUSH14 0x696E746572206164647265737346 PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH21 0x72616E7366657246726F6D3A207472616E73666572 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E63655065726D69742861646472 PUSH6 0x7373206F776E PUSH6 0x722C61646472 PUSH6 0x737320737065 PUSH15 0x6465722C75696E743235362076616C PUSH22 0x652C75696E74323536206E6F6E63652C75696E743235 CALLDATASIZE KECCAK256 PUSH5 0x6561646C69 PUSH15 0x65294661697361613A3A5F7472616E PUSH20 0x666572546F6B656E733A2063616E6E6F74207472 PUSH2 0x6E73 PUSH7 0x65722066726F6D KECCAK256 PUSH21 0x6865207A65726F2061646472657373466169736161 GASPRICE GASPRICE PUSH17 0x65726D69743A20696E76616C6964207369 PUSH8 0x6E61747572654549 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E747261637429466169736161 GASPRICE GASPRICE PUSH14 0x696E743A20616D6F756E74206578 PUSH4 0x65656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH14 0x696E743A20746F74616C53757070 PUSH13 0x79206578636565647320393620 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A207369676E617475726520657870 PUSH10 0x7265644661697361613A GASPRICE PUSH17 0x65726D69743A20616D6F756E7420657863 PUSH6 0x656473203936 KECCAK256 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE 0x5F PUSH14 0x6F7665566F7465733A20766F7465 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420756E646572666C6F77734661697361613A3A74 PUSH19 0x616E736665723A20616D6F756E742065786365 PUSH6 0x647320393620 PUSH3 0x697473 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964206E6F6E6365 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH14 0x696E743A206F6E6C792074686520 PUSH14 0x696E7465722063616E206D696E74 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 DIFFICULTY PUSH6 0x6C6567617469 PUSH16 0x6E28616464726573732064656C656761 PUSH21 0x65652C75696E74323536206E6F6E63652C75696E74 ORIGIN CALLDATALOAD CALLDATASIZE KECCAK256 PUSH6 0x787069727929 CHAINID PUSH2 0x6973 PUSH2 0x613A GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A20696E76616C6964207369676E61 PUSH21 0x7572654661697361613A3A5F6D6F7665566F746573 GASPRICE KECCAK256 PUSH23 0x6F746520616D6F756E74206F766572666C6F7773A26562 PUSH27 0x7A7231582075CF1AC95CF72A24F2FCB0D7B3B4D5F89CA3AB88684D PUSH19 0xB11352E2CBA61A6A1764736F6C634300051000 ORIGIN ",
							"sourceMap": "99:17249:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;99:17249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;172:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;172:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;595:21;;;:::i;:::-;;;;-1:-1:-1;;;;;595:21:0;;;;;;;;;;;;;;6547:421;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6547:421:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;473:40;;;:::i;:::-;;;;;;;;;;;;;;;;1824:122;;;:::i;9645:676::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9645:676:0;;;;;;;;;;;;;;;;;:::i;2247:137::-;;;:::i;686:31::-;;;:::i;374:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4548:1081;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4548:1081:0;;;;;;;;:::i;:::-;;1274:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1274:45:0;-1:-1:-1;;;;;1274:45:0;;:::i;770:61::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10469:102;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10469:102:0;-1:-1:-1;;;;;10469:102:0;;:::i;1702:49::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1702:49:0;-1:-1:-1;;;;;1702:49:0;;:::i;8723:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8723:108:0;-1:-1:-1;;;;;8723:108:0;;:::i;926:33::-;;;:::i;12654:1220::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12654:1220:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2465:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2465:39:0;-1:-1:-1;;;;;2465:39:0;;:::i;271:40::-;;;:::i;9095:240::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9095:240:0;;;;;;;;:::i;12001:222::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12001:222:0;-1:-1:-1;;;;;12001:222:0;;:::i;11005:795::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;11005:795:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7458:1062::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;7458:1062:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5933:136::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5933:136:0;;;;;;;;;;:::i;2040:117::-;;;:::i;1563:70::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1563:70:0;;-1:-1:-1;;;;;1563:70:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4139:234;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4139:234:0;-1:-1:-1;;;;;4139:234:0;;:::i;172:38::-;;;;;;;;;;;;;;;;;;;:::o;595:21::-;;;-1:-1:-1;;;;;595:21:0;;:::o;6547:421::-;6615:4;6632:13;-1:-1:-1;;6660:9:0;:21;6656:175;;;-1:-1:-1;;;6656:175:0;;;6759:60;6766:9;6759:60;;;;;;;;;;;;;;;;;:6;:60::i;:::-;6750:69;;6656:175;6854:10;6843:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;6843:31:0;;;;;;;;;;;;:40;;;;;;;;;;;;;6901:37;;;;;;;6843:31;;6854:10;6901:37;;;;;;;;;;;6956:4;6949:11;;;6547:421;;;;;:::o;473:40::-;;;;:::o;1824:122::-;1866:80;;;;;;;;;;;;;;;;;;1824:122;:::o;9645:676::-;-1:-1:-1;;;;;9809:15:0;;9727:4;9809:15;;;:10;:15;;;;;;;;9762:10;9809:24;;;;;;;;;;9860:60;;;;;;;;;;;;9762:10;;9809:24;;;;;9727:4;;9860:60;;9867:9;;9860:60;;;;;;;:6;:60::i;:::-;9844:76;;9948:3;-1:-1:-1;;;;;9937:14:0;:7;-1:-1:-1;;;;;9937:14:0;;;:48;;;;-1:-1:-1;9955:30:0;;;;;;9937:48;9933:313;;;10002:19;10024:98;10030:16;10048:6;10024:98;;;;;;;;;;;;;;;;;:5;:98::i;:::-;-1:-1:-1;;;;;10137:15:0;;;;;;;:10;:15;;;;;;;;:24;;;;;;;;;;;;;:39;;;;;;;;;;;;;10198:36;;;;;;;10137:39;;-1:-1:-1;10137:24:0;;:15;;10198:36;;;;;;;;;9933:313;;10258:33;10274:3;10279;10284:6;10258:15;:33::i;:::-;-1:-1:-1;10309:4:0;;9645:676;-1:-1:-1;;;;;;9645:676:0:o;2247:137::-;2289:95;;;;;;;;;;;;;;;;;;2247:137;:::o;686:31::-;;;;:::o;374:35::-;407:2;374:35;:::o;4548:1081::-;4633:6;;-1:-1:-1;;;;;4633:6:0;4619:10;:20;4611:71;;;;-1:-1:-1;;;4611:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4720:19;;4701:15;:38;;4693:88;;;;-1:-1:-1;;;4693:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4800:17:0;;4792:79;;;;-1:-1:-1;;;4792:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4934:54;4947:15;819:12;4934;:54::i;:::-;4912:19;:76;;;;5029:13;5045:57;5052:9;5045:57;;;;;;;;;;;;;;;;;:6;:57::i;:::-;5029:73;;5247:86;5254:33;5267:11;;5280:6;5254:33;;:12;:33::i;:::-;5247:86;;;;;;;;;;;;;;;;;:6;:86::i;:::-;5233:100;;;;:11;:100;;;-1:-1:-1;;;;;5417:13:0;;;;:8;:13;;;;;;;;;;5411:71;;;;;;;;;;;;;;5417:13;;;;;5432:6;;5411:71;;;;;;;;:5;:71::i;:::-;-1:-1:-1;;;;;5395:13:0;;;;;;:8;:13;;;;;;;;:87;;;;;;;;;;;5498:33;;;;;;;;5395:13;;;;5498:33;;;;;;;;;;-1:-1:-1;;;;;5598:14:0;;;5594:1;5598:14;;;:9;:14;;;;;;5571:50;;5598:14;5614:6;5571:14;:50::i;:::-;4548:1081;;;:::o;1274:45::-;;;;;;;;;;;;-1:-1:-1;;;;;1274:45:0;;:::o;770:61::-;819:12;770:61;:::o;10469:102::-;10531:32;10541:10;10553:9;10531;:32::i;:::-;10469:102;:::o;1702:49::-;;;;;;;;;;;;;;;:::o;8723:108::-;-1:-1:-1;;;;;8806:17:0;8782:4;8806:17;;;:8;:17;;;;;;;;;8723:108::o;926:33::-;958:1;926:33;:::o;12654:1220::-;12733:6;12774:12;12760:11;:26;12752:80;;;;-1:-1:-1;;;12752:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12867:23:0;;12845:19;12867:23;;;:14;:23;;;;;;;;12905:17;12901:58;;12946:1;12939:8;;;;;12901:58;-1:-1:-1;;;;;13019:20:0;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;13040:16:0;;13019:38;;;;;;;;;:48;;:63;-1:-1:-1;13015:147:0;;-1:-1:-1;;;;;13106:20:0;;;;;;:11;:20;;;;;;;;-1:-1:-1;;13127:16:0;;;;13106:38;;;;;;;;:44;;;;;;;-1:-1:-1;13099:51:0;;13015:147;-1:-1:-1;;;;;13223:20:0;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;13219:88:0;;;13294:1;13287:8;;;;;13219:88;13319:12;-1:-1:-1;;13361:16:0;;13388:428;13403:5;13395:13;;:5;:13;;;13388:428;;;13467:1;13450:13;;;13449:19;;;13441:27;;13510:20;;:::i;:::-;-1:-1:-1;;;;;;13533:20:0;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;13510:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13580:27;;13576:229;;;13635:8;;;;-1:-1:-1;13628:15:0;;-1:-1:-1;;;;13628:15:0;13576:229;13669:12;;:26;;;-1:-1:-1;13665:140:0;;;13724:6;13716:14;;13665:140;;;13788:1;13779:6;:10;13771:18;;13665:140;13388:428;;;;;-1:-1:-1;;;;;;13833:20:0;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;;;;;;-1:-1:-1;;12654:1220:0;;;;:::o;2465:39::-;;;;;;;;;;;;;:::o;271:40::-;;;;;;;;;;;;;;;;;;;:::o;9095:240::-;9160:4;9177:13;9193:61;9200:9;9193:61;;;;;;;;;;;;;;;;;:6;:61::i;:::-;9177:77;;9265:40;9281:10;9293:3;9298:6;9265:15;:40::i;:::-;-1:-1:-1;9323:4:0;;9095:240;-1:-1:-1;;;9095:240:0:o;12001:222::-;-1:-1:-1;;;;;12107:23:0;;12066:6;12107:23;;;:14;:23;;;;;;;;12148:16;:67;;12214:1;12148:67;;;-1:-1:-1;;;;;12167:20:0;;;;;;:11;:20;;;;;;;;-1:-1:-1;;12188:16:0;;12167:38;;;;;;;;;:44;;;;;;12148:67;12141:74;12001:222;-1:-1:-1;;;12001:222:0:o;11005:795::-;11121:23;1866:80;;;;;;;;;;;;;;;;;;;11201:4;;;;;;;;;;;;;;;;;;1866:80;-1:-1:-1;11185:22:0;11209:12;:10;:12::i;:::-;11231:4;11157:80;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11157:80:0;-1:-1:-1;;;;;11157:80:0;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11157:80:0;;;11147:91;;;;;;11121:117;;11249:18;2086:71;;;;;;;;;;;;;;;;;;;11280:57;;;;;;;;-1:-1:-1;;;;;11280:57:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;11280:57:0;;;;;11270:68;;;;;;11376:57;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;11376:57:0;;;;;;11366:68;;;;;;;;;-1:-1:-1;11465:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11270:68;;-1:-1:-1;11366:68:0;;-1:-1:-1;;;11465:26:0;;;;;;;11280:57;-1:-1:-1;11465:26:0;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;11465:26:0;;;;;;-1:-1:-1;;;;;;;11510:23:0;;11502:76;;;;-1:-1:-1;;;11502:76:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11606:17:0;;;;;;:6;:17;;;;;:19;;;;;;;;11597:28;;11589:77;;;;-1:-1:-1;;;11589:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11692:6;11685:3;:13;;11677:66;;;;-1:-1:-1;;;11677:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11761:31;11771:9;11782;11761;:31::i;:::-;11754:38;;;;11005:795;;;;;;;:::o;7458:1062::-;7588:13;-1:-1:-1;;7616:9:0;:21;7612:174;;;-1:-1:-1;;;7612:174:0;;;7715:59;7722:9;7715:59;;;;;;;;;;;;;;;;;:6;:59::i;:::-;7706:68;;7612:174;7798:23;1866:80;;;;;;;;;;;;;;;;;;;7878:4;;;;;;;;;;;;;;;;;;1866:80;-1:-1:-1;7862:22:0;7886:12;:10;:12::i;:::-;7908:4;7834:80;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7834:80:0;-1:-1:-1;;;;;7834:80:0;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7834:80:0;;;7824:91;;;;;;7798:117;;7926:18;2289:95;;;;;;;;;;;;;;;;;;;7985:5;7992:7;8001:9;8012:6;:13;8019:5;-1:-1:-1;;;;;8012:13:0;-1:-1:-1;;;;;8012:13:0;;;;;;;;;;;;;:15;;;;;;;;;;;;8029:8;7957:81;;;;;;;;;;;-1:-1:-1;;;;;7957:81:0;-1:-1:-1;;;;;7957:81:0;;;;;;-1:-1:-1;;;;;7957:81:0;-1:-1:-1;;;;;7957:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7957:81:0;;;7947:92;;;;;;7926:113;;8050:14;8106:15;8123:10;8077:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8077:57:0;;;8067:68;;;;;;8050:85;;8146:17;8166:26;8176:6;8184:1;8187;8190;8166:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;8166:26:0;;;;;;-1:-1:-1;;;;;;;8211:23:0;;8203:69;;;;-1:-1:-1;;;8203:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8304:5;-1:-1:-1;;;;;8291:18:0;:9;-1:-1:-1;;;;;8291:18:0;;8283:59;;;;;-1:-1:-1;;;8283:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;8368:8;8361:3;:15;;8353:61;;;;-1:-1:-1;;;8353:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8456:6;8427:10;:17;8438:5;-1:-1:-1;;;;;8427:17:0;-1:-1:-1;;;;;8427:17:0;;;;;;;;;;;;:26;8445:7;-1:-1:-1;;;;;8427:26:0;-1:-1:-1;;;;;8427:26:0;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;8496:7;-1:-1:-1;;;;;8480:32:0;8489:5;-1:-1:-1;;;;;8480:32:0;;8505:6;8480:32;;;;;;;;;;;;;;;;;;;;7458:1062;;;;;;;;;;;;:::o;5933:136::-;-1:-1:-1;;;;;6033:19:0;;;6009:4;6033:19;;;:10;:19;;;;;;;;:28;;;;;;;;;;;;;;;5933:136::o;2040:117::-;2086:71;;;;;;;;;;;;;;;;;;2040:117;:::o;1563:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4139:234::-;4217:6;;-1:-1:-1;;;;;4217:6:0;4203:10;:20;4195:97;;;;-1:-1:-1;;;4195:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4322:6;;4308:30;;;-1:-1:-1;;;;;4322:6:0;;;4308:30;;;;;;;;;;;;;;;;;;;;;4349:6;:16;;;;-1:-1:-1;;;;;4349:16:0;;;;;;;;;;4139:234::o;16654:161::-;16729:6;16767:12;16760:5;16756:9;;16748:32;;;;-1:-1:-1;;;16748:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16748:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16805:1:0;;16654:161;-1:-1:-1;;16654:161:0:o;17019:165::-;17105:6;17137:1;17132:6;;:1;:6;;;;17140:12;17124:29;;;;;-1:-1:-1;;;17124:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;17124:29:0;-1:-1:-1;;;17171:5:0;;;17019:165::o;14265:622::-;-1:-1:-1;;;;;14359:17:0;;14351:92;;;;-1:-1:-1;;;14351:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14462:17:0;;14454:90;;;;-1:-1:-1;;;14454:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14579:13:0;;;;;;:8;:13;;;;;;;;;;14573:88;;;;;;;;;;;;;;14579:13;;;;;14594:6;;14573:88;;;;;;;:5;:88::i;:::-;-1:-1:-1;;;;;14557:13:0;;;;;;;:8;:13;;;;;;;;:104;;;;;;;;;;;14694:13;;;;;;;;;;14688:82;;;;;;;;;;;;;;14694:13;;;;;14709:6;;14688:82;;;;;;;;:5;:82::i;:::-;-1:-1:-1;;;;;14672:13:0;;;;;;;:8;:13;;;;;;;;;:98;;;;;;;;;;;14786:26;;;;;;;;;14672:13;;14786:26;;;;;;;;;;;;;;;-1:-1:-1;;;;;14840:14:0;;;;;;;:9;:14;;;;;;;14856;;;;;;;;14825:54;;14840:14;;;;14856;14872:6;14825:14;:54::i;155:126:1:-;238:5;;;233:16;;;;225:49;;;;;-1:-1:-1;;;225:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;16823:188:0;16909:6;16939:5;;;16971:12;16963:6;;;;;;;;;16955:29;;;;-1:-1:-1;;;16955:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;16955:29:0;-1:-1:-1;17002:1:0;16823:188;-1:-1:-1;;;;16823:188:0:o;14895:943::-;15000:6;-1:-1:-1;;;;;14990:16:0;:6;-1:-1:-1;;;;;14990:16:0;;;:30;;;;;15019:1;15010:6;:10;;;14990:30;14986:845;;;-1:-1:-1;;;;;15041:20:0;;;15037:384;;-1:-1:-1;;;;;15101:22:0;;15082:16;15101:22;;;:14;:22;;;;;;;;;15161:13;:60;;15220:1;15161:60;;;-1:-1:-1;;;;;15177:19:0;;;;;;:11;:19;;;;;;;;-1:-1:-1;;15197:13:0;;15177:34;;;;;;;;;:40;;;;;;15161:60;15142:79;;15240:16;15259:70;15265:9;15276:6;15259:70;;;;;;;;;;;;;;;;;:5;:70::i;:::-;15240:89;;15348:57;15365:6;15373:9;15384;15395;15348:16;:57::i;:::-;15037:384;;;;-1:-1:-1;;;;;15441:20:0;;;15437:383;;-1:-1:-1;;;;;15501:22:0;;15482:16;15501:22;;;:14;:22;;;;;;;;;15561:13;:60;;15620:1;15561:60;;;-1:-1:-1;;;;;15577:19:0;;;;;;:11;:19;;;;;;;;-1:-1:-1;;15597:13:0;;15577:34;;;;;;;;;:40;;;;;;15561:60;15542:79;;15640:16;15659:69;15665:9;15676:6;15659:69;;;;;;;;;;;;;;;;;:5;:69::i;:::-;15640:88;;15747:57;15764:6;15772:9;15783;15794;15747:16;:57::i;13882:375::-;-1:-1:-1;;;;;13985:20:0;;;13959:23;13985:20;;;:9;:20;;;;;;;;;;14042:8;:19;;;;;;14072:20;;;;:32;;;;;;;;;;;14122:54;;13985:20;;;;;14042:19;;;;;14072:32;;13985:20;;;14122:54;;13959:23;14122:54;14189:60;14204:15;14221:9;14232:16;14189:14;:60::i;:::-;13882:375;;;;:::o;17192:153::-;17302:9;17192:153;:::o;15846:631::-;15964:18;15985:78;15992:12;15985:78;;;;;;;;;;;;;;;;;:6;:78::i;:::-;15964:99;;16093:1;16078:12;:16;;;:85;;;;-1:-1:-1;;;;;;16098:22:0;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;16121:16:0;;16098:40;;;;;;;;;:50;:65;;;:50;;:65;16078:85;16074:329;;;-1:-1:-1;;;;;16178:22:0;;;;;;:11;:22;;;;;;;;-1:-1:-1;;16201:16:0;;16178:40;;;;;;;;;:57;;;;;;;;;;;;16074:329;;;16303:33;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16264:22:0;;-1:-1:-1;16264:22:0;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16349:25;;;:14;:25;;;;;;;:44;;16264:72;16377:16;;16349:44;;;;;;;;;;;;;16074:329;16418:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16418:51:0;;;;;;;;;;;15846:631;;;;;:::o;16485:161::-;16560:6;16598:12;16591:5;16587:9;;16579:32;;;;-1:-1:-1;;;16579:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;99:17249:0;;;;;;;;;;-1:-1:-1;99:17249:0;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1940000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "infinite",
								"DOMAIN_TYPEHASH()": "infinite",
								"PERMIT_TYPEHASH()": "infinite",
								"allowance(address,address)": "1300",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1216",
								"checkpoints(address,uint32)": "1370",
								"decimals()": "297",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "1230",
								"getCurrentVotes(address)": "2226",
								"getPriorVotes(address,uint256)": "infinite",
								"minimumTimeBetweenMints()": "296",
								"mint(address,uint256)": "infinite",
								"mintCap()": "297",
								"minter()": "1106",
								"mintingAllowedAfter()": "1066",
								"name()": "infinite",
								"nonces(address)": "1191",
								"numCheckpoints(address)": "1185",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"setMinter(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1044",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint96)": "infinite",
								"_transferTokens(address,address,uint96)": "infinite",
								"_writeCheckpoint(address,uint32,uint96,uint96)": "infinite",
								"add96(uint96,uint96,string memory)": "infinite",
								"getChainId()": "14",
								"safe32(uint256,string memory)": "infinite",
								"safe96(uint256,string memory)": "infinite",
								"sub96(uint96,uint96,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 99,
									"end": 17348,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 99,
									"end": 17348,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 99,
									"end": 17348,
									"name": "MSTORE"
								},
								{
									"begin": 499,
									"end": 513,
									"name": "PUSH",
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 473,
									"end": 513,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 473,
									"end": 513,
									"name": "SSTORE"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "POP"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "MLOAD"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "PUSHSIZE"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "CODESIZE"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "SUB"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "DUP1"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "PUSHSIZE"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "DUP4"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "CODECOPY"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "DUP2"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "DUP2"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "ADD"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "DUP1"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "MLOAD"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "DUP3"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "ADD"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "MLOAD"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "SWAP1"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "SWAP3"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "ADD"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "MLOAD"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "SWAP1"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "SWAP2"
								},
								{
									"begin": 3568,
									"end": 4018,
									"name": "SWAP1"
								},
								{
									"begin": 3691,
									"end": 3706,
									"name": "TIMESTAMP"
								},
								{
									"begin": 3667,
									"end": 3706,
									"name": "DUP2"
								},
								{
									"begin": 3667,
									"end": 3706,
									"name": "LT"
								},
								{
									"begin": 3667,
									"end": 3706,
									"name": "ISZERO"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "JUMPI"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "DUP2"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "MSTORE"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "ADD"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "DUP1"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "DUP1"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "ADD"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "DUP3"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "DUP2"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "SUB"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "DUP3"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "MSTORE"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "PUSH",
									"value": "3C"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "DUP2"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "MSTORE"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "ADD"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "DUP1"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "PUSH data",
									"value": "1906B60F827988CD8840816D324D3CCFB646804467122C5FCF48B849B7CB54BB"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "PUSH",
									"value": "3C"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "SWAP2"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "CODECOPY"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "ADD"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "SWAP2"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "POP"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "POP"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "MLOAD"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "DUP1"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "SWAP2"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "SUB"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "SWAP1"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "REVERT"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 3659,
									"end": 3771,
									"name": "JUMPDEST"
								},
								{
									"begin": 3811,
									"end": 3822,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3811,
									"end": 3822,
									"name": "DUP1"
								},
								{
									"begin": 3811,
									"end": 3822,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "DUP6"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "AND"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "DUP1"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "DUP4"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "MSTORE"
								},
								{
									"begin": 3784,
									"end": 3792,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "SWAP1"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "DUP2"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "MSTORE"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "DUP1"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "DUP6"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "KECCAK256"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "DUP1"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "SWAP1"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "SWAP6"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "AND"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "SWAP5"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "SWAP1"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "SWAP5"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "OR"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "SWAP1"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "SWAP4"
								},
								{
									"begin": 3784,
									"end": 3823,
									"name": "SSTORE"
								},
								{
									"begin": 3869,
									"end": 3880,
									"name": "DUP4"
								},
								{
									"begin": 3869,
									"end": 3880,
									"name": "SLOAD"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "DUP4"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "MLOAD"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "SWAP1"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "DUP2"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "MSTORE"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "SWAP3"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "MLOAD"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "SWAP2"
								},
								{
									"begin": 3784,
									"end": 3801,
									"name": "SWAP4"
								},
								{
									"begin": 3811,
									"end": 3822,
									"name": "SWAP3"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "SWAP3"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "SWAP1"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "DUP2"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "SWAP1"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "SUB"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "SWAP1"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "SWAP2"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "ADD"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "SWAP1"
								},
								{
									"begin": 3839,
									"end": 3881,
									"name": "LOG3"
								},
								{
									"begin": 3892,
									"end": 3898,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "DUP1"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "DUP5"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "DUP2"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "AND"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "SWAP2"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "SWAP1"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "SWAP2"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "OR"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "SWAP2"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "DUP3"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "SWAP1"
								},
								{
									"begin": 3892,
									"end": 3908,
									"name": "SSTORE"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "DUP1"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "DUP2"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "MSTORE"
								},
								{
									"begin": 3950,
									"end": 3956,
									"name": "SWAP3"
								},
								{
									"begin": 3950,
									"end": 3956,
									"name": "SWAP1"
								},
								{
									"begin": 3950,
									"end": 3956,
									"name": "SWAP2"
								},
								{
									"begin": 3950,
									"end": 3956,
									"name": "AND"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "DUP4"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "ADD"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "MSTORE"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "DUP1"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "MLOAD"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "PUSH",
									"value": "3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "SWAP3"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "DUP2"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "SWAP1"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "SUB"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "SWAP1"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "SWAP2"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "ADD"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "SWAP1"
								},
								{
									"begin": 3924,
									"end": 3957,
									"name": "LOG1"
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 3968,
									"end": 4010,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 99,
									"end": 17348,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 17348,
									"name": "DUP1"
								},
								{
									"begin": 99,
									"end": 17348,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 17348,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 99,
									"end": 17348,
									"name": "CODECOPY"
								},
								{
									"begin": 99,
									"end": 17348,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 99,
									"end": 17348,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582075cf1ac95cf72a24f2fcb0d7b3b4d5f89ca3ab88684d72b11352e2cba61a6a1764736f6c63430005100032",
									".code": [
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "MSTORE"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "POP"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "LT"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "SHR"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "6FCFFF45"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "GT"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "GT"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "GT"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "E7A324DC"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "F1127ED8"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "FCA3B5AA"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMP"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "B4B5EA57"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "C3CDA520"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMP"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "GT"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "782D6FE1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMP"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "6FCFFF45"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "76C71CA1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMP"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "GT"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "GT"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "587CDE1E"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "5C11D62F"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "5C19A95C"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMP"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "30B36CEF"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMP"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "GT"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "20606B70"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMP"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "7546172"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "REVERT"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "JUMPDEST"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "JUMPDEST"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP3"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP3"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP3"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP6"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "AND"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "ISZERO"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "JUMPI"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP3"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SUB"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP4"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SUB"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "EXP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SUB"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "NOT"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "AND"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "JUMPDEST"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP3"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP2"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SUB"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "RETURN"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "DUP1"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "SWAP3"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "AND"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "DUP3"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "MSTORE"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "MLOAD"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "DUP2"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "SUB"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "ADD"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "RETURN"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "JUMPDEST"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "DUP1"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "DUP2"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "AND"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "SWAP1"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "ADD"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "JUMPDEST"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "DUP1"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "MLOAD"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "SWAP2"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "ISZERO"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "ISZERO"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "DUP3"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "MSTORE"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "MLOAD"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "SWAP1"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "DUP2"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "SWAP1"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "SUB"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "ADD"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "SWAP1"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "RETURN"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "MLOAD"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "SWAP2"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "DUP3"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "MSTORE"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "MLOAD"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "SUB"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "ADD"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "RETURN"
										},
										{
											"begin": 1824,
											"end": 1946,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1824,
											"end": 1946,
											"name": "JUMPDEST"
										},
										{
											"begin": 1824,
											"end": 1946,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1824,
											"end": 1946,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1824,
											"end": 1946,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "JUMPDEST"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "DUP1"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "DUP2"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "DUP2"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "AND"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "SWAP2"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "DUP2"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "ADD"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "SWAP1"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "SWAP2"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "AND"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "SWAP1"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "ADD"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2247,
											"end": 2384,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2247,
											"end": 2384,
											"name": "JUMPDEST"
										},
										{
											"begin": 2247,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2247,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2247,
											"end": 2384,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 686,
											"end": 717,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 686,
											"end": 717,
											"name": "JUMPDEST"
										},
										{
											"begin": 686,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 686,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 686,
											"end": 717,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "JUMPDEST"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "JUMPDEST"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "DUP1"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "MLOAD"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "SWAP1"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "SWAP3"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "AND"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "DUP3"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "MSTORE"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "MLOAD"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "SWAP1"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "DUP2"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "SWAP1"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "SUB"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "ADD"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "SWAP1"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "RETURN"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "JUMPDEST"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "DUP1"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "DUP2"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "AND"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "SWAP1"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "ADD"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "JUMPDEST"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "STOP"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "JUMPDEST"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "DUP1"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "AND"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "JUMPDEST"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "JUMPDEST"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "MLOAD"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "SWAP3"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "MLOAD"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "SUB"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "RETURN"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "JUMPDEST"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "DUP1"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "AND"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "JUMPDEST"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "DUP1"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "AND"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "JUMPDEST"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "DUP1"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "AND"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "JUMPDEST"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "JUMPDEST"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "DUP1"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "DUP2"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "AND"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "SWAP1"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "ADD"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "JUMPDEST"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "DUP1"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "MLOAD"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "SWAP1"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "SWAP3"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "AND"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "DUP3"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "MSTORE"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "MLOAD"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "SWAP1"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "DUP2"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "SWAP1"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "SUB"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "ADD"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "SWAP1"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "RETURN"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "JUMPDEST"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "DUP1"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "AND"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "JUMPDEST"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "DUP1"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "DUP2"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "AND"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "SWAP1"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "ADD"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "JUMPDEST"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "DUP1"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "AND"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "JUMPDEST"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "DUP1"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "DUP2"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "AND"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "SWAP1"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "DUP2"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "ADD"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "SWAP1"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "DUP2"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "ADD"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "SWAP1"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "DUP3"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "ADD"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "AND"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "SWAP1"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "DUP2"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "ADD"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "SWAP1"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "ADD"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "JUMPDEST"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "DUP1"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "DUP2"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "DUP2"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "AND"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "SWAP2"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "DUP2"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "ADD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "SWAP1"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "SWAP2"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "AND"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "SWAP1"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "DUP2"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "ADD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "SWAP1"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "DUP2"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "ADD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "SWAP1"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "DUP3"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "ADD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "AND"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "SWAP1"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "DUP2"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "ADD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "SWAP1"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "ADD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "JUMPDEST"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "DUP1"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "DUP2"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "DUP2"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "AND"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "SWAP2"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "ADD"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "AND"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2040,
											"end": 2157,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2040,
											"end": 2157,
											"name": "JUMPDEST"
										},
										{
											"begin": 2040,
											"end": 2157,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2040,
											"end": 2157,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 2040,
											"end": 2157,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "JUMPDEST"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "AND"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "ADD"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "AND"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "JUMPDEST"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MLOAD"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP4"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "AND"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP4"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MSTORE"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP2"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "AND"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP4"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "ADD"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MSTORE"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MLOAD"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP2"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP3"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SUB"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "ADD"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "RETURN"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "JUMPDEST"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "DUP1"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "AND"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "JUMPDEST"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MLOAD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP1"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "ADD"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "PUSH",
											"value": "4661697361610000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "MSTORE"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "POP"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "DUP2"
										},
										{
											"begin": 172,
											"end": 210,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "AND"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "DUP2"
										},
										{
											"begin": 595,
											"end": 616,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "JUMPDEST"
										},
										{
											"begin": 6615,
											"end": 6619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6645,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 6660,
											"end": 6669,
											"name": "DUP4"
										},
										{
											"begin": 6660,
											"end": 6681,
											"name": "EQ"
										},
										{
											"begin": 6656,
											"end": 6831,
											"name": "ISZERO"
										},
										{
											"begin": 6656,
											"end": 6831,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 6656,
											"end": 6831,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 6656,
											"end": 6831,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 6656,
											"end": 6831,
											"name": "JUMP"
										},
										{
											"begin": 6656,
											"end": 6831,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 6656,
											"end": 6831,
											"name": "JUMPDEST"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "DUP4"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "MLOAD"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "DUP1"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "ADD"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "MSTORE"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "DUP1"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "DUP2"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "MSTORE"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "ADD"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "PUSH data",
											"value": "428C16DCDDA4166530F34A26C4E94FB86DA1569E2A9829862EE509D219284DD8"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "SWAP2"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "CODECOPY"
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 6759,
											"end": 6819,
											"name": "JUMPDEST"
										},
										{
											"begin": 6750,
											"end": 6819,
											"name": "SWAP1"
										},
										{
											"begin": 6750,
											"end": 6819,
											"name": "POP"
										},
										{
											"begin": 6656,
											"end": 6831,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 6656,
											"end": 6831,
											"name": "JUMPDEST"
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "CALLER"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "MSTORE"
										},
										{
											"begin": 6843,
											"end": 6853,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "SWAP1"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "MSTORE"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "DUP1"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "DUP4"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "DUP10"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "AND"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "DUP1"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "DUP6"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "MSTORE"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "SWAP1"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "DUP4"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "MSTORE"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "SWAP3"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "SWAP1"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "KECCAK256"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "DUP1"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "SLOAD"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "AND"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "DUP8"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "AND"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "SWAP1"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "OR"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "SWAP1"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "SWAP2"
										},
										{
											"begin": 6843,
											"end": 6883,
											"name": "SSTORE"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "DUP2"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "MLOAD"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "SWAP1"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "DUP2"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "MSTORE"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "SWAP1"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "MLOAD"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "SWAP3"
										},
										{
											"begin": 6843,
											"end": 6874,
											"name": "SWAP4"
										},
										{
											"begin": 6854,
											"end": 6864,
											"name": "SWAP3"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "SWAP3"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "SWAP2"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "DUP2"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "SWAP1"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "SUB"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "SWAP1"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "SWAP2"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "ADD"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "SWAP1"
										},
										{
											"begin": 6901,
											"end": 6938,
											"name": "LOG3"
										},
										{
											"begin": 6956,
											"end": 6960,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6949,
											"end": 6960,
											"name": "SWAP2"
										},
										{
											"begin": 6949,
											"end": 6960,
											"name": "POP"
										},
										{
											"begin": 6949,
											"end": 6960,
											"name": "POP"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "JUMPDEST"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "SWAP3"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "SWAP2"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "POP"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "POP"
										},
										{
											"begin": 6547,
											"end": 6968,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "SLOAD"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1824,
											"end": 1946,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1824,
											"end": 1946,
											"name": "JUMPDEST"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "MLOAD"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP3"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "CODECOPY"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "ADD"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SWAP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "MLOAD"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SWAP2"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SUB"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SWAP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "KECCAK256"
										},
										{
											"begin": 1824,
											"end": 1946,
											"name": "DUP2"
										},
										{
											"begin": 1824,
											"end": 1946,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "DUP4"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "AND"
										},
										{
											"begin": 9727,
											"end": 9731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "SWAP1"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "DUP2"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "MSTORE"
										},
										{
											"begin": 9809,
											"end": 9819,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "SWAP1"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "DUP2"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "MSTORE"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "DUP1"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "DUP4"
										},
										{
											"begin": 9809,
											"end": 9824,
											"name": "KECCAK256"
										},
										{
											"begin": 9762,
											"end": 9772,
											"name": "CALLER"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "DUP1"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "DUP6"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "MSTORE"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "SWAP1"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "DUP4"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "MSTORE"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "DUP2"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "DUP5"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "KECCAK256"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "SLOAD"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "DUP3"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "MLOAD"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "DUP2"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "ADD"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "SWAP1"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "SWAP4"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "MSTORE"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "DUP1"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "DUP5"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "MSTORE"
										},
										{
											"begin": 9762,
											"end": 9772,
											"name": "SWAP2"
										},
										{
											"begin": 9762,
											"end": 9772,
											"name": "SWAP4"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "SWAP1"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "SWAP2"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "AND"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "SWAP3"
										},
										{
											"begin": 9727,
											"end": 9731,
											"name": "DUP6"
										},
										{
											"begin": 9727,
											"end": 9731,
											"name": "SWAP3"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "SWAP3"
										},
										{
											"begin": 9867,
											"end": 9876,
											"name": "DUP9"
										},
										{
											"begin": 9867,
											"end": 9876,
											"name": "SWAP3"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "SWAP2"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "SWAP1"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "PUSH data",
											"value": "428C16DCDDA4166530F34A26C4E94FB86DA1569E2A9829862EE509D219284DD8"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "SWAP1"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "DUP4"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "ADD"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "CODECOPY"
										},
										{
											"begin": 9860,
											"end": 9866,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 9860,
											"end": 9920,
											"name": "JUMPDEST"
										},
										{
											"begin": 9844,
											"end": 9920,
											"name": "SWAP1"
										},
										{
											"begin": 9844,
											"end": 9920,
											"name": "POP"
										},
										{
											"begin": 9948,
											"end": 9951,
											"name": "DUP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9937,
											"end": 9951,
											"name": "AND"
										},
										{
											"begin": 9937,
											"end": 9944,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9937,
											"end": 9951,
											"name": "AND"
										},
										{
											"begin": 9937,
											"end": 9951,
											"name": "EQ"
										},
										{
											"begin": 9937,
											"end": 9951,
											"name": "ISZERO"
										},
										{
											"begin": 9937,
											"end": 9985,
											"name": "DUP1"
										},
										{
											"begin": 9937,
											"end": 9985,
											"name": "ISZERO"
										},
										{
											"begin": 9937,
											"end": 9985,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 9937,
											"end": 9985,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9955,
											"end": 9985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9955,
											"end": 9985,
											"name": "DUP3"
										},
										{
											"begin": 9955,
											"end": 9985,
											"name": "DUP2"
										},
										{
											"begin": 9955,
											"end": 9985,
											"name": "AND"
										},
										{
											"begin": 9955,
											"end": 9985,
											"name": "EQ"
										},
										{
											"begin": 9955,
											"end": 9985,
											"name": "ISZERO"
										},
										{
											"begin": 9937,
											"end": 9985,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 9937,
											"end": 9985,
											"name": "JUMPDEST"
										},
										{
											"begin": 9933,
											"end": 10246,
											"name": "ISZERO"
										},
										{
											"begin": 9933,
											"end": 10246,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 9933,
											"end": 10246,
											"name": "JUMPI"
										},
										{
											"begin": 10002,
											"end": 10021,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 10030,
											"end": 10046,
											"name": "DUP4"
										},
										{
											"begin": 10048,
											"end": 10054,
											"name": "DUP4"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "MLOAD"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "DUP1"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "ADD"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "MSTORE"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "DUP1"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "DUP2"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "MSTORE"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "ADD"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "PUSH data",
											"value": "6E6266F1ED26838A519BE3251A5ADC1B708C96F88B2D9FCA8C7664416CC89AE8"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "SWAP2"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "CODECOPY"
										},
										{
											"begin": 10024,
											"end": 10029,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 10024,
											"end": 10122,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "DUP10"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "DUP2"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "AND"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "DUP2"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "DUP2"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "MSTORE"
										},
										{
											"begin": 10137,
											"end": 10147,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "DUP2"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "MSTORE"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "DUP1"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "DUP4"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "KECCAK256"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "SWAP5"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "DUP11"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "AND"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "DUP1"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "DUP5"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "MSTORE"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "SWAP5"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "DUP3"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "MSTORE"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "SWAP2"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "DUP3"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "KECCAK256"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "DUP1"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "SLOAD"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "AND"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "DUP8"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "AND"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "DUP2"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "OR"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "SWAP2"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "SSTORE"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "DUP3"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "MLOAD"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "SWAP1"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "DUP2"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "MSTORE"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "SWAP2"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "MLOAD"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "SWAP5"
										},
										{
											"begin": 10137,
											"end": 10176,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "SWAP3"
										},
										{
											"begin": 10137,
											"end": 10161,
											"name": "SWAP4"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "SWAP2"
										},
										{
											"begin": 10137,
											"end": 10152,
											"name": "SWAP3"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "SWAP3"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "SWAP2"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "DUP3"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "SWAP1"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "SUB"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "ADD"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "SWAP1"
										},
										{
											"begin": 10198,
											"end": 10234,
											"name": "LOG3"
										},
										{
											"begin": 9933,
											"end": 10246,
											"name": "POP"
										},
										{
											"begin": 9933,
											"end": 10246,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 9933,
											"end": 10246,
											"name": "JUMPDEST"
										},
										{
											"begin": 10258,
											"end": 10291,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 10274,
											"end": 10277,
											"name": "DUP8"
										},
										{
											"begin": 10279,
											"end": 10282,
											"name": "DUP8"
										},
										{
											"begin": 10284,
											"end": 10290,
											"name": "DUP4"
										},
										{
											"begin": 10258,
											"end": 10273,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 10258,
											"end": 10291,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10258,
											"end": 10291,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 10258,
											"end": 10291,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10309,
											"end": 10313,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10309,
											"end": 10313,
											"name": "SWAP7"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9645,
											"end": 10321,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2247,
											"end": 2384,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2247,
											"end": 2384,
											"name": "JUMPDEST"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "MLOAD"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "PUSH",
											"value": "52"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "PUSH data",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "DUP3"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "CODECOPY"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "PUSH",
											"value": "52"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "ADD"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "SWAP1"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "MLOAD"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "SWAP2"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "SUB"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "SWAP1"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "KECCAK256"
										},
										{
											"begin": 2247,
											"end": 2384,
											"name": "DUP2"
										},
										{
											"begin": 2247,
											"end": 2384,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 686,
											"end": 717,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 686,
											"end": 717,
											"name": "JUMPDEST"
										},
										{
											"begin": 686,
											"end": 717,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 686,
											"end": 717,
											"name": "SLOAD"
										},
										{
											"begin": 686,
											"end": 717,
											"name": "DUP2"
										},
										{
											"begin": 686,
											"end": 717,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "JUMPDEST"
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "DUP2"
										},
										{
											"begin": 374,
											"end": 409,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "JUMPDEST"
										},
										{
											"begin": 4633,
											"end": 4639,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4633,
											"end": 4639,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4633,
											"end": 4639,
											"name": "AND"
										},
										{
											"begin": 4619,
											"end": 4629,
											"name": "CALLER"
										},
										{
											"begin": 4619,
											"end": 4639,
											"name": "EQ"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "JUMPI"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "DUP2"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "MSTORE"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "ADD"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "DUP1"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "DUP1"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "ADD"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "DUP3"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "DUP2"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "SUB"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "DUP3"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "MSTORE"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "DUP2"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "MSTORE"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "ADD"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "DUP1"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "PUSH data",
											"value": "DB5D92E49FD459B5013588AF7233493889E9B54ED887D70A2E2719B899396D06"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "SWAP2"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "CODECOPY"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "ADD"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "SWAP2"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "POP"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "POP"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "MLOAD"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "DUP1"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "SWAP2"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "SUB"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "REVERT"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 4611,
											"end": 4682,
											"name": "JUMPDEST"
										},
										{
											"begin": 4720,
											"end": 4739,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4720,
											"end": 4739,
											"name": "SLOAD"
										},
										{
											"begin": 4701,
											"end": 4716,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4701,
											"end": 4739,
											"name": "LT"
										},
										{
											"begin": 4701,
											"end": 4739,
											"name": "ISZERO"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "JUMPI"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "DUP2"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "MSTORE"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "DUP1"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "DUP1"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "DUP3"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "DUP2"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "SUB"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "DUP3"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "MSTORE"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "DUP2"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "MSTORE"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "DUP1"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "PUSH data",
											"value": "47CFC577CCE83A034131EE7E3A3F248DD2402932183C3369404366188973B247"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "SWAP2"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "CODECOPY"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "ADD"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "SWAP2"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "POP"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "POP"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "MLOAD"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "DUP1"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "SWAP2"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "SUB"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "SWAP1"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "REVERT"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 4693,
											"end": 4781,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4800,
											"end": 4817,
											"name": "DUP3"
										},
										{
											"begin": 4800,
											"end": 4817,
											"name": "AND"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "JUMPI"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "DUP2"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "MSTORE"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "ADD"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "DUP1"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "DUP1"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "ADD"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "DUP3"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "DUP2"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "SUB"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "DUP3"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "MSTORE"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "PUSH",
											"value": "31"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "DUP2"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "MSTORE"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "ADD"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "DUP1"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "PUSH data",
											"value": "6EE8FD590CDC34084A0A93806FF7F052E42252DE31367891AFC0C9C911DCBE5"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "PUSH",
											"value": "31"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "SWAP2"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "CODECOPY"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "ADD"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "SWAP2"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "POP"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "POP"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "MLOAD"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "DUP1"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "SWAP2"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "SUB"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "SWAP1"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "REVERT"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 4792,
											"end": 4871,
											"name": "JUMPDEST"
										},
										{
											"begin": 4934,
											"end": 4988,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 4947,
											"end": 4962,
											"name": "TIMESTAMP"
										},
										{
											"begin": 819,
											"end": 831,
											"name": "PUSH",
											"value": "1E13380"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 4934,
											"end": 4988,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4934,
											"end": 4988,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 4934,
											"end": 4988,
											"name": "JUMPDEST"
										},
										{
											"begin": 4912,
											"end": 4931,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4912,
											"end": 4988,
											"name": "DUP2"
										},
										{
											"begin": 4912,
											"end": 4988,
											"name": "SWAP1"
										},
										{
											"begin": 4912,
											"end": 4988,
											"name": "SSTORE"
										},
										{
											"begin": 4912,
											"end": 4988,
											"name": "POP"
										},
										{
											"begin": 5029,
											"end": 5042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 5052,
											"end": 5061,
											"name": "DUP3"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "MLOAD"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "DUP1"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "ADD"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "MSTORE"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "DUP1"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "DUP2"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "MSTORE"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "ADD"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "PUSH data",
											"value": "930851EA43CAC2873108CBBC75DA47DF319DFB5D34D9BC02C61E0C540AD465F8"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "SWAP2"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "CODECOPY"
										},
										{
											"begin": 5045,
											"end": 5051,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 5045,
											"end": 5102,
											"name": "JUMPDEST"
										},
										{
											"begin": 5029,
											"end": 5102,
											"name": "SWAP1"
										},
										{
											"begin": 5029,
											"end": 5102,
											"name": "POP"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5254,
											"end": 5287,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 5267,
											"end": 5278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 5278,
											"name": "SLOAD"
										},
										{
											"begin": 5280,
											"end": 5286,
											"name": "DUP4"
										},
										{
											"begin": 5254,
											"end": 5287,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5254,
											"end": 5287,
											"name": "AND"
										},
										{
											"begin": 5254,
											"end": 5266,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 5254,
											"end": 5287,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5254,
											"end": 5287,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 5254,
											"end": 5287,
											"name": "JUMPDEST"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "MLOAD"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "DUP1"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "ADD"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "MSTORE"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "DUP1"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "DUP2"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "MSTORE"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "ADD"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "PUSH data",
											"value": "A164AAF472E5193AE08911C43F0E932009BD6899893D2553E9B4BAE60BF5DBF4"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "SWAP2"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "CODECOPY"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5247,
											"end": 5333,
											"name": "JUMPDEST"
										},
										{
											"begin": 5233,
											"end": 5333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5233,
											"end": 5333,
											"name": "SWAP1"
										},
										{
											"begin": 5233,
											"end": 5333,
											"name": "DUP2"
										},
										{
											"begin": 5233,
											"end": 5333,
											"name": "AND"
										},
										{
											"begin": 5233,
											"end": 5244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5333,
											"name": "SWAP1"
										},
										{
											"begin": 5233,
											"end": 5333,
											"name": "DUP2"
										},
										{
											"begin": 5233,
											"end": 5333,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "DUP6"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "AND"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "DUP2"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "MSTORE"
										},
										{
											"begin": 5417,
											"end": 5425,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "SWAP1"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "DUP2"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "MSTORE"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "SWAP2"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "DUP3"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "SWAP1"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "KECCAK256"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "SLOAD"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "DUP3"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "MLOAD"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "DUP2"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "ADD"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "SWAP1"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "SWAP4"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "MSTORE"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "DUP1"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "DUP5"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "MSTORE"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "SWAP5"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "SWAP2"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "SWAP1"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "SWAP2"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "AND"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "SWAP3"
										},
										{
											"begin": 5432,
											"end": 5438,
											"name": "DUP6"
										},
										{
											"begin": 5432,
											"end": 5438,
											"name": "SWAP3"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "SWAP1"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "SWAP2"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "SWAP1"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "PUSH data",
											"value": "EF9B1138F7FE56190F837AEBEAC3F83CE57900277382D69D32939DBF4287F14"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "SWAP1"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "DUP4"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "ADD"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "CODECOPY"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 5411,
											"end": 5482,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "DUP5"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "AND"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "DUP2"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "DUP2"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "MSTORE"
										},
										{
											"begin": 5395,
											"end": 5403,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "SWAP1"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "DUP2"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "MSTORE"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "DUP1"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "DUP4"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "KECCAK256"
										},
										{
											"begin": 5395,
											"end": 5482,
											"name": "DUP1"
										},
										{
											"begin": 5395,
											"end": 5482,
											"name": "SLOAD"
										},
										{
											"begin": 5395,
											"end": 5482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 5395,
											"end": 5482,
											"name": "AND"
										},
										{
											"begin": 5395,
											"end": 5482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5395,
											"end": 5482,
											"name": "SWAP7"
										},
										{
											"begin": 5395,
											"end": 5482,
											"name": "DUP8"
										},
										{
											"begin": 5395,
											"end": 5482,
											"name": "AND"
										},
										{
											"begin": 5395,
											"end": 5482,
											"name": "OR"
										},
										{
											"begin": 5395,
											"end": 5482,
											"name": "SWAP1"
										},
										{
											"begin": 5395,
											"end": 5482,
											"name": "SSTORE"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "DUP1"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "MLOAD"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "SWAP5"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "DUP7"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "AND"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "DUP6"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "MSTORE"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "MLOAD"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "SWAP3"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "SWAP4"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "SWAP2"
										},
										{
											"begin": 5395,
											"end": 5408,
											"name": "SWAP3"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "SWAP3"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "DUP2"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "SWAP1"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "SUB"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "SWAP1"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "SWAP2"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "ADD"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "SWAP1"
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "DUP1"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "DUP5"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "AND"
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "SWAP1"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "DUP2"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "MSTORE"
										},
										{
											"begin": 5598,
											"end": 5607,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "MSTORE"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "DUP2"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "KECCAK256"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "SLOAD"
										},
										{
											"begin": 5571,
											"end": 5621,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 5571,
											"end": 5621,
											"name": "SWAP3"
										},
										{
											"begin": 5598,
											"end": 5612,
											"name": "AND"
										},
										{
											"begin": 5614,
											"end": 5620,
											"name": "DUP4"
										},
										{
											"begin": 5571,
											"end": 5585,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 5571,
											"end": 5621,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5571,
											"end": 5621,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 5571,
											"end": 5621,
											"name": "JUMPDEST"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "POP"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "POP"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "POP"
										},
										{
											"begin": 4548,
											"end": 5629,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "JUMPDEST"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "MSTORE"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "MSTORE"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "KECCAK256"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "AND"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "JUMPDEST"
										},
										{
											"begin": 819,
											"end": 831,
											"name": "PUSH",
											"value": "1E13380"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 831,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "JUMPDEST"
										},
										{
											"begin": 10531,
											"end": 10563,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 10541,
											"end": 10551,
											"name": "CALLER"
										},
										{
											"begin": 10553,
											"end": 10562,
											"name": "DUP3"
										},
										{
											"begin": 10531,
											"end": 10540,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 10531,
											"end": 10563,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10531,
											"end": 10563,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 10531,
											"end": 10563,
											"name": "JUMPDEST"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "POP"
										},
										{
											"begin": 10469,
											"end": 10571,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "JUMPDEST"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "MSTORE"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "SWAP1"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "DUP2"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "MSTORE"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "SWAP1"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "KECCAK256"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "SLOAD"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "AND"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "DUP2"
										},
										{
											"begin": 1702,
											"end": 1751,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "AND"
										},
										{
											"begin": 8782,
											"end": 8786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "SWAP1"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "DUP2"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "MSTORE"
										},
										{
											"begin": 8806,
											"end": 8814,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "MSTORE"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "SWAP1"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "KECCAK256"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "SLOAD"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "AND"
										},
										{
											"begin": 8806,
											"end": 8823,
											"name": "SWAP1"
										},
										{
											"begin": 8723,
											"end": 8831,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "JUMPDEST"
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 926,
											"end": 959,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "JUMPDEST"
										},
										{
											"begin": 12733,
											"end": 12739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12774,
											"end": 12786,
											"name": "NUMBER"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP3"
										},
										{
											"begin": 12760,
											"end": 12786,
											"name": "LT"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "JUMPI"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "DUP2"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "MSTORE"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "ADD"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "DUP1"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "DUP1"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "ADD"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "DUP3"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "DUP2"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "SUB"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "DUP3"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "MSTORE"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "DUP2"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "MSTORE"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "ADD"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "DUP1"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "PUSH data",
											"value": "E175C657E0F1E403F720EE547408B254751930F62507BDDF82A8534BBB500DA4"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "SWAP2"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "CODECOPY"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "ADD"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "SWAP2"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "POP"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "POP"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "MLOAD"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "DUP1"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "SWAP2"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "SUB"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "SWAP1"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "REVERT"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 12752,
											"end": 12832,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "DUP4"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "AND"
										},
										{
											"begin": 12845,
											"end": 12864,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "SWAP1"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "DUP2"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "MSTORE"
										},
										{
											"begin": 12867,
											"end": 12881,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "MSTORE"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "SWAP1"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "KECCAK256"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "SLOAD"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12867,
											"end": 12890,
											"name": "AND"
										},
										{
											"begin": 12905,
											"end": 12922,
											"name": "DUP1"
										},
										{
											"begin": 12901,
											"end": 12959,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 12901,
											"end": 12959,
											"name": "JUMPI"
										},
										{
											"begin": 12946,
											"end": 12947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12939,
											"end": 12947,
											"name": "SWAP2"
										},
										{
											"begin": 12939,
											"end": 12947,
											"name": "POP"
										},
										{
											"begin": 12939,
											"end": 12947,
											"name": "POP"
										},
										{
											"begin": 12939,
											"end": 12947,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 12939,
											"end": 12947,
											"name": "JUMP"
										},
										{
											"begin": 12901,
											"end": 12959,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 12901,
											"end": 12959,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "DUP5"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "AND"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "SWAP1"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "DUP2"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "MSTORE"
										},
										{
											"begin": 13019,
											"end": 13030,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "SWAP1"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "DUP2"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "MSTORE"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "DUP1"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "DUP4"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "KECCAK256"
										},
										{
											"begin": 13019,
											"end": 13057,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13040,
											"end": 13056,
											"name": "DUP7"
										},
										{
											"begin": 13040,
											"end": 13056,
											"name": "ADD"
										},
										{
											"begin": 13019,
											"end": 13057,
											"name": "DUP2"
										},
										{
											"begin": 13019,
											"end": 13057,
											"name": "AND"
										},
										{
											"begin": 13019,
											"end": 13057,
											"name": "DUP6"
										},
										{
											"begin": 13019,
											"end": 13057,
											"name": "MSTORE"
										},
										{
											"begin": 13019,
											"end": 13057,
											"name": "SWAP3"
										},
										{
											"begin": 13019,
											"end": 13057,
											"name": "MSTORE"
										},
										{
											"begin": 13019,
											"end": 13057,
											"name": "SWAP1"
										},
										{
											"begin": 13019,
											"end": 13057,
											"name": "SWAP2"
										},
										{
											"begin": 13019,
											"end": 13057,
											"name": "KECCAK256"
										},
										{
											"begin": 13019,
											"end": 13067,
											"name": "SLOAD"
										},
										{
											"begin": 13019,
											"end": 13067,
											"name": "AND"
										},
										{
											"begin": 13019,
											"end": 13082,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT"
										},
										{
											"begin": 13015,
											"end": 13162,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 13015,
											"end": 13162,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "DUP5"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "AND"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "SWAP1"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "DUP2"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "MSTORE"
										},
										{
											"begin": 13106,
											"end": 13117,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "SWAP1"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "DUP2"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "MSTORE"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "DUP1"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "DUP4"
										},
										{
											"begin": 13106,
											"end": 13126,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13127,
											"end": 13143,
											"name": "SWAP5"
										},
										{
											"begin": 13127,
											"end": 13143,
											"name": "SWAP1"
										},
										{
											"begin": 13127,
											"end": 13143,
											"name": "SWAP5"
										},
										{
											"begin": 13127,
											"end": 13143,
											"name": "ADD"
										},
										{
											"begin": 13106,
											"end": 13144,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13106,
											"end": 13144,
											"name": "AND"
										},
										{
											"begin": 13106,
											"end": 13144,
											"name": "DUP4"
										},
										{
											"begin": 13106,
											"end": 13144,
											"name": "MSTORE"
										},
										{
											"begin": 13106,
											"end": 13144,
											"name": "SWAP3"
										},
										{
											"begin": 13106,
											"end": 13144,
											"name": "SWAP1"
										},
										{
											"begin": 13106,
											"end": 13144,
											"name": "MSTORE"
										},
										{
											"begin": 13106,
											"end": 13144,
											"name": "KECCAK256"
										},
										{
											"begin": 13106,
											"end": 13150,
											"name": "SLOAD"
										},
										{
											"begin": 13106,
											"end": 13150,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 13106,
											"end": 13150,
											"name": "SWAP1"
										},
										{
											"begin": 13106,
											"end": 13150,
											"name": "DIV"
										},
										{
											"begin": 13106,
											"end": 13150,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13106,
											"end": 13150,
											"name": "AND"
										},
										{
											"begin": 13106,
											"end": 13150,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13099,
											"end": 13150,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 13099,
											"end": 13150,
											"name": "JUMP"
										},
										{
											"begin": 13015,
											"end": 13162,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 13015,
											"end": 13162,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "DUP5"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "AND"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "SWAP1"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "DUP2"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "MSTORE"
										},
										{
											"begin": 13223,
											"end": 13234,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "SWAP1"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "DUP2"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "MSTORE"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "DUP1"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "DUP4"
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "KECCAK256"
										},
										{
											"begin": 13223,
											"end": 13246,
											"name": "DUP4"
										},
										{
											"begin": 13223,
											"end": 13246,
											"name": "DUP1"
										},
										{
											"begin": 13223,
											"end": 13246,
											"name": "MSTORE"
										},
										{
											"begin": 13223,
											"end": 13246,
											"name": "SWAP1"
										},
										{
											"begin": 13223,
											"end": 13246,
											"name": "SWAP2"
										},
										{
											"begin": 13223,
											"end": 13246,
											"name": "MSTORE"
										},
										{
											"begin": 13223,
											"end": 13246,
											"name": "SWAP1"
										},
										{
											"begin": 13223,
											"end": 13246,
											"name": "KECCAK256"
										},
										{
											"begin": 13223,
											"end": 13256,
											"name": "SLOAD"
										},
										{
											"begin": 13223,
											"end": 13246,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13223,
											"end": 13256,
											"name": "AND"
										},
										{
											"begin": 13223,
											"end": 13270,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT"
										},
										{
											"begin": 13219,
											"end": 13307,
											"name": "ISZERO"
										},
										{
											"begin": 13219,
											"end": 13307,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 13219,
											"end": 13307,
											"name": "JUMPI"
										},
										{
											"begin": 13294,
											"end": 13295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13287,
											"end": 13295,
											"name": "SWAP2"
										},
										{
											"begin": 13287,
											"end": 13295,
											"name": "POP"
										},
										{
											"begin": 13287,
											"end": 13295,
											"name": "POP"
										},
										{
											"begin": 13287,
											"end": 13295,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 13287,
											"end": 13295,
											"name": "JUMP"
										},
										{
											"begin": 13219,
											"end": 13307,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 13219,
											"end": 13307,
											"name": "JUMPDEST"
										},
										{
											"begin": 13319,
											"end": 13331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13361,
											"end": 13377,
											"name": "DUP3"
										},
										{
											"begin": 13361,
											"end": 13377,
											"name": "ADD"
										},
										{
											"begin": 13388,
											"end": 13816,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 13388,
											"end": 13816,
											"name": "JUMPDEST"
										},
										{
											"begin": 13403,
											"end": 13408,
											"name": "DUP2"
										},
										{
											"begin": 13395,
											"end": 13408,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13395,
											"end": 13408,
											"name": "AND"
										},
										{
											"begin": 13395,
											"end": 13400,
											"name": "DUP2"
										},
										{
											"begin": 13395,
											"end": 13408,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13395,
											"end": 13408,
											"name": "AND"
										},
										{
											"begin": 13395,
											"end": 13408,
											"name": "GT"
										},
										{
											"begin": 13388,
											"end": 13816,
											"name": "ISZERO"
										},
										{
											"begin": 13388,
											"end": 13816,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 13388,
											"end": 13816,
											"name": "JUMPI"
										},
										{
											"begin": 13467,
											"end": 13468,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13450,
											"end": 13463,
											"name": "DUP3"
										},
										{
											"begin": 13450,
											"end": 13463,
											"name": "DUP3"
										},
										{
											"begin": 13450,
											"end": 13463,
											"name": "SUB"
										},
										{
											"begin": 13449,
											"end": 13468,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13449,
											"end": 13468,
											"name": "AND"
										},
										{
											"begin": 13449,
											"end": 13468,
											"name": "DIV"
										},
										{
											"begin": 13441,
											"end": 13468,
											"name": "DUP2"
										},
										{
											"begin": 13441,
											"end": 13468,
											"name": "SUB"
										},
										{
											"begin": 13510,
											"end": 13530,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 13510,
											"end": 13530,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 13510,
											"end": 13530,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13510,
											"end": 13530,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 13510,
											"end": 13530,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "DUP8"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "AND"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "SWAP1"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "DUP2"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "MSTORE"
										},
										{
											"begin": 13533,
											"end": 13544,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "SWAP1"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "DUP2"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "MSTORE"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "DUP1"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "DUP4"
										},
										{
											"begin": 13533,
											"end": 13553,
											"name": "KECCAK256"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "DUP6"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "DUP2"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "AND"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "DUP6"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "MSTORE"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "SWAP1"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "DUP4"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "MSTORE"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "SWAP3"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "DUP2"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "SWAP1"
										},
										{
											"begin": 13533,
											"end": 13561,
											"name": "KECCAK256"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "DUP2"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "MLOAD"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "DUP1"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "DUP4"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "ADD"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "SWAP1"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "SWAP3"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "MSTORE"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "SLOAD"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "SWAP3"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "DUP4"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "AND"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "DUP1"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "DUP3"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "MSTORE"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "SWAP1"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "SWAP4"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "DIV"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "AND"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "SWAP2"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "DUP2"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "ADD"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "SWAP2"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "SWAP1"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "SWAP2"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "MSTORE"
										},
										{
											"begin": 13510,
											"end": 13561,
											"name": "SWAP1"
										},
										{
											"begin": 13580,
											"end": 13607,
											"name": "DUP8"
										},
										{
											"begin": 13580,
											"end": 13607,
											"name": "EQ"
										},
										{
											"begin": 13576,
											"end": 13805,
											"name": "ISZERO"
										},
										{
											"begin": 13576,
											"end": 13805,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 13576,
											"end": 13805,
											"name": "JUMPI"
										},
										{
											"begin": 13635,
											"end": 13643,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13635,
											"end": 13643,
											"name": "ADD"
										},
										{
											"begin": 13635,
											"end": 13643,
											"name": "MLOAD"
										},
										{
											"begin": 13635,
											"end": 13643,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13628,
											"end": 13643,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 13628,
											"end": 13643,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13628,
											"end": 13643,
											"name": "JUMP"
										},
										{
											"begin": 13576,
											"end": 13805,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 13576,
											"end": 13805,
											"name": "JUMPDEST"
										},
										{
											"begin": 13669,
											"end": 13681,
											"name": "DUP1"
										},
										{
											"begin": 13669,
											"end": 13681,
											"name": "MLOAD"
										},
										{
											"begin": 13669,
											"end": 13695,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13669,
											"end": 13695,
											"name": "AND"
										},
										{
											"begin": 13669,
											"end": 13695,
											"name": "DUP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT"
										},
										{
											"begin": 13665,
											"end": 13805,
											"name": "ISZERO"
										},
										{
											"begin": 13665,
											"end": 13805,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 13665,
											"end": 13805,
											"name": "JUMPI"
										},
										{
											"begin": 13724,
											"end": 13730,
											"name": "DUP2"
										},
										{
											"begin": 13716,
											"end": 13730,
											"name": "SWAP4"
										},
										{
											"begin": 13716,
											"end": 13730,
											"name": "POP"
										},
										{
											"begin": 13665,
											"end": 13805,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 13665,
											"end": 13805,
											"name": "JUMP"
										},
										{
											"begin": 13665,
											"end": 13805,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 13665,
											"end": 13805,
											"name": "JUMPDEST"
										},
										{
											"begin": 13788,
											"end": 13789,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13779,
											"end": 13785,
											"name": "DUP3"
										},
										{
											"begin": 13779,
											"end": 13789,
											"name": "SUB"
										},
										{
											"begin": 13771,
											"end": 13789,
											"name": "SWAP3"
										},
										{
											"begin": 13771,
											"end": 13789,
											"name": "POP"
										},
										{
											"begin": 13665,
											"end": 13805,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 13665,
											"end": 13805,
											"name": "JUMPDEST"
										},
										{
											"begin": 13388,
											"end": 13816,
											"name": "POP"
										},
										{
											"begin": 13388,
											"end": 13816,
											"name": "POP"
										},
										{
											"begin": 13388,
											"end": 13816,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 13388,
											"end": 13816,
											"name": "JUMP"
										},
										{
											"begin": 13388,
											"end": 13816,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 13388,
											"end": 13816,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "DUP6"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "AND"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "SWAP1"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "DUP2"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "MSTORE"
										},
										{
											"begin": 13833,
											"end": 13844,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "SWAP1"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "DUP2"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "MSTORE"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "DUP1"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "DUP4"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "KECCAK256"
										},
										{
											"begin": 13833,
											"end": 13860,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13833,
											"end": 13860,
											"name": "SWAP1"
										},
										{
											"begin": 13833,
											"end": 13860,
											"name": "SWAP5"
										},
										{
											"begin": 13833,
											"end": 13860,
											"name": "AND"
										},
										{
											"begin": 13833,
											"end": 13860,
											"name": "DUP4"
										},
										{
											"begin": 13833,
											"end": 13860,
											"name": "MSTORE"
										},
										{
											"begin": 13833,
											"end": 13860,
											"name": "SWAP3"
										},
										{
											"begin": 13833,
											"end": 13860,
											"name": "SWAP1"
										},
										{
											"begin": 13833,
											"end": 13860,
											"name": "MSTORE"
										},
										{
											"begin": 13833,
											"end": 13860,
											"name": "KECCAK256"
										},
										{
											"begin": 13833,
											"end": 13866,
											"name": "SLOAD"
										},
										{
											"begin": 13833,
											"end": 13866,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13833,
											"end": 13866,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 13833,
											"end": 13866,
											"name": "SWAP1"
										},
										{
											"begin": 13833,
											"end": 13866,
											"name": "SWAP2"
										},
										{
											"begin": 13833,
											"end": 13866,
											"name": "DIV"
										},
										{
											"begin": 13833,
											"end": 13866,
											"name": "AND"
										},
										{
											"begin": 13833,
											"end": 13866,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "SWAP3"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "SWAP2"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "POP"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "POP"
										},
										{
											"begin": 12654,
											"end": 13874,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "JUMPDEST"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "MSTORE"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "SWAP1"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "DUP2"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "MSTORE"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "SWAP1"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "KECCAK256"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "SLOAD"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "DUP2"
										},
										{
											"begin": 2465,
											"end": 2504,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "JUMPDEST"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "PUSH",
											"value": "4641495341410000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 311,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "JUMPDEST"
										},
										{
											"begin": 9160,
											"end": 9164,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9177,
											"end": 9190,
											"name": "DUP1"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 9200,
											"end": 9209,
											"name": "DUP4"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "MLOAD"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "DUP1"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "ADD"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "MSTORE"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "DUP1"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "DUP2"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "MSTORE"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "ADD"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "PUSH data",
											"value": "B7EBAB050738648E1B5349FB2FBED408028A6C60180B562F13F48EB805432532"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "SWAP2"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "CODECOPY"
										},
										{
											"begin": 9193,
											"end": 9199,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 9193,
											"end": 9254,
											"name": "JUMPDEST"
										},
										{
											"begin": 9177,
											"end": 9254,
											"name": "SWAP1"
										},
										{
											"begin": 9177,
											"end": 9254,
											"name": "POP"
										},
										{
											"begin": 9265,
											"end": 9305,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 9281,
											"end": 9291,
											"name": "CALLER"
										},
										{
											"begin": 9293,
											"end": 9296,
											"name": "DUP6"
										},
										{
											"begin": 9298,
											"end": 9304,
											"name": "DUP4"
										},
										{
											"begin": 9265,
											"end": 9280,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 9265,
											"end": 9305,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9265,
											"end": 9305,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 9265,
											"end": 9305,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "SWAP4"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9095,
											"end": 9335,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "DUP2"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "AND"
										},
										{
											"begin": 12066,
											"end": 12072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "SWAP1"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "DUP2"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "MSTORE"
										},
										{
											"begin": 12107,
											"end": 12121,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "MSTORE"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "DUP2"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "KECCAK256"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "SLOAD"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12107,
											"end": 12130,
											"name": "AND"
										},
										{
											"begin": 12148,
											"end": 12164,
											"name": "DUP1"
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "JUMPI"
										},
										{
											"begin": 12214,
											"end": 12215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "JUMP"
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "DUP4"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "AND"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "SWAP1"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "DUP2"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "MSTORE"
										},
										{
											"begin": 12167,
											"end": 12178,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "SWAP1"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "DUP2"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "MSTORE"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "DUP1"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "DUP4"
										},
										{
											"begin": 12167,
											"end": 12187,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12188,
											"end": 12204,
											"name": "DUP6"
										},
										{
											"begin": 12188,
											"end": 12204,
											"name": "ADD"
										},
										{
											"begin": 12167,
											"end": 12205,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12167,
											"end": 12205,
											"name": "AND"
										},
										{
											"begin": 12167,
											"end": 12205,
											"name": "DUP5"
										},
										{
											"begin": 12167,
											"end": 12205,
											"name": "MSTORE"
										},
										{
											"begin": 12167,
											"end": 12205,
											"name": "SWAP1"
										},
										{
											"begin": 12167,
											"end": 12205,
											"name": "SWAP2"
										},
										{
											"begin": 12167,
											"end": 12205,
											"name": "MSTORE"
										},
										{
											"begin": 12167,
											"end": 12205,
											"name": "SWAP1"
										},
										{
											"begin": 12167,
											"end": 12205,
											"name": "KECCAK256"
										},
										{
											"begin": 12167,
											"end": 12211,
											"name": "SLOAD"
										},
										{
											"begin": 12167,
											"end": 12211,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 12167,
											"end": 12211,
											"name": "SWAP1"
										},
										{
											"begin": 12167,
											"end": 12211,
											"name": "DIV"
										},
										{
											"begin": 12167,
											"end": 12211,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12167,
											"end": 12211,
											"name": "AND"
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 12148,
											"end": 12215,
											"name": "JUMPDEST"
										},
										{
											"begin": 12141,
											"end": 12215,
											"name": "SWAP4"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12001,
											"end": 12223,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "JUMPDEST"
										},
										{
											"begin": 11121,
											"end": 11144,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "MLOAD"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SWAP2"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "CODECOPY"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "MLOAD"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SWAP2"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP3"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SWAP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SUB"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "ADD"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP3"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "KECCAK256"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "DUP3"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "DUP3"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "ADD"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "SWAP1"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "SWAP2"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "MSTORE"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "DUP3"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "MSTORE"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "PUSH",
											"value": "4661697361610000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "SWAP1"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "SWAP3"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "ADD"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "SWAP2"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "SWAP1"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "SWAP2"
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "MSTORE"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11185,
											"end": 11207,
											"name": "PUSH",
											"value": "9869EADF408163BA154B1C0EE82BA4780D5D47224D67622AC848D92C700AB76D"
										},
										{
											"begin": 11209,
											"end": 11221,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 11209,
											"end": 11219,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 11209,
											"end": 11221,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11209,
											"end": 11221,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 11209,
											"end": 11221,
											"name": "JUMPDEST"
										},
										{
											"begin": 11231,
											"end": 11235,
											"name": "ADDRESS"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "MLOAD"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "ADD"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "DUP1"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "DUP6"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "DUP2"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "MSTORE"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "ADD"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "DUP5"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "DUP2"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "MSTORE"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "ADD"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "DUP4"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "DUP2"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "MSTORE"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "ADD"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "AND"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "DUP2"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "MSTORE"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "ADD"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "SWAP5"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "POP"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "SWAP1"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11157,
											"end": 11237,
											"name": "MSTORE"
										},
										{
											"begin": 11147,
											"end": 11238,
											"name": "DUP1"
										},
										{
											"begin": 11147,
											"end": 11238,
											"name": "MLOAD"
										},
										{
											"begin": 11147,
											"end": 11238,
											"name": "SWAP1"
										},
										{
											"begin": 11147,
											"end": 11238,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11147,
											"end": 11238,
											"name": "ADD"
										},
										{
											"begin": 11147,
											"end": 11238,
											"name": "KECCAK256"
										},
										{
											"begin": 11121,
											"end": 11238,
											"name": "SWAP1"
										},
										{
											"begin": 11121,
											"end": 11238,
											"name": "POP"
										},
										{
											"begin": 11249,
											"end": 11267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "MLOAD"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "DUP1"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "DUP1"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "SWAP2"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "CODECOPY"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "DUP1"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "MLOAD"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "SWAP2"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "DUP3"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "SWAP1"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "SUB"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "ADD"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "DUP3"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "KECCAK256"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP1"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP5"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "ADD"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "SWAP2"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "SWAP1"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "SWAP2"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP13"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "AND"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP4"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP4"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "ADD"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "MSTORE"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP4"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "ADD"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP12"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "SWAP1"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "MSTORE"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP1"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP5"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "ADD"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP12"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "SWAP1"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "MSTORE"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP3"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP5"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "ADD"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "DUP4"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "MSTORE"
										},
										{
											"begin": 11270,
											"end": 11338,
											"name": "DUP1"
										},
										{
											"begin": 11270,
											"end": 11338,
											"name": "MLOAD"
										},
										{
											"begin": 11270,
											"end": 11338,
											"name": "SWAP1"
										},
										{
											"begin": 11270,
											"end": 11338,
											"name": "DUP3"
										},
										{
											"begin": 11270,
											"end": 11338,
											"name": "ADD"
										},
										{
											"begin": 11270,
											"end": 11338,
											"name": "KECCAK256"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "DUP6"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "ADD"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "MSTORE"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "PUSH",
											"value": "C2"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "DUP5"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "ADD"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "DUP8"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "SWAP1"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "MSTORE"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "PUSH",
											"value": "E2"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "DUP6"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "ADD"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "DUP3"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "SWAP1"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "MSTORE"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "DUP4"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "DUP6"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "ADD"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "DUP6"
										},
										{
											"begin": 11376,
											"end": 11433,
											"name": "MSTORE"
										},
										{
											"begin": 11366,
											"end": 11434,
											"name": "DUP2"
										},
										{
											"begin": 11366,
											"end": 11434,
											"name": "MLOAD"
										},
										{
											"begin": 11366,
											"end": 11434,
											"name": "SWAP2"
										},
										{
											"begin": 11366,
											"end": 11434,
											"name": "DUP5"
										},
										{
											"begin": 11366,
											"end": 11434,
											"name": "ADD"
										},
										{
											"begin": 11366,
											"end": 11434,
											"name": "SWAP2"
										},
										{
											"begin": 11366,
											"end": 11434,
											"name": "SWAP1"
										},
										{
											"begin": 11366,
											"end": 11434,
											"name": "SWAP2"
										},
										{
											"begin": 11366,
											"end": 11434,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP2"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP3"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP1"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "MSTORE"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP7"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "ADD"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP1"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP7"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "MSTORE"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP2"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP1"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "MSTORE"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP13"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "AND"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP8"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "ADD"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "MSTORE"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP7"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "ADD"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP12"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP1"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "MSTORE"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP7"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "ADD"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP11"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP1"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "MSTORE"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP4"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "MLOAD"
										},
										{
											"begin": 11270,
											"end": 11338,
											"name": "SWAP2"
										},
										{
											"begin": 11270,
											"end": 11338,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11366,
											"end": 11434,
											"name": "SWAP3"
										},
										{
											"begin": 11366,
											"end": 11434,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP3"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP1"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP4"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "ADD"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP4"
										},
										{
											"begin": 11280,
											"end": 11337,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP4"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "ADD"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP3"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP1"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP2"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP1"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SUB"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP1"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP2"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "ADD"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP1"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "DUP6"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "GAS"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "STATICCALL"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "MLOAD"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "ADD"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "MLOAD"
										},
										{
											"begin": 11465,
											"end": 11491,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "DUP2"
										},
										{
											"begin": 11510,
											"end": 11533,
											"name": "AND"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "JUMPI"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "DUP2"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "MSTORE"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "ADD"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "DUP1"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "DUP1"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "ADD"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "DUP3"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "DUP2"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "SUB"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "DUP3"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "MSTORE"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "DUP2"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "MSTORE"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "ADD"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "DUP1"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "PUSH data",
											"value": "FC42ECD0AD65AC67B8BB4DBAC768677706FB9A0FBB6335D058DC53A56BBD31DF"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "SWAP2"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "CODECOPY"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "ADD"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "SWAP2"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "POP"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "POP"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "MLOAD"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "DUP1"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "SWAP2"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "SUB"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "SWAP1"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "REVERT"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 11502,
											"end": 11578,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "DUP2"
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "AND"
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "SWAP1"
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "DUP2"
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "MSTORE"
										},
										{
											"begin": 11606,
											"end": 11612,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "MSTORE"
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "SWAP1"
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "KECCAK256"
										},
										{
											"begin": 11606,
											"end": 11625,
											"name": "DUP1"
										},
										{
											"begin": 11606,
											"end": 11625,
											"name": "SLOAD"
										},
										{
											"begin": 11606,
											"end": 11625,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11606,
											"end": 11625,
											"name": "DUP2"
										},
										{
											"begin": 11606,
											"end": 11625,
											"name": "ADD"
										},
										{
											"begin": 11606,
											"end": 11625,
											"name": "SWAP1"
										},
										{
											"begin": 11606,
											"end": 11625,
											"name": "SWAP2"
										},
										{
											"begin": 11606,
											"end": 11625,
											"name": "SSTORE"
										},
										{
											"begin": 11597,
											"end": 11625,
											"name": "DUP10"
										},
										{
											"begin": 11597,
											"end": 11625,
											"name": "EQ"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "JUMPI"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "DUP2"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "MSTORE"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "ADD"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "DUP1"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "DUP1"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "ADD"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "DUP3"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "DUP2"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "SUB"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "DUP3"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "MSTORE"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "DUP2"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "MSTORE"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "ADD"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "DUP1"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "PUSH data",
											"value": "BE8A6D809CC9F4FF1CF4521B91F51874149BAE2006223EC41845B088E1693560"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "SWAP2"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "CODECOPY"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "ADD"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "SWAP2"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "POP"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "POP"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "MLOAD"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "DUP1"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "SWAP2"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "SUB"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "SWAP1"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "REVERT"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 11589,
											"end": 11666,
											"name": "JUMPDEST"
										},
										{
											"begin": 11692,
											"end": 11698,
											"name": "DUP8"
										},
										{
											"begin": 11685,
											"end": 11688,
											"name": "TIMESTAMP"
										},
										{
											"begin": 11685,
											"end": 11698,
											"name": "GT"
										},
										{
											"begin": 11685,
											"end": 11698,
											"name": "ISZERO"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "JUMPI"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "MSTORE"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "DUP3"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "SUB"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "DUP3"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "MSTORE"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "DUP2"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "MSTORE"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "PUSH data",
											"value": "A2F14EEBE3BBC7D4ADC60052A7D595B79F34724FBFA7082143585FB5BD8626EE"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "CODECOPY"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "ADD"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "POP"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "MLOAD"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "DUP1"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "SWAP2"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "SUB"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "REVERT"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 11677,
											"end": 11743,
											"name": "JUMPDEST"
										},
										{
											"begin": 11761,
											"end": 11792,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 11771,
											"end": 11780,
											"name": "DUP2"
										},
										{
											"begin": 11782,
											"end": 11791,
											"name": "DUP12"
										},
										{
											"begin": 11761,
											"end": 11770,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 11761,
											"end": 11792,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11761,
											"end": 11792,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 11761,
											"end": 11792,
											"name": "JUMPDEST"
										},
										{
											"begin": 11754,
											"end": 11792,
											"name": "POP"
										},
										{
											"begin": 11754,
											"end": 11792,
											"name": "POP"
										},
										{
											"begin": 11754,
											"end": 11792,
											"name": "POP"
										},
										{
											"begin": 11754,
											"end": 11792,
											"name": "POP"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "JUMPDEST"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "POP"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "POP"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "POP"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "POP"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "POP"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "POP"
										},
										{
											"begin": 11005,
											"end": 11800,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "JUMPDEST"
										},
										{
											"begin": 7588,
											"end": 7601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 7616,
											"end": 7625,
											"name": "DUP7"
										},
										{
											"begin": 7616,
											"end": 7637,
											"name": "EQ"
										},
										{
											"begin": 7612,
											"end": 7786,
											"name": "ISZERO"
										},
										{
											"begin": 7612,
											"end": 7786,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 7612,
											"end": 7786,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 7612,
											"end": 7786,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 7612,
											"end": 7786,
											"name": "JUMP"
										},
										{
											"begin": 7612,
											"end": 7786,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 7612,
											"end": 7786,
											"name": "JUMPDEST"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 7722,
											"end": 7731,
											"name": "DUP7"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "MLOAD"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "DUP1"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "ADD"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "MSTORE"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "DUP1"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "DUP2"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "MSTORE"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "ADD"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "PUSH data",
											"value": "A4168ABA4FC669F0DC452530929310103D41A501CFFE432724F3E347C4692FFD"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "SWAP2"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "CODECOPY"
										},
										{
											"begin": 7715,
											"end": 7721,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 7715,
											"end": 7774,
											"name": "JUMPDEST"
										},
										{
											"begin": 7706,
											"end": 7774,
											"name": "SWAP1"
										},
										{
											"begin": 7706,
											"end": 7774,
											"name": "POP"
										},
										{
											"begin": 7612,
											"end": 7786,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 7612,
											"end": 7786,
											"name": "JUMPDEST"
										},
										{
											"begin": 7798,
											"end": 7821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "MLOAD"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH data",
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SWAP2"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "CODECOPY"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "MLOAD"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SWAP2"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP3"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SWAP1"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SUB"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "ADD"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "DUP3"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "KECCAK256"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "DUP3"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "DUP3"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "ADD"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "SWAP1"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "SWAP2"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "MSTORE"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "DUP3"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "MSTORE"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "PUSH",
											"value": "4661697361610000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "SWAP1"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "SWAP3"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "ADD"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "SWAP2"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "SWAP1"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "SWAP2"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "MSTORE"
										},
										{
											"begin": 1866,
											"end": 1946,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7862,
											"end": 7884,
											"name": "PUSH",
											"value": "9869EADF408163BA154B1C0EE82BA4780D5D47224D67622AC848D92C700AB76D"
										},
										{
											"begin": 7886,
											"end": 7898,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 7886,
											"end": 7896,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 7886,
											"end": 7898,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7886,
											"end": 7898,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 7886,
											"end": 7898,
											"name": "JUMPDEST"
										},
										{
											"begin": 7908,
											"end": 7912,
											"name": "ADDRESS"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "MLOAD"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "ADD"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "DUP1"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "DUP6"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "DUP2"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "MSTORE"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "ADD"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "DUP5"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "DUP2"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "MSTORE"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "ADD"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "DUP4"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "DUP2"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "MSTORE"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "ADD"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "AND"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "DUP2"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "MSTORE"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "ADD"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "SWAP5"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "POP"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "POP"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "POP"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "POP"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "POP"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "SWAP1"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7914,
											"name": "MSTORE"
										},
										{
											"begin": 7824,
											"end": 7915,
											"name": "DUP1"
										},
										{
											"begin": 7824,
											"end": 7915,
											"name": "MLOAD"
										},
										{
											"begin": 7824,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7824,
											"end": 7915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7824,
											"end": 7915,
											"name": "ADD"
										},
										{
											"begin": 7824,
											"end": 7915,
											"name": "KECCAK256"
										},
										{
											"begin": 7798,
											"end": 7915,
											"name": "SWAP1"
										},
										{
											"begin": 7798,
											"end": 7915,
											"name": "POP"
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "MLOAD"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "PUSH data",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "PUSH",
											"value": "52"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "SWAP2"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "CODECOPY"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "PUSH",
											"value": "52"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "ADD"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "SWAP1"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "MLOAD"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "SWAP2"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "SUB"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "SWAP1"
										},
										{
											"begin": 2289,
											"end": 2384,
											"name": "KECCAK256"
										},
										{
											"begin": 7985,
											"end": 7990,
											"name": "DUP11"
										},
										{
											"begin": 7992,
											"end": 7999,
											"name": "DUP11"
										},
										{
											"begin": 8001,
											"end": 8010,
											"name": "DUP11"
										},
										{
											"begin": 8012,
											"end": 8018,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8019,
											"end": 8024,
											"name": "DUP16"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "AND"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "DUP2"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "MSTORE"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "ADD"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "SWAP1"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "DUP2"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "MSTORE"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "ADD"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "KECCAK256"
										},
										{
											"begin": 8012,
											"end": 8025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "DUP2"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "SLOAD"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "DUP1"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "SWAP3"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "SWAP2"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "SWAP1"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "ADD"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "SWAP2"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "SWAP1"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "POP"
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "SSTORE"
										},
										{
											"begin": 8029,
											"end": 8037,
											"name": "DUP12"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "MLOAD"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "ADD"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP1"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP8"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP2"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "MSTORE"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "ADD"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "AND"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP2"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "MSTORE"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "ADD"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "AND"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP2"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "MSTORE"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "ADD"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP5"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP2"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "MSTORE"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "ADD"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP4"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP2"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "MSTORE"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "ADD"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP3"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "DUP2"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "MSTORE"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "ADD"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "SWAP7"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "POP"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "POP"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "POP"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "POP"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "POP"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "POP"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "POP"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "SWAP1"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 8038,
											"name": "MSTORE"
										},
										{
											"begin": 7947,
											"end": 8039,
											"name": "DUP1"
										},
										{
											"begin": 7947,
											"end": 8039,
											"name": "MLOAD"
										},
										{
											"begin": 7947,
											"end": 8039,
											"name": "SWAP1"
										},
										{
											"begin": 7947,
											"end": 8039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7947,
											"end": 8039,
											"name": "ADD"
										},
										{
											"begin": 7947,
											"end": 8039,
											"name": "KECCAK256"
										},
										{
											"begin": 7926,
											"end": 8039,
											"name": "SWAP1"
										},
										{
											"begin": 7926,
											"end": 8039,
											"name": "POP"
										},
										{
											"begin": 8050,
											"end": 8064,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "DUP3"
										},
										{
											"begin": 8123,
											"end": 8133,
											"name": "DUP3"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "MLOAD"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "ADD"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "DUP1"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "DUP1"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "DUP2"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "MSTORE"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "POP"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "ADD"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "DUP4"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "DUP2"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "MSTORE"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "ADD"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "DUP3"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "DUP2"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "MSTORE"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "ADD"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "SWAP3"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "POP"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "POP"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "POP"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "SWAP1"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8077,
											"end": 8134,
											"name": "MSTORE"
										},
										{
											"begin": 8067,
											"end": 8135,
											"name": "DUP1"
										},
										{
											"begin": 8067,
											"end": 8135,
											"name": "MLOAD"
										},
										{
											"begin": 8067,
											"end": 8135,
											"name": "SWAP1"
										},
										{
											"begin": 8067,
											"end": 8135,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8067,
											"end": 8135,
											"name": "ADD"
										},
										{
											"begin": 8067,
											"end": 8135,
											"name": "KECCAK256"
										},
										{
											"begin": 8050,
											"end": 8135,
											"name": "SWAP1"
										},
										{
											"begin": 8050,
											"end": 8135,
											"name": "POP"
										},
										{
											"begin": 8146,
											"end": 8163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8176,
											"end": 8182,
											"name": "DUP3"
										},
										{
											"begin": 8184,
											"end": 8185,
											"name": "DUP10"
										},
										{
											"begin": 8187,
											"end": 8188,
											"name": "DUP10"
										},
										{
											"begin": 8190,
											"end": 8191,
											"name": "DUP10"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "MLOAD"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP2"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "MSTORE"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "ADD"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "MSTORE"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "MLOAD"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP1"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP6"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP2"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "MSTORE"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "ADD"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP5"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "AND"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "AND"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP2"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "MSTORE"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "ADD"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP4"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP2"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "MSTORE"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "ADD"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP3"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP2"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "MSTORE"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "ADD"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "SWAP5"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "POP"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "POP"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "POP"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "POP"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "POP"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "MLOAD"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP2"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "SUB"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "SWAP1"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP1"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP5"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "SUB"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "SWAP1"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "DUP6"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "GAS"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "STATICCALL"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "MLOAD"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "ADD"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "MLOAD"
										},
										{
											"begin": 8166,
											"end": 8192,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "DUP2"
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "AND"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "JUMPI"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "DUP2"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "MSTORE"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "ADD"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "DUP1"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "DUP1"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "ADD"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "DUP3"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "DUP2"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "SUB"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "DUP3"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "MSTORE"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "DUP2"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "MSTORE"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "ADD"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "DUP1"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "PUSH data",
											"value": "7BBA7B7F3786CB16C894E9F3D17E6938EA20C55FB0D256B4342CF8E91CD2677E"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "SWAP2"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "CODECOPY"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "ADD"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "SWAP2"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "POP"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "POP"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "MLOAD"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "DUP1"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "SWAP2"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "SUB"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "SWAP1"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "REVERT"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 8203,
											"end": 8272,
											"name": "JUMPDEST"
										},
										{
											"begin": 8304,
											"end": 8309,
											"name": "DUP12"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8291,
											"end": 8309,
											"name": "AND"
										},
										{
											"begin": 8291,
											"end": 8300,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8291,
											"end": 8309,
											"name": "AND"
										},
										{
											"begin": 8291,
											"end": 8309,
											"name": "EQ"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "JUMPI"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "DUP1"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "DUP2"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "MSTORE"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "DUP3"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "ADD"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "MSTORE"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "DUP3"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "ADD"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "MSTORE"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "PUSH",
											"value": "4661697361613A3A7065726D69743A20756E617574686F72697A656400000000"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "DUP3"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "ADD"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "MSTORE"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "SWAP1"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "MLOAD"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "SWAP1"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "DUP2"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "SWAP1"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "SUB"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "ADD"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "SWAP1"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "REVERT"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 8283,
											"end": 8342,
											"name": "JUMPDEST"
										},
										{
											"begin": 8368,
											"end": 8376,
											"name": "DUP9"
										},
										{
											"begin": 8361,
											"end": 8364,
											"name": "TIMESTAMP"
										},
										{
											"begin": 8361,
											"end": 8376,
											"name": "GT"
										},
										{
											"begin": 8361,
											"end": 8376,
											"name": "ISZERO"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "JUMPI"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "DUP2"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "MSTORE"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "ADD"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "DUP1"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "DUP1"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "ADD"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "DUP3"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "DUP2"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "SUB"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "DUP3"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "MSTORE"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "DUP2"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "MSTORE"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "ADD"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "DUP1"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "PUSH data",
											"value": "66D321922337C5B7814F518438C8464C8EFBBB77ADE775957918251086A37924"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "SWAP2"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "CODECOPY"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "ADD"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "SWAP2"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "POP"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "POP"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "MLOAD"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "DUP1"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "SWAP2"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "SUB"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "SWAP1"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "REVERT"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 8353,
											"end": 8414,
											"name": "JUMPDEST"
										},
										{
											"begin": 8456,
											"end": 8462,
											"name": "DUP5"
										},
										{
											"begin": 8427,
											"end": 8437,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8438,
											"end": 8443,
											"name": "DUP15"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "AND"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "DUP2"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "MSTORE"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "ADD"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "SWAP1"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "DUP2"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "MSTORE"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "ADD"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8427,
											"end": 8444,
											"name": "KECCAK256"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8445,
											"end": 8452,
											"name": "DUP14"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "AND"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "DUP2"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "MSTORE"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "ADD"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "SWAP1"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "DUP2"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "MSTORE"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "ADD"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "KECCAK256"
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "EXP"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "DUP2"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "SLOAD"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "DUP2"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "MUL"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "NOT"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "AND"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "SWAP1"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "DUP4"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "AND"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "MUL"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "OR"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "SWAP1"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "SSTORE"
										},
										{
											"begin": 8427,
											"end": 8462,
											"name": "POP"
										},
										{
											"begin": 8496,
											"end": 8503,
											"name": "DUP11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "AND"
										},
										{
											"begin": 8489,
											"end": 8494,
											"name": "DUP13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "AND"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8505,
											"end": 8511,
											"name": "DUP8"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "MLOAD"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "DUP1"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "DUP3"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "AND"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "DUP2"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "MSTORE"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "ADD"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "SWAP2"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "POP"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "POP"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "MLOAD"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "DUP1"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "SWAP2"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "SUB"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "SWAP1"
										},
										{
											"begin": 8480,
											"end": 8512,
											"name": "LOG3"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 8520,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "SWAP2"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "DUP3"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "AND"
										},
										{
											"begin": 6009,
											"end": 6013,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "SWAP1"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "DUP2"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "MSTORE"
										},
										{
											"begin": 6033,
											"end": 6043,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "SWAP1"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "DUP2"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "MSTORE"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "DUP1"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "DUP4"
										},
										{
											"begin": 6033,
											"end": 6052,
											"name": "KECCAK256"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "SWAP4"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "SWAP1"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "SWAP5"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "AND"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "DUP3"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "MSTORE"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "SWAP2"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "SWAP1"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "SWAP2"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "MSTORE"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "KECCAK256"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "SLOAD"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "AND"
										},
										{
											"begin": 6033,
											"end": 6061,
											"name": "SWAP1"
										},
										{
											"begin": 5933,
											"end": 6069,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2040,
											"end": 2157,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 2040,
											"end": 2157,
											"name": "JUMPDEST"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "MLOAD"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "DUP1"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH data",
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "DUP3"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "CODECOPY"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "ADD"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "SWAP1"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "MLOAD"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "DUP1"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "SWAP2"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "SUB"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "SWAP1"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "KECCAK256"
										},
										{
											"begin": 2040,
											"end": 2157,
											"name": "DUP2"
										},
										{
											"begin": 2040,
											"end": 2157,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "JUMPDEST"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP2"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MSTORE"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP3"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP4"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MSTORE"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP5"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "KECCAK256"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP2"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MSTORE"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP3"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "MSTORE"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "KECCAK256"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SLOAD"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP2"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "AND"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DIV"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "AND"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "DUP3"
										},
										{
											"begin": 1563,
											"end": 1633,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "JUMPDEST"
										},
										{
											"begin": 4217,
											"end": 4223,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4217,
											"end": 4223,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4217,
											"end": 4223,
											"name": "AND"
										},
										{
											"begin": 4203,
											"end": 4213,
											"name": "CALLER"
										},
										{
											"begin": 4203,
											"end": 4223,
											"name": "EQ"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "JUMPI"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "DUP2"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "MSTORE"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "ADD"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "DUP1"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "DUP1"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "ADD"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "DUP3"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "DUP2"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "SUB"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "DUP3"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "MSTORE"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "DUP2"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "MSTORE"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "ADD"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "DUP1"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "PUSH data",
											"value": "6856BF735A26F81AA3418108149773825E6954C4C601DE22633B87A95B09DE31"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "SWAP2"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "CODECOPY"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "ADD"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "SWAP2"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "POP"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "POP"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "MLOAD"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "DUP1"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "SWAP2"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "SUB"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "SWAP1"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "REVERT"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 4195,
											"end": 4292,
											"name": "JUMPDEST"
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "SLOAD"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "DUP1"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "SWAP3"
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP4"
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "AND"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "DUP2"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "MSTORE"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "SWAP2"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "DUP4"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "AND"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "DUP4"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "ADD"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "MSTORE"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "DUP1"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "MLOAD"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "PUSH",
											"value": "3B0007EB941CF645526CBB3A4FDAECDA9D28CE4843167D9263B536A1F1EDC0F6"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "SWAP3"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "DUP2"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "SWAP1"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "SUB"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "SWAP1"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "SWAP2"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "ADD"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "SWAP1"
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "LOG1"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "DUP1"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "SLOAD"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "SWAP3"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "SWAP1"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "SWAP3"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "AND"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "SWAP2"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "SWAP1"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "SWAP2"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "OR"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "SWAP1"
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "SSTORE"
										},
										{
											"begin": 4139,
											"end": 4373,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16654,
											"end": 16815,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 16654,
											"end": 16815,
											"name": "JUMPDEST"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16767,
											"end": 16779,
											"name": "DUP2"
										},
										{
											"begin": 16760,
											"end": 16765,
											"name": "PUSH",
											"value": "1000000000000000000000000"
										},
										{
											"begin": 16756,
											"end": 16765,
											"name": "DUP5"
										},
										{
											"begin": 16756,
											"end": 16765,
											"name": "LT"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "JUMPI"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP2"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "MSTORE"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "ADD"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "ADD"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP3"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP2"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SUB"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP3"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "MSTORE"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP4"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP2"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP2"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "MLOAD"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP2"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "MSTORE"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "ADD"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SWAP2"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "POP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "MLOAD"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SWAP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "ADD"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SWAP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP4"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "POP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "POP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "POP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SWAP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "POP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SWAP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP2"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "ADD"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SWAP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "AND"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "ISZERO"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "JUMPI"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP3"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SUB"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "MLOAD"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP4"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SUB"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "EXP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SUB"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "NOT"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "AND"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP2"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "MSTORE"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "ADD"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SWAP2"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "POP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "JUMPDEST"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "POP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SWAP3"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "POP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "POP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "POP"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "MLOAD"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "DUP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SWAP2"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SUB"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "SWAP1"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "REVERT"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 16748,
											"end": 16780,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 16805,
											"end": 16806,
											"name": "SWAP2"
										},
										{
											"begin": 16805,
											"end": 16806,
											"name": "SWAP3"
										},
										{
											"begin": 16654,
											"end": 16815,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 16654,
											"end": 16815,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17019,
											"end": 17184,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 17019,
											"end": 17184,
											"name": "JUMPDEST"
										},
										{
											"begin": 17105,
											"end": 17111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17137,
											"end": 17138,
											"name": "DUP4"
										},
										{
											"begin": 17132,
											"end": 17138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17132,
											"end": 17138,
											"name": "AND"
										},
										{
											"begin": 17132,
											"end": 17133,
											"name": "DUP4"
										},
										{
											"begin": 17132,
											"end": 17138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17132,
											"end": 17138,
											"name": "AND"
										},
										{
											"begin": 17132,
											"end": 17138,
											"name": "GT"
										},
										{
											"begin": 17132,
											"end": 17138,
											"name": "ISZERO"
										},
										{
											"begin": 17140,
											"end": 17152,
											"name": "DUP3"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "SWAP1"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "JUMPI"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP2"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "MSTORE"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP3"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "ADD"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP2"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP2"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "MSTORE"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP4"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "MLOAD"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP5"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "ADD"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "MSTORE"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP4"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "MLOAD"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "SWAP1"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "SWAP3"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP4"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "SWAP3"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "SWAP1"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "SWAP2"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "ADD"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "SWAP2"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "SWAP1"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP6"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "ADD"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "SWAP1"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP1"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP4"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "DUP4"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 17124,
											"end": 17153,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17171,
											"end": 17176,
											"name": "SWAP1"
										},
										{
											"begin": 17171,
											"end": 17176,
											"name": "SUB"
										},
										{
											"begin": 17171,
											"end": 17176,
											"name": "SWAP1"
										},
										{
											"begin": 17019,
											"end": 17184,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14265,
											"end": 14887,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 14265,
											"end": 14887,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14359,
											"end": 14376,
											"name": "DUP4"
										},
										{
											"begin": 14359,
											"end": 14376,
											"name": "AND"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "JUMPI"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "DUP2"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "MSTORE"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "ADD"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "DUP1"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "DUP1"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "ADD"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "DUP3"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "DUP2"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "SUB"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "DUP3"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "MSTORE"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "PUSH",
											"value": "3E"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "DUP2"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "MSTORE"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "ADD"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "DUP1"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "PUSH data",
											"value": "74DF45DF00FABA5BC1ED7D46B19584C67A1A16FA2B4884024B61F1C877A11495"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "PUSH",
											"value": "3E"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "SWAP2"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "CODECOPY"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "ADD"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "SWAP2"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "POP"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "POP"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "MLOAD"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "DUP1"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "SWAP2"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "SUB"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "SWAP1"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "REVERT"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 14351,
											"end": 14443,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14462,
											"end": 14479,
											"name": "DUP3"
										},
										{
											"begin": 14462,
											"end": 14479,
											"name": "AND"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "JUMPI"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "DUP2"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "MSTORE"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "ADD"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "DUP1"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "DUP1"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "ADD"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "DUP3"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "DUP2"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "SUB"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "DUP3"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "MSTORE"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "DUP2"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "MSTORE"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "ADD"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "DUP1"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "PUSH data",
											"value": "4B8291AEE6764A0A745B0E353B7B208822CCBB09AB1975DCE9E22B9009718407"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "SWAP2"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "CODECOPY"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "ADD"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "SWAP2"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "POP"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "POP"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "MLOAD"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "DUP1"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "SWAP2"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "SUB"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "SWAP1"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "REVERT"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 14454,
											"end": 14544,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "DUP4"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "AND"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "SWAP1"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "DUP2"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "MSTORE"
										},
										{
											"begin": 14579,
											"end": 14587,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "SWAP1"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "DUP2"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "MSTORE"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "SWAP2"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "DUP3"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "SWAP1"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "KECCAK256"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "SLOAD"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "DUP3"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "MLOAD"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "DUP2"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "ADD"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "SWAP1"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "SWAP4"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "MSTORE"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "PUSH",
											"value": "38"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "DUP1"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "DUP5"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "MSTORE"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "SWAP4"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "SWAP1"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "SWAP3"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "AND"
										},
										{
											"begin": 14579,
											"end": 14592,
											"name": "SWAP3"
										},
										{
											"begin": 14594,
											"end": 14600,
											"name": "DUP6"
										},
										{
											"begin": 14594,
											"end": 14600,
											"name": "SWAP3"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "SWAP2"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "SWAP1"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "PUSH data",
											"value": "43ED79FB8577A7FD423A8B2881D6391AF07471B5737D457346EBE6EE6B0CEE9E"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "SWAP1"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "DUP4"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "ADD"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "CODECOPY"
										},
										{
											"begin": 14573,
											"end": 14578,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "DUP5"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "DUP2"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "AND"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "SWAP1"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "DUP2"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "MSTORE"
										},
										{
											"begin": 14557,
											"end": 14565,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "SWAP1"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "DUP2"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "MSTORE"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "DUP1"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "DUP4"
										},
										{
											"begin": 14557,
											"end": 14570,
											"name": "KECCAK256"
										},
										{
											"begin": 14557,
											"end": 14661,
											"name": "DUP1"
										},
										{
											"begin": 14557,
											"end": 14661,
											"name": "SLOAD"
										},
										{
											"begin": 14557,
											"end": 14661,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 14557,
											"end": 14661,
											"name": "AND"
										},
										{
											"begin": 14557,
											"end": 14661,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14557,
											"end": 14661,
											"name": "SWAP7"
										},
										{
											"begin": 14557,
											"end": 14661,
											"name": "DUP8"
										},
										{
											"begin": 14557,
											"end": 14661,
											"name": "AND"
										},
										{
											"begin": 14557,
											"end": 14661,
											"name": "OR"
										},
										{
											"begin": 14557,
											"end": 14661,
											"name": "SWAP1"
										},
										{
											"begin": 14557,
											"end": 14661,
											"name": "SSTORE"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "SWAP3"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "DUP7"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "AND"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "DUP3"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "MSTORE"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "SWAP1"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "DUP3"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "SWAP1"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "KECCAK256"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "SLOAD"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "DUP3"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "MLOAD"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "DUP2"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "ADD"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "SWAP1"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "SWAP4"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "MSTORE"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "DUP1"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "DUP5"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "MSTORE"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "SWAP5"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "SWAP2"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "SWAP1"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "SWAP2"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "AND"
										},
										{
											"begin": 14694,
											"end": 14707,
											"name": "SWAP3"
										},
										{
											"begin": 14709,
											"end": 14715,
											"name": "DUP6"
										},
										{
											"begin": 14709,
											"end": 14715,
											"name": "SWAP3"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "SWAP1"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "SWAP2"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "SWAP1"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "PUSH data",
											"value": "2916BD5D9F3A5329C4FA4D99E766EF3046FFC185F6F1990DAFCD61D8C37227BA"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "SWAP1"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "DUP4"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "ADD"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "CODECOPY"
										},
										{
											"begin": 14688,
											"end": 14693,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 14688,
											"end": 14770,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "DUP4"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "DUP2"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "AND"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "DUP2"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "DUP2"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "MSTORE"
										},
										{
											"begin": 14672,
											"end": 14680,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "SWAP1"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "DUP2"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "MSTORE"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "SWAP2"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "DUP3"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "SWAP1"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "KECCAK256"
										},
										{
											"begin": 14672,
											"end": 14770,
											"name": "DUP1"
										},
										{
											"begin": 14672,
											"end": 14770,
											"name": "SLOAD"
										},
										{
											"begin": 14672,
											"end": 14770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 14672,
											"end": 14770,
											"name": "AND"
										},
										{
											"begin": 14672,
											"end": 14770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14672,
											"end": 14770,
											"name": "SWAP7"
										},
										{
											"begin": 14672,
											"end": 14770,
											"name": "DUP8"
										},
										{
											"begin": 14672,
											"end": 14770,
											"name": "AND"
										},
										{
											"begin": 14672,
											"end": 14770,
											"name": "OR"
										},
										{
											"begin": 14672,
											"end": 14770,
											"name": "SWAP1"
										},
										{
											"begin": 14672,
											"end": 14770,
											"name": "SSTORE"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "DUP2"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "MLOAD"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "SWAP5"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "DUP7"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "AND"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "DUP6"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "MSTORE"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "SWAP1"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "MLOAD"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "SWAP2"
										},
										{
											"begin": 14672,
											"end": 14685,
											"name": "SWAP4"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "SWAP3"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "DUP8"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "AND"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "SWAP3"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "SWAP3"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "SWAP1"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "DUP2"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "SWAP1"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "SUB"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "SWAP1"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "SWAP2"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "ADD"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "SWAP1"
										},
										{
											"begin": 14786,
											"end": 14812,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "DUP1"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "DUP5"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "AND"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "SWAP1"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "DUP2"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "MSTORE"
										},
										{
											"begin": 14840,
											"end": 14849,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "MSTORE"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "DUP1"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "DUP3"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "KECCAK256"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "SLOAD"
										},
										{
											"begin": 14856,
											"end": 14870,
											"name": "DUP6"
										},
										{
											"begin": 14856,
											"end": 14870,
											"name": "DUP5"
										},
										{
											"begin": 14856,
											"end": 14870,
											"name": "AND"
										},
										{
											"begin": 14856,
											"end": 14870,
											"name": "DUP4"
										},
										{
											"begin": 14856,
											"end": 14870,
											"name": "MSTORE"
										},
										{
											"begin": 14856,
											"end": 14870,
											"name": "SWAP2"
										},
										{
											"begin": 14856,
											"end": 14870,
											"name": "KECCAK256"
										},
										{
											"begin": 14856,
											"end": 14870,
											"name": "SLOAD"
										},
										{
											"begin": 14825,
											"end": 14879,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 14825,
											"end": 14879,
											"name": "SWAP3"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "SWAP2"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "DUP3"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "AND"
										},
										{
											"begin": 14840,
											"end": 14854,
											"name": "SWAP2"
										},
										{
											"begin": 14856,
											"end": 14870,
											"name": "AND"
										},
										{
											"begin": 14872,
											"end": 14878,
											"name": "DUP4"
										},
										{
											"begin": 14825,
											"end": 14839,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 14825,
											"end": 14879,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "DUP3"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "ADD"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "DUP3"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "LT"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "ISZERO"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "JUMPI"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "REVERT"
										},
										{
											"begin": 16823,
											"end": 17011,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 16823,
											"end": 17011,
											"name": "JUMPDEST"
										},
										{
											"begin": 16909,
											"end": 16915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16939,
											"end": 16944,
											"name": "DUP4"
										},
										{
											"begin": 16939,
											"end": 16944,
											"name": "DUP4"
										},
										{
											"begin": 16939,
											"end": 16944,
											"name": "ADD"
										},
										{
											"begin": 16971,
											"end": 16983,
											"name": "DUP3"
										},
										{
											"begin": 16963,
											"end": 16969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16963,
											"end": 16969,
											"name": "DUP1"
										},
										{
											"begin": 16963,
											"end": 16969,
											"name": "DUP8"
										},
										{
											"begin": 16963,
											"end": 16969,
											"name": "AND"
										},
										{
											"begin": 16963,
											"end": 16969,
											"name": "SWAP1"
										},
										{
											"begin": 16963,
											"end": 16969,
											"name": "DUP4"
										},
										{
											"begin": 16963,
											"end": 16969,
											"name": "AND"
										},
										{
											"begin": 16963,
											"end": 16969,
											"name": "LT"
										},
										{
											"begin": 16963,
											"end": 16969,
											"name": "ISZERO"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "JUMPI"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP2"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "MSTORE"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP3"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "ADD"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP2"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP2"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "MSTORE"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP4"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "MLOAD"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP5"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "ADD"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "MSTORE"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP4"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "MLOAD"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "SWAP1"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "SWAP3"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP4"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "SWAP3"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "SWAP1"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "SWAP2"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "ADD"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "SWAP2"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "SWAP1"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP6"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "ADD"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "SWAP1"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP1"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP4"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "DUP4"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 16955,
											"end": 16984,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17002,
											"end": 17003,
											"name": "SWAP5"
										},
										{
											"begin": 16823,
											"end": 17011,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 16823,
											"end": 17011,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14895,
											"end": 15838,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 14895,
											"end": 15838,
											"name": "JUMPDEST"
										},
										{
											"begin": 15000,
											"end": 15006,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "AND"
										},
										{
											"begin": 14990,
											"end": 14996,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "AND"
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "EQ"
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "ISZERO"
										},
										{
											"begin": 14990,
											"end": 15020,
											"name": "DUP1"
										},
										{
											"begin": 14990,
											"end": 15020,
											"name": "ISZERO"
										},
										{
											"begin": 14990,
											"end": 15020,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 14990,
											"end": 15020,
											"name": "JUMPI"
										},
										{
											"begin": 14990,
											"end": 15020,
											"name": "POP"
										},
										{
											"begin": 15019,
											"end": 15020,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15010,
											"end": 15016,
											"name": "DUP2"
										},
										{
											"begin": 15010,
											"end": 15020,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15010,
											"end": 15020,
											"name": "AND"
										},
										{
											"begin": 15010,
											"end": 15020,
											"name": "GT"
										},
										{
											"begin": 14990,
											"end": 15020,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 14990,
											"end": 15020,
											"name": "JUMPDEST"
										},
										{
											"begin": 14986,
											"end": 15831,
											"name": "ISZERO"
										},
										{
											"begin": 14986,
											"end": 15831,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 14986,
											"end": 15831,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15041,
											"end": 15061,
											"name": "DUP4"
										},
										{
											"begin": 15041,
											"end": 15061,
											"name": "AND"
										},
										{
											"begin": 15041,
											"end": 15061,
											"name": "ISZERO"
										},
										{
											"begin": 15037,
											"end": 15421,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 15037,
											"end": 15421,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "DUP4"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "AND"
										},
										{
											"begin": 15082,
											"end": 15098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "SWAP1"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "DUP2"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "MSTORE"
										},
										{
											"begin": 15101,
											"end": 15115,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "MSTORE"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "DUP2"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "KECCAK256"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "SLOAD"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "AND"
										},
										{
											"begin": 15101,
											"end": 15123,
											"name": "SWAP1"
										},
										{
											"begin": 15161,
											"end": 15174,
											"name": "DUP2"
										},
										{
											"begin": 15161,
											"end": 15221,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 15161,
											"end": 15221,
											"name": "JUMPI"
										},
										{
											"begin": 15220,
											"end": 15221,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15161,
											"end": 15221,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 15161,
											"end": 15221,
											"name": "JUMP"
										},
										{
											"begin": 15161,
											"end": 15221,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 15161,
											"end": 15221,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "DUP6"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "AND"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "SWAP1"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "DUP2"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "MSTORE"
										},
										{
											"begin": 15177,
											"end": 15188,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "SWAP1"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "DUP2"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "MSTORE"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "DUP1"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "DUP4"
										},
										{
											"begin": 15177,
											"end": 15196,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 15197,
											"end": 15210,
											"name": "DUP7"
										},
										{
											"begin": 15197,
											"end": 15210,
											"name": "ADD"
										},
										{
											"begin": 15177,
											"end": 15211,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15177,
											"end": 15211,
											"name": "AND"
										},
										{
											"begin": 15177,
											"end": 15211,
											"name": "DUP5"
										},
										{
											"begin": 15177,
											"end": 15211,
											"name": "MSTORE"
										},
										{
											"begin": 15177,
											"end": 15211,
											"name": "SWAP1"
										},
										{
											"begin": 15177,
											"end": 15211,
											"name": "SWAP2"
										},
										{
											"begin": 15177,
											"end": 15211,
											"name": "MSTORE"
										},
										{
											"begin": 15177,
											"end": 15211,
											"name": "SWAP1"
										},
										{
											"begin": 15177,
											"end": 15211,
											"name": "KECCAK256"
										},
										{
											"begin": 15177,
											"end": 15217,
											"name": "SLOAD"
										},
										{
											"begin": 15177,
											"end": 15217,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 15177,
											"end": 15217,
											"name": "SWAP1"
										},
										{
											"begin": 15177,
											"end": 15217,
											"name": "DIV"
										},
										{
											"begin": 15177,
											"end": 15217,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15177,
											"end": 15217,
											"name": "AND"
										},
										{
											"begin": 15161,
											"end": 15221,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 15161,
											"end": 15221,
											"name": "JUMPDEST"
										},
										{
											"begin": 15142,
											"end": 15221,
											"name": "SWAP1"
										},
										{
											"begin": 15142,
											"end": 15221,
											"name": "POP"
										},
										{
											"begin": 15240,
											"end": 15256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 15265,
											"end": 15274,
											"name": "DUP3"
										},
										{
											"begin": 15276,
											"end": 15282,
											"name": "DUP6"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "MLOAD"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "DUP1"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "ADD"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "MSTORE"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "DUP1"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "DUP2"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "MSTORE"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "ADD"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "PUSH data",
											"value": "B50B21B8E6629DCEEE6E3BFA4E8B2213EC51504B30E82482904829A475F147A4"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "SWAP2"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "CODECOPY"
										},
										{
											"begin": 15259,
											"end": 15264,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 15259,
											"end": 15329,
											"name": "JUMPDEST"
										},
										{
											"begin": 15240,
											"end": 15329,
											"name": "SWAP1"
										},
										{
											"begin": 15240,
											"end": 15329,
											"name": "POP"
										},
										{
											"begin": 15348,
											"end": 15405,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 15365,
											"end": 15371,
											"name": "DUP7"
										},
										{
											"begin": 15373,
											"end": 15382,
											"name": "DUP5"
										},
										{
											"begin": 15384,
											"end": 15393,
											"name": "DUP5"
										},
										{
											"begin": 15395,
											"end": 15404,
											"name": "DUP5"
										},
										{
											"begin": 15348,
											"end": 15364,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 15348,
											"end": 15405,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15348,
											"end": 15405,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 15348,
											"end": 15405,
											"name": "JUMPDEST"
										},
										{
											"begin": 15037,
											"end": 15421,
											"name": "POP"
										},
										{
											"begin": 15037,
											"end": 15421,
											"name": "POP"
										},
										{
											"begin": 15037,
											"end": 15421,
											"name": "POP"
										},
										{
											"begin": 15037,
											"end": 15421,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 15037,
											"end": 15421,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15441,
											"end": 15461,
											"name": "DUP3"
										},
										{
											"begin": 15441,
											"end": 15461,
											"name": "AND"
										},
										{
											"begin": 15441,
											"end": 15461,
											"name": "ISZERO"
										},
										{
											"begin": 15437,
											"end": 15820,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 15437,
											"end": 15820,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "DUP3"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "AND"
										},
										{
											"begin": 15482,
											"end": 15498,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "SWAP1"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "DUP2"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "MSTORE"
										},
										{
											"begin": 15501,
											"end": 15515,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "MSTORE"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "DUP2"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "KECCAK256"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "SLOAD"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "AND"
										},
										{
											"begin": 15501,
											"end": 15523,
											"name": "SWAP1"
										},
										{
											"begin": 15561,
											"end": 15574,
											"name": "DUP2"
										},
										{
											"begin": 15561,
											"end": 15621,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 15561,
											"end": 15621,
											"name": "JUMPI"
										},
										{
											"begin": 15620,
											"end": 15621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15561,
											"end": 15621,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 15561,
											"end": 15621,
											"name": "JUMP"
										},
										{
											"begin": 15561,
											"end": 15621,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 15561,
											"end": 15621,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "DUP5"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "AND"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "SWAP1"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "DUP2"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "MSTORE"
										},
										{
											"begin": 15577,
											"end": 15588,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "SWAP1"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "DUP2"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "MSTORE"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "DUP1"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "DUP4"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 15597,
											"end": 15610,
											"name": "DUP7"
										},
										{
											"begin": 15597,
											"end": 15610,
											"name": "ADD"
										},
										{
											"begin": 15577,
											"end": 15611,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15577,
											"end": 15611,
											"name": "AND"
										},
										{
											"begin": 15577,
											"end": 15611,
											"name": "DUP5"
										},
										{
											"begin": 15577,
											"end": 15611,
											"name": "MSTORE"
										},
										{
											"begin": 15577,
											"end": 15611,
											"name": "SWAP1"
										},
										{
											"begin": 15577,
											"end": 15611,
											"name": "SWAP2"
										},
										{
											"begin": 15577,
											"end": 15611,
											"name": "MSTORE"
										},
										{
											"begin": 15577,
											"end": 15611,
											"name": "SWAP1"
										},
										{
											"begin": 15577,
											"end": 15611,
											"name": "KECCAK256"
										},
										{
											"begin": 15577,
											"end": 15617,
											"name": "SLOAD"
										},
										{
											"begin": 15577,
											"end": 15617,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 15577,
											"end": 15617,
											"name": "SWAP1"
										},
										{
											"begin": 15577,
											"end": 15617,
											"name": "DIV"
										},
										{
											"begin": 15577,
											"end": 15617,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15577,
											"end": 15617,
											"name": "AND"
										},
										{
											"begin": 15561,
											"end": 15621,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 15561,
											"end": 15621,
											"name": "JUMPDEST"
										},
										{
											"begin": 15542,
											"end": 15621,
											"name": "SWAP1"
										},
										{
											"begin": 15542,
											"end": 15621,
											"name": "POP"
										},
										{
											"begin": 15640,
											"end": 15656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 15665,
											"end": 15674,
											"name": "DUP3"
										},
										{
											"begin": 15676,
											"end": 15682,
											"name": "DUP6"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "MLOAD"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "DUP1"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "ADD"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "MSTORE"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "DUP1"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "DUP2"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "MSTORE"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "ADD"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "PUSH data",
											"value": "FC81D128416BAF4FEE714EC0D5401CBB3CACA3EA6E814A2D780D0598FF531954"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "SWAP2"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "CODECOPY"
										},
										{
											"begin": 15659,
											"end": 15664,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 15659,
											"end": 15728,
											"name": "JUMPDEST"
										},
										{
											"begin": 15640,
											"end": 15728,
											"name": "SWAP1"
										},
										{
											"begin": 15640,
											"end": 15728,
											"name": "POP"
										},
										{
											"begin": 15747,
											"end": 15804,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 15764,
											"end": 15770,
											"name": "DUP6"
										},
										{
											"begin": 15772,
											"end": 15781,
											"name": "DUP5"
										},
										{
											"begin": 15783,
											"end": 15792,
											"name": "DUP5"
										},
										{
											"begin": 15794,
											"end": 15803,
											"name": "DUP5"
										},
										{
											"begin": 15747,
											"end": 15763,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 15747,
											"end": 15804,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13882,
											"end": 14257,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 13882,
											"end": 14257,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "DUP1"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "DUP4"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "AND"
										},
										{
											"begin": 13959,
											"end": 13982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "DUP2"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "DUP2"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "MSTORE"
										},
										{
											"begin": 13985,
											"end": 13994,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "DUP2"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "DUP2"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "MSTORE"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "DUP1"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "DUP5"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "KECCAK256"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "DUP1"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "SLOAD"
										},
										{
											"begin": 14042,
											"end": 14050,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "DUP5"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "MSTORE"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "DUP3"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "DUP7"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "KECCAK256"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "SLOAD"
										},
										{
											"begin": 14072,
											"end": 14092,
											"name": "SWAP5"
										},
										{
											"begin": 14072,
											"end": 14092,
											"name": "SWAP1"
										},
										{
											"begin": 14072,
											"end": 14092,
											"name": "SWAP4"
										},
										{
											"begin": 14072,
											"end": 14092,
											"name": "MSTORE"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "DUP8"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "DUP8"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "AND"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "DUP5"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "AND"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "DUP2"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "OR"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "SWAP1"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "SWAP2"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "SSTORE"
										},
										{
											"begin": 14122,
											"end": 14176,
											"name": "SWAP1"
										},
										{
											"begin": 14122,
											"end": 14176,
											"name": "MLOAD"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "SWAP2"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "SWAP1"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "SWAP6"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "AND"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "SWAP5"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "SWAP1"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "SWAP3"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "AND"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "SWAP4"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "SWAP2"
										},
										{
											"begin": 14072,
											"end": 14104,
											"name": "SWAP3"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "DUP6"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "SWAP3"
										},
										{
											"begin": 13985,
											"end": 14005,
											"name": "SWAP2"
										},
										{
											"begin": 14122,
											"end": 14176,
											"name": "PUSH",
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 14122,
											"end": 14176,
											"name": "SWAP2"
										},
										{
											"begin": 13959,
											"end": 13982,
											"name": "SWAP1"
										},
										{
											"begin": 14122,
											"end": 14176,
											"name": "LOG4"
										},
										{
											"begin": 14189,
											"end": 14249,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 14204,
											"end": 14219,
											"name": "DUP3"
										},
										{
											"begin": 14221,
											"end": 14230,
											"name": "DUP5"
										},
										{
											"begin": 14232,
											"end": 14248,
											"name": "DUP4"
										},
										{
											"begin": 14189,
											"end": 14203,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 14189,
											"end": 14249,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14189,
											"end": 14249,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 14189,
											"end": 14249,
											"name": "JUMPDEST"
										},
										{
											"begin": 13882,
											"end": 14257,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 14257,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 14257,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 14257,
											"name": "POP"
										},
										{
											"begin": 13882,
											"end": 14257,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17192,
											"end": 17345,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 17192,
											"end": 17345,
											"name": "JUMPDEST"
										},
										{
											"begin": 17302,
											"end": 17311,
											"name": "CHAINID"
										},
										{
											"begin": 17192,
											"end": 17345,
											"name": "SWAP1"
										},
										{
											"begin": 17192,
											"end": 17345,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15846,
											"end": 16477,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 15846,
											"end": 16477,
											"name": "JUMPDEST"
										},
										{
											"begin": 15964,
											"end": 15982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 15992,
											"end": 16004,
											"name": "NUMBER"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "MLOAD"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "MSTORE"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "MSTORE"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "PUSH data",
											"value": "B03F8A305451FBC58FDC933BD269D18AF5DB07650E26A77DC772C6FADF875335"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "CODECOPY"
										},
										{
											"begin": 15985,
											"end": 15991,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 15985,
											"end": 16063,
											"name": "JUMPDEST"
										},
										{
											"begin": 15964,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 15964,
											"end": 16063,
											"name": "POP"
										},
										{
											"begin": 16093,
											"end": 16094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16078,
											"end": 16090,
											"name": "DUP5"
										},
										{
											"begin": 16078,
											"end": 16094,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16078,
											"end": 16094,
											"name": "AND"
										},
										{
											"begin": 16078,
											"end": 16094,
											"name": "GT"
										},
										{
											"begin": 16078,
											"end": 16163,
											"name": "DUP1"
										},
										{
											"begin": 16078,
											"end": 16163,
											"name": "ISZERO"
										},
										{
											"begin": 16078,
											"end": 16163,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 16078,
											"end": 16163,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "DUP6"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "AND"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "SWAP1"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "DUP2"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "MSTORE"
										},
										{
											"begin": 16098,
											"end": 16109,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "SWAP1"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "DUP2"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "MSTORE"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "DUP1"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "DUP4"
										},
										{
											"begin": 16098,
											"end": 16120,
											"name": "KECCAK256"
										},
										{
											"begin": 16098,
											"end": 16163,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 16121,
											"end": 16137,
											"name": "DUP10"
										},
										{
											"begin": 16121,
											"end": 16137,
											"name": "ADD"
										},
										{
											"begin": 16098,
											"end": 16138,
											"name": "DUP2"
										},
										{
											"begin": 16098,
											"end": 16138,
											"name": "AND"
										},
										{
											"begin": 16098,
											"end": 16138,
											"name": "DUP6"
										},
										{
											"begin": 16098,
											"end": 16138,
											"name": "MSTORE"
										},
										{
											"begin": 16098,
											"end": 16138,
											"name": "SWAP3"
										},
										{
											"begin": 16098,
											"end": 16138,
											"name": "MSTORE"
										},
										{
											"begin": 16098,
											"end": 16138,
											"name": "SWAP1"
										},
										{
											"begin": 16098,
											"end": 16138,
											"name": "SWAP2"
										},
										{
											"begin": 16098,
											"end": 16138,
											"name": "KECCAK256"
										},
										{
											"begin": 16098,
											"end": 16148,
											"name": "SLOAD"
										},
										{
											"begin": 16098,
											"end": 16163,
											"name": "DUP3"
										},
										{
											"begin": 16098,
											"end": 16163,
											"name": "DUP3"
										},
										{
											"begin": 16098,
											"end": 16163,
											"name": "AND"
										},
										{
											"begin": 16098,
											"end": 16148,
											"name": "SWAP2"
										},
										{
											"begin": 16098,
											"end": 16148,
											"name": "AND"
										},
										{
											"begin": 16098,
											"end": 16163,
											"name": "EQ"
										},
										{
											"begin": 16078,
											"end": 16163,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 16078,
											"end": 16163,
											"name": "JUMPDEST"
										},
										{
											"begin": 16074,
											"end": 16403,
											"name": "ISZERO"
										},
										{
											"begin": 16074,
											"end": 16403,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 16074,
											"end": 16403,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "DUP6"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "AND"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "SWAP1"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "DUP2"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "MSTORE"
										},
										{
											"begin": 16178,
											"end": 16189,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "SWAP1"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "DUP2"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "MSTORE"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "DUP1"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "DUP4"
										},
										{
											"begin": 16178,
											"end": 16200,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 16201,
											"end": 16217,
											"name": "DUP9"
										},
										{
											"begin": 16201,
											"end": 16217,
											"name": "ADD"
										},
										{
											"begin": 16178,
											"end": 16218,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16178,
											"end": 16218,
											"name": "AND"
										},
										{
											"begin": 16178,
											"end": 16218,
											"name": "DUP5"
										},
										{
											"begin": 16178,
											"end": 16218,
											"name": "MSTORE"
										},
										{
											"begin": 16178,
											"end": 16218,
											"name": "SWAP1"
										},
										{
											"begin": 16178,
											"end": 16218,
											"name": "SWAP2"
										},
										{
											"begin": 16178,
											"end": 16218,
											"name": "MSTORE"
										},
										{
											"begin": 16178,
											"end": 16218,
											"name": "SWAP1"
										},
										{
											"begin": 16178,
											"end": 16218,
											"name": "KECCAK256"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "DUP1"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "SLOAD"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000FFFFFFFF"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "AND"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "DUP6"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "AND"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "MUL"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "OR"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "SWAP1"
										},
										{
											"begin": 16178,
											"end": 16235,
											"name": "SSTORE"
										},
										{
											"begin": 16074,
											"end": 16403,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 16074,
											"end": 16403,
											"name": "JUMP"
										},
										{
											"begin": 16074,
											"end": 16403,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 16074,
											"end": 16403,
											"name": "JUMPDEST"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP1"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "MLOAD"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP1"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP3"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "ADD"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP3"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "MSTORE"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP1"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP5"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "AND"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP3"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "MSTORE"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP1"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP7"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "AND"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP1"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP6"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "ADD"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "SWAP2"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "DUP3"
										},
										{
											"begin": 16303,
											"end": 16336,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16264,
											"end": 16286,
											"name": "DUP12"
										},
										{
											"begin": 16264,
											"end": 16286,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16264,
											"end": 16286,
											"name": "DUP2"
										},
										{
											"begin": 16264,
											"end": 16286,
											"name": "DUP2"
										},
										{
											"begin": 16264,
											"end": 16286,
											"name": "MSTORE"
										},
										{
											"begin": 16264,
											"end": 16275,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16264,
											"end": 16286,
											"name": "DUP4"
										},
										{
											"begin": 16264,
											"end": 16286,
											"name": "MSTORE"
										},
										{
											"begin": 16264,
											"end": 16286,
											"name": "DUP8"
										},
										{
											"begin": 16264,
											"end": 16286,
											"name": "DUP2"
										},
										{
											"begin": 16264,
											"end": 16286,
											"name": "KECCAK256"
										},
										{
											"begin": 16264,
											"end": 16300,
											"name": "DUP13"
										},
										{
											"begin": 16264,
											"end": 16300,
											"name": "DUP8"
										},
										{
											"begin": 16264,
											"end": 16300,
											"name": "AND"
										},
										{
											"begin": 16264,
											"end": 16300,
											"name": "DUP3"
										},
										{
											"begin": 16264,
											"end": 16300,
											"name": "MSTORE"
										},
										{
											"begin": 16264,
											"end": 16300,
											"name": "DUP4"
										},
										{
											"begin": 16264,
											"end": 16300,
											"name": "MSTORE"
										},
										{
											"begin": 16264,
											"end": 16300,
											"name": "DUP8"
										},
										{
											"begin": 16264,
											"end": 16300,
											"name": "DUP2"
										},
										{
											"begin": 16264,
											"end": 16300,
											"name": "KECCAK256"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP7"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "MLOAD"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "DUP8"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SLOAD"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP5"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "MLOAD"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP1"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP6"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "AND"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "MUL"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000FFFFFFFF"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP6"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "DUP8"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "AND"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP6"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "DUP7"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "AND"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "OR"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP6"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP1"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP6"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "AND"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP5"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP1"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP5"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "OR"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP1"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SWAP6"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "SSTORE"
										},
										{
											"begin": 16349,
											"end": 16374,
											"name": "SWAP4"
										},
										{
											"begin": 16349,
											"end": 16374,
											"name": "DUP3"
										},
										{
											"begin": 16349,
											"end": 16374,
											"name": "MSTORE"
										},
										{
											"begin": 16349,
											"end": 16363,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 16349,
											"end": 16374,
											"name": "SWAP1"
										},
										{
											"begin": 16349,
											"end": 16374,
											"name": "SWAP4"
										},
										{
											"begin": 16349,
											"end": 16374,
											"name": "MSTORE"
										},
										{
											"begin": 16349,
											"end": 16374,
											"name": "SWAP3"
										},
										{
											"begin": 16349,
											"end": 16374,
											"name": "SWAP1"
										},
										{
											"begin": 16349,
											"end": 16374,
											"name": "SWAP3"
										},
										{
											"begin": 16349,
											"end": 16374,
											"name": "KECCAK256"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "DUP1"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "SLOAD"
										},
										{
											"begin": 16264,
											"end": 16336,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16377,
											"end": 16393,
											"name": "DUP9"
										},
										{
											"begin": 16377,
											"end": 16393,
											"name": "ADD"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "SWAP1"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "SWAP4"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "AND"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "SWAP3"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "SWAP1"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "SWAP2"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "AND"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "SWAP2"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "SWAP1"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "SWAP2"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "OR"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "SWAP1"
										},
										{
											"begin": 16349,
											"end": 16393,
											"name": "SSTORE"
										},
										{
											"begin": 16074,
											"end": 16403,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 16074,
											"end": 16403,
											"name": "JUMPDEST"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "DUP1"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "MLOAD"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "DUP1"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "DUP7"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "AND"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "DUP3"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "MSTORE"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "DUP5"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "AND"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "DUP3"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "ADD"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "MSTORE"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "DUP2"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "DUP9"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "AND"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "SWAP3"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "PUSH",
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "SWAP3"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "DUP3"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "SWAP1"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "SUB"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "ADD"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "SWAP1"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "LOG2"
										},
										{
											"begin": 15846,
											"end": 16477,
											"name": "POP"
										},
										{
											"begin": 15846,
											"end": 16477,
											"name": "POP"
										},
										{
											"begin": 15846,
											"end": 16477,
											"name": "POP"
										},
										{
											"begin": 15846,
											"end": 16477,
											"name": "POP"
										},
										{
											"begin": 15846,
											"end": 16477,
											"name": "POP"
										},
										{
											"begin": 15846,
											"end": 16477,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16485,
											"end": 16646,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 16485,
											"end": 16646,
											"name": "JUMPDEST"
										},
										{
											"begin": 16560,
											"end": 16566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16598,
											"end": 16610,
											"name": "DUP2"
										},
										{
											"begin": 16591,
											"end": 16596,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 16587,
											"end": 16596,
											"name": "DUP5"
										},
										{
											"begin": 16587,
											"end": 16596,
											"name": "LT"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "JUMPI"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP2"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "MSTORE"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP3"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "ADD"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP2"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP2"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "MSTORE"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP4"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "MLOAD"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP5"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "ADD"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "MSTORE"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP4"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "MLOAD"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SWAP1"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SWAP3"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP4"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SWAP3"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SWAP1"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SWAP2"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "ADD"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SWAP2"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SWAP1"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP6"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "ADD"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SWAP1"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP1"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP4"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "DUP4"
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "MLOAD"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP3"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "ADD"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "SWAP2"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP3"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "MSTORE"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "DUP3"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "ADD"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "MSTORE"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 17348,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"2916BD5D9F3A5329C4FA4D99E766EF3046FFC185F6F1990DAFCD61D8C37227BA": "4661697361613a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
										"428C16DCDDA4166530F34A26C4E94FB86DA1569E2A9829862EE509D219284DD8": "4661697361613a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
										"43ED79FB8577A7FD423A8B2881D6391AF07471B5737D457346EBE6EE6B0CEE9E": "4661697361613a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"47CFC577CCE83A034131EE7E3A3F248DD2402932183C3369404366188973B247": "4661697361613a3a6d696e743a206d696e74696e67206e6f7420616c6c6f77656420796574",
										"4B8291AEE6764A0A745B0E353B7B208822CCBB09AB1975DCE9E22B9009718407": "4661697361613a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
										"66D321922337C5B7814F518438C8464C8EFBBB77ADE775957918251086A37924": "4661697361613a3a7065726d69743a207369676e61747572652065787069726564",
										"6856BF735A26F81AA3418108149773825E6954C4C601DE22633B87A95B09DE31": "4661697361613a3a7365744d696e7465723a206f6e6c7920746865206d696e7465722063616e206368616e676520746865206d696e7465722061646472657373",
										"6E6266F1ED26838A519BE3251A5ADC1B708C96F88B2D9FCA8C7664416CC89AE8": "4661697361613a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
										"6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
										"6EE8FD590CDC34084A0A93806FF7F052E42252DE31367891AFC0C9C911DCBE5": "4661697361613a3a6d696e743a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
										"74DF45DF00FABA5BC1ED7D46B19584C67A1A16FA2B4884024B61F1C877A11495": "4661697361613a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"7BBA7B7F3786CB16C894E9F3D17E6938EA20C55FB0D256B4342CF8E91CD2677E": "4661697361613a3a7065726d69743a20696e76616c6964207369676e6174757265",
										"8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
										"930851EA43CAC2873108CBBC75DA47DF319DFB5D34D9BC02C61E0C540AD465F8": "4661697361613a3a6d696e743a20616d6f756e7420657863656564732039362062697473",
										"A164AAF472E5193AE08911C43F0E932009BD6899893D2553E9B4BAE60BF5DBF4": "4661697361613a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473",
										"A2F14EEBE3BBC7D4ADC60052A7D595B79F34724FBFA7082143585FB5BD8626EE": "4661697361613a3a64656c656761746542795369673a207369676e61747572652065787069726564",
										"A4168ABA4FC669F0DC452530929310103D41A501CFFE432724F3E347C4692FFD": "4661697361613a3a7065726d69743a20616d6f756e7420657863656564732039362062697473",
										"B03F8A305451FBC58FDC933BD269D18AF5DB07650E26A77DC772C6FADF875335": "4661697361613a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"B50B21B8E6629DCEEE6E3BFA4E8B2213EC51504B30E82482904829A475F147A4": "4661697361613a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
										"B7EBAB050738648E1B5349FB2FBED408028A6C60180B562F13F48EB805432532": "4661697361613a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
										"BE8A6D809CC9F4FF1CF4521B91F51874149BAE2006223EC41845B088E1693560": "4661697361613a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
										"DB5D92E49FD459B5013588AF7233493889E9B54ED887D70A2E2719B899396D06": "4661697361613a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d696e74",
										"E175C657E0F1E403F720EE547408B254751930F62507BDDF82A8534BBB500DA4": "4661697361613a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
										"E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
										"EF9B1138F7FE56190F837AEBEAC3F83CE57900277382D69D32939DBF4287F14": "4661697361613a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773",
										"FC42ECD0AD65AC67B8BB4DBAC768677706FB9A0FBB6335D058DC53A56BBD31DF": "4661697361613a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
										"FC81D128416BAF4FEE714EC0D5401CBB3CACA3EA6E814A2D780D0598FF531954": "4661697361613a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773"
									}
								},
								"1906B60F827988CD8840816D324D3CCFB646804467122C5FCF48B849B7CB54BB": "4661697361613a3a636f6e7374727563746f723a206d696e74696e672063616e206f6e6c7920626567696e206166746572206465706c6f796d656e74"
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"minimumTimeBetweenMints()": "5c11d62f",
							"mint(address,uint256)": "40c10f19",
							"mintCap()": "76c71ca1",
							"minter()": "07546172",
							"mintingAllowedAfter()": "30b36cef",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"setMinter(address)": "fca3b5aa",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintingAllowedAfter_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"MinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumTimeBetweenMints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintCap\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingAllowedAfter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"account\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"return\":\"The number of tokens approved\"},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"rawAmount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"return\":\"Whether or not the approval succeeded\"},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"return\":\"The number of tokens held\"},\"constructor\":{\"params\":{\"account\":\"The initial account to grant all the tokens\",\"minter_\":\"The account with minting ability\",\"mintingAllowedAfter_\":\"The timestamp after which minting may occur\"}},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"return\":\"The number of current votes for `account`\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"return\":\"The number of votes the account had as of the given block\"},\"mint(address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to be minted\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The time at which to expire the signature\",\"owner\":\"The address to approve from\",\"r\":\"Half of the ECDSA signature pair\",\"rawAmount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"s\":\"Half of the ECDSA signature pair\",\"spender\":\"The address to be approved\",\"v\":\"The recovery byte of the signature\"}},\"setMinter(address)\":{\"params\":{\"minter_\":\"The address of the new minter\"}},\"transfer(address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\"},\"return\":\"Whether or not the transfer succeeded\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\",\"src\":\"The address of the source account\"},\"return\":\"Whether or not the transfer succeeded\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"constructor\":\"Construct a new Faisaa token\",\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"mint(address,uint256)\":{\"notice\":\"Mint new tokens\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Triggers an approval from owner to spends\"},\"setMinter(address)\":{\"notice\":\"Change the minter address\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/FaisaaToken.sol\":\"Faisaa\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"contracts/FaisaaToken.sol\":{\"keccak256\":\"0x74464413301529e446fd75e304167d5df5b42170d1b5a215f80e50eb06855d0c\",\"urls\":[\"bzz-raw://77931a88a37fa2bf7e060aeb7ead093e77aa5f2c8879ffc697b7f5c844f49d9c\",\"dweb:/ipfs/QmdzFojD1ye3ybpLtGQgs67jiGF9nGWhNSE1JHFCKRdkJs\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9c8465de751317860b623cd77f7f53f41a84b6624c0580ee526dcf7a2b7cb80c\",\"urls\":[\"bzz-raw://9b371b3eb0649b486f76cd628cc060354d1ac11fa8baed1170567271655f05d7\",\"dweb:/ipfs/QmTUg31wK9UyX6o1Q1mxE4DQhuc1rWGBanNTu1uagNVQB6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 14,
								"contract": "contracts/FaisaaToken.sol:Faisaa",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 16,
								"contract": "contracts/FaisaaToken.sol:Faisaa",
								"label": "minter",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 18,
								"contract": "contracts/FaisaaToken.sol:Faisaa",
								"label": "mintingAllowedAfter",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 32,
								"contract": "contracts/FaisaaToken.sol:Faisaa",
								"label": "allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint96))"
							},
							{
								"astId": 36,
								"contract": "contracts/FaisaaToken.sol:Faisaa",
								"label": "balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint96)"
							},
							{
								"astId": 40,
								"contract": "contracts/FaisaaToken.sol:Faisaa",
								"label": "delegates",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 51,
								"contract": "contracts/FaisaaToken.sol:Faisaa",
								"label": "checkpoints",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)45_storage))"
							},
							{
								"astId": 55,
								"contract": "contracts/FaisaaToken.sol:Faisaa",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 74,
								"contract": "contracts/FaisaaToken.sol:Faisaa",
								"label": "nonces",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint96))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint96))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint96)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)45_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)45_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_address,t_uint96)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint96)",
								"numberOfBytes": "32",
								"value": "t_uint96"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)45_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct Faisaa.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)45_storage"
							},
							"t_struct(Checkpoint)45_storage": {
								"encoding": "inplace",
								"label": "struct Faisaa.Checkpoint",
								"members": [
									{
										"astId": 42,
										"contract": "contracts/FaisaaToken.sol:Faisaa",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 44,
										"contract": "contracts/FaisaaToken.sol:Faisaa",
										"label": "votes",
										"offset": 4,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"methods": {
							"allowance(address,address)": {
								"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
							},
							"approve(address,uint256)": {
								"notice": "Approve `spender` to transfer up to `amount` from `src`"
							},
							"balanceOf(address)": {
								"notice": "Get the number of tokens held by the `account`"
							},
							"constructor": "Construct a new Faisaa token",
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"mint(address,uint256)": {
								"notice": "Mint new tokens"
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Triggers an approval from owner to spends"
							},
							"setMinter(address)": {
								"notice": "Change the minter address"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer `amount` tokens from `src` to `dst`"
							}
						}
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":132:562  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":132:562  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582055a7b5c8cca271037be09a454502dd9b882aca5b15e16b477d194f9648b7b70864736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582055a7b5c8cca271037be09a454502dd9b882aca5b15e16b477d194f9648b7b70864736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SSTORE 0xA7 0xB5 0xC8 0xCC LOG2 PUSH18 0x37BE09A454502DD9B882ACA5B15E16B477D NOT 0x4F SWAP7 0x48 0xB7 0xB7 ADDMOD PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "132:430:1:-;;:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582055a7b5c8cca271037be09a454502dd9b882aca5b15e16b477d194f9648b7b70864736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SSTORE 0xA7 0xB5 0xC8 0xCC LOG2 PUSH18 0x37BE09A454502DD9B882ACA5B15E16B477D NOT 0x4F SWAP7 0x48 0xB7 0xB7 ADDMOD PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "132:430:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 562,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 562,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582055a7b5c8cca271037be09a454502dd9b882aca5b15e16b477d194f9648b7b70864736f6c63430005100032",
									".code": [
										{
											"begin": 132,
											"end": 562,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "ADDRESS"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "EQ"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "MSTORE"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "DUP1"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9c8465de751317860b623cd77f7f53f41a84b6624c0580ee526dcf7a2b7cb80c\",\"urls\":[\"bzz-raw://9b371b3eb0649b486f76cd628cc060354d1ac11fa8baed1170567271655f05d7\",\"dweb:/ipfs/QmTUg31wK9UyX6o1Q1mxE4DQhuc1rWGBanNTu1uagNVQB6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/FaisaaToken.sol": {
				"ast": {
					"absolutePath": "contracts/FaisaaToken.sol",
					"exportedSymbols": {
						"Faisaa": [
							1257
						]
					},
					"id": 1258,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 1258,
							"sourceUnit": 1333,
							"src": "61:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1257,
							"linearizedBaseContracts": [
								1257
							],
							"name": "Faisaa",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "172:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 3,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "172:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "466169736161",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "202:8:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9869eadf408163ba154b1c0ee82ba4780d5d47224d67622ac848d92c700ab76d",
											"typeString": "literal_string \"Faisaa\""
										},
										"value": "Faisaa"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 8,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "271:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 6,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "271:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "464149534141",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "303:8:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_aa31bf74db3945afcb1b34a16f5585ebd5d56e89f6d1c97cfabb33116a0cd12e",
											"typeString": "literal_string \"FAISAA\""
										},
										"value": "FAISAA"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 11,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "374:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 9,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "374:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "407:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 14,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "473:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "473:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130305f3030305f303030653138",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "499:14:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										},
										"value": "100_000_000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "minter",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "595:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 15,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "595:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 18,
									"name": "mintingAllowedAfter",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "686:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "686:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 23,
									"name": "minimumTimeBetweenMints",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "770:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 19,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "770:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 20,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "819:6:0",
											"subdenomination": "days",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_86400_by_1",
												"typeString": "int_const 86400"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "333635",
											"id": 21,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "828:3:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_365_by_1",
												"typeString": "int_const 365"
											},
											"value": "365"
										},
										"src": "819:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 26,
									"name": "mintCap",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "926:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 24,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "926:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "958:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 32,
									"name": "allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "1023:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
										"typeString": "mapping(address => mapping(address => uint96))"
									},
									"typeName": {
										"id": 31,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1032:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1023:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
											"typeString": "mapping(address => mapping(address => uint96))"
										},
										"valueType": {
											"id": 30,
											"keyType": {
												"id": 28,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1052:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1043:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
												"typeString": "mapping(address => uint96)"
											},
											"valueType": {
												"id": 29,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1063:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 36,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "1168:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
										"typeString": "mapping(address => uint96)"
									},
									"typeName": {
										"id": 35,
										"keyType": {
											"id": 33,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1177:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1168:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
											"typeString": "mapping(address => uint96)"
										},
										"valueType": {
											"id": 34,
											"name": "uint96",
											"nodeType": "ElementaryTypeName",
											"src": "1188:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 40,
									"name": "delegates",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "1274:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 39,
										"keyType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1283:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1274:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1294:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "Faisaa.Checkpoint",
									"id": 45,
									"members": [
										{
											"constant": false,
											"id": 42,
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"scope": 45,
											"src": "1434:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 41,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1434:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 44,
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"scope": 45,
											"src": "1461:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 43,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1461:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 1257,
									"src": "1405:76:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 51,
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "1563:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint))"
									},
									"typeName": {
										"id": 50,
										"keyType": {
											"id": 46,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1572:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1563:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint))"
										},
										"valueType": {
											"id": 49,
											"keyType": {
												"id": 47,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1592:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "1583:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
												"typeString": "mapping(uint32 => struct Faisaa.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 48,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 45,
												"src": "1602:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$45_storage_ptr",
													"typeString": "struct Faisaa.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 55,
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "1702:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 54,
										"keyType": {
											"id": 52,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1711:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1702:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 53,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1722:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 60,
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "1824:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 56,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1824:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 58,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1876:69:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 57,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1341,
											"src": "1866:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 59,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1866:80:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 65,
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "2040:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 61,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2040:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 63,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2096:60:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 62,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1341,
											"src": "2086:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 64,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2086:71:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 70,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "2247:137:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 66,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2247:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 68,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2299:84:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 67,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1341,
											"src": "2289:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 69,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2289:95:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 74,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1257,
									"src": "2465:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 73,
										"keyType": {
											"id": 71,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2474:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2465:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 72,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2485:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when the minter address is changed",
									"id": 80,
									"name": "MinterChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"indexed": false,
												"name": "minter",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2608:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"name": "newMinter",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2624:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2607:35:0"
									},
									"src": "2588:55:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when an account changes its delegate",
									"id": 88,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "2750:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2750:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "2777:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "2807:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2749:85:0"
									},
									"src": "2728:107:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice An event thats emitted when a delegate account's vote balance changes",
									"id": 96,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2957:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2983:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2983:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": false,
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3005:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3005:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2956:65:0"
									},
									"src": "2930:92:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard EIP-20 transfer event",
									"id": 104,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3097:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3119:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3139:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3096:58:0"
									},
									"src": "3082:73:0"
								},
								{
									"anonymous": false,
									"documentation": "@notice The standard EIP-20 approval event",
									"id": 112,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3230:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3253:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3278:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3229:64:0"
									},
									"src": "3215:79:0"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "3648:370:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 122,
																"name": "mintingAllowedAfter_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "3667:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 123,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "3691:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3691:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3667:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a636f6e7374727563746f723a206d696e74696e672063616e206f6e6c7920626567696e206166746572206465706c6f796d656e74",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3708:62:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1906b60f827988cd8840816d324d3ccfb646804467122c5fcf48b849b7cb54bb",
																"typeString": "literal_string \"Faisaa::constructor: minting can only begin after deployment\""
															},
															"value": "Faisaa::constructor: minting can only begin after deployment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1906b60f827988cd8840816d324d3ccfb646804467122c5fcf48b849b7cb54bb",
																"typeString": "literal_string \"Faisaa::constructor: minting can only begin after deployment\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "3659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3659:112:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "3659:112:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 129,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "3784:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 131,
														"indexExpression": {
															"argumentTypes": null,
															"id": 130,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3793:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3784:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 133,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "3811:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3804:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint96_$",
																"typeString": "type(uint96)"
															},
															"typeName": "uint96"
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3804:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "3784:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "3784:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3856:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3848:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3848:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 141,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3860:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 142,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "3869:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 137,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "3839:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3839:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3834:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 145,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "3892:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 146,
														"name": "minter_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "3901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3892:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "3892:16:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3946:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3938:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3938:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 153,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "3950:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 149,
														"name": "MinterChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "3924:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3924:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "EmitStatement",
												"src": "3919:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 156,
														"name": "mintingAllowedAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "3968:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 157,
														"name": "mintingAllowedAfter_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "3990:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3968:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "3968:42:0"
											}
										]
									},
									"documentation": "@notice Construct a new Faisaa token\n@param account The initial account to grant all the tokens\n@param minter_ The account with minting ability\n@param mintingAllowedAfter_ The timestamp after which minting may occur",
									"id": 161,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3580:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"name": "minter_",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3597:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"name": "mintingAllowedAfter_",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3614:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3579:61:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3648:0:0"
									},
									"scope": 1257,
									"src": "3568:450:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "4184:189:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 167,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "4203:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4203:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 169,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "4217:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4203:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a7365744d696e7465723a206f6e6c7920746865206d696e7465722063616e206368616e676520746865206d696e7465722061646472657373",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4225:66:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6856bf735a26f81aa3418108149773825e6954c4c601de22633b87a95b09de31",
																"typeString": "literal_string \"Faisaa::setMinter: only the minter can change the minter address\""
															},
															"value": "Faisaa::setMinter: only the minter can change the minter address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6856bf735a26f81aa3418108149773825e6954c4c601de22633b87a95b09de31",
																"typeString": "literal_string \"Faisaa::setMinter: only the minter can change the minter address\""
															}
														],
														"id": 166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "4195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4195:97:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "4195:97:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 175,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "4322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 176,
															"name": "minter_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "4330:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 174,
														"name": "MinterChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "4308:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4308:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "EmitStatement",
												"src": "4303:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 179,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "4349:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 180,
														"name": "minter_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "4358:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4349:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "4349:16:0"
											}
										]
									},
									"documentation": "@notice Change the minter address\n@param minter_ The address of the new minter",
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "minter_",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "4158:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4157:17:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4184:0:0"
									},
									"scope": 1257,
									"src": "4139:234:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "4600:1029:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "4619:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4619:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 194,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "4633:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4619:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a6d696e743a206f6e6c7920746865206d696e7465722063616e206d696e74",
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4641:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db5d92e49fd459b5013588af7233493889e9b54ed887d70a2e2719b899396d06",
																"typeString": "literal_string \"Faisaa::mint: only the minter can mint\""
															},
															"value": "Faisaa::mint: only the minter can mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db5d92e49fd459b5013588af7233493889e9b54ed887d70a2e2719b899396d06",
																"typeString": "literal_string \"Faisaa::mint: only the minter can mint\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "4611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4611:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "4611:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 200,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "4701:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4701:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 202,
																"name": "mintingAllowedAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "4720:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4701:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a6d696e743a206d696e74696e67206e6f7420616c6c6f77656420796574",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47cfc577cce83a034131ee7e3a3f248dd2402932183c3369404366188973b247",
																"typeString": "literal_string \"Faisaa::mint: minting not allowed yet\""
															},
															"value": "Faisaa::mint: minting not allowed yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47cfc577cce83a034131ee7e3a3f248dd2402932183c3369404366188973b247",
																"typeString": "literal_string \"Faisaa::mint: minting not allowed yet\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "4693:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:88:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "4693:88:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 208,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "4800:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4815:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4807:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4807:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4800:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a6d696e743a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4819:51:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06ee8fd590cdc34084a0a93806ff7f052e42252de31367891afc0c9c911dcbe5",
																"typeString": "literal_string \"Faisaa::mint: cannot transfer to the zero address\""
															},
															"value": "Faisaa::mint: cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06ee8fd590cdc34084a0a93806ff7f052e42252de31367891afc0c9c911dcbe5",
																"typeString": "literal_string \"Faisaa::mint: cannot transfer to the zero address\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "4792:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4792:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "4792:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 216,
														"name": "mintingAllowedAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "4912:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 219,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "4947:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4947:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 221,
																"name": "minimumTimeBetweenMints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "4964:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 217,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "4934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1332_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1281,
															"src": "4934:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4934:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4912:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "4912:76:0"
											},
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "5029:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 225,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "5029:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 231,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 228,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "5052:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a6d696e743a20616d6f756e7420657863656564732039362062697473",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5063:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_930851ea43cac2873108cbbc75da47df319dfb5d34d9bc02c61e0c540ad465f8",
																"typeString": "literal_string \"Faisaa::mint: amount exceeds 96 bits\""
															},
															"value": "Faisaa::mint: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_930851ea43cac2873108cbbc75da47df319dfb5d34d9bc02c61e0c540ad465f8",
																"typeString": "literal_string \"Faisaa::mint: amount exceeds 96 bits\""
															}
														],
														"id": 227,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "5045:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5045:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5029:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 232,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "5233:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 236,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "5267:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 237,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "5280:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 234,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1332,
																		"src": "5254:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$1332_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1281,
																	"src": "5254:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5254:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "4661697361613a3a6d696e743a20746f74616c537570706c7920657863656564732039362062697473",
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5289:43:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a164aaf472e5193ae08911c43f0e932009bd6899893d2553e9b4bae60bf5dbf4",
																	"typeString": "literal_string \"Faisaa::mint: totalSupply exceeds 96 bits\""
																},
																"value": "Faisaa::mint: totalSupply exceeds 96 bits"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a164aaf472e5193ae08911c43f0e932009bd6899893d2553e9b4bae60bf5dbf4",
																	"typeString": "literal_string \"Faisaa::mint: totalSupply exceeds 96 bits\""
																}
															],
															"id": 233,
															"name": "safe96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "5247:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint256,string memory) pure returns (uint96)"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5247:86:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "5233:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "5233:100:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 243,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "5395:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 245,
														"indexExpression": {
															"argumentTypes": null,
															"id": 244,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "5404:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5395:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 247,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "5417:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 249,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 248,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "5426:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5417:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"id": 250,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "5432:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "4661697361613a3a6d696e743a207472616e7366657220616d6f756e74206f766572666c6f7773",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5440:41:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_0ef9b1138f7fe56190f837aebeac3f83ce57900277382d69d32939dbf4287f14",
																	"typeString": "literal_string \"Faisaa::mint: transfer amount overflows\""
																},
																"value": "Faisaa::mint: transfer amount overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_0ef9b1138f7fe56190f837aebeac3f83ce57900277382d69d32939dbf4287f14",
																	"typeString": "literal_string \"Faisaa::mint: transfer amount overflows\""
																}
															],
															"id": 246,
															"name": "add96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "5411:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5411:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "5395:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5395:87:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5515:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5507:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5507:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 259,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "5519:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 260,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "5524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 255,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "5498:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "EmitStatement",
												"src": "5493:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5594:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5586:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5586:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "5598:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 269,
															"indexExpression": {
																"argumentTypes": null,
																"id": 268,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "5608:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5598:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "5614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 263,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "5571:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5571:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "5571:50:0"
											}
										]
									},
									"documentation": "@notice Mint new tokens\n@param dst The address of the destination account\n@param rawAmount The number of tokens to be minted",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4562:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4575:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4561:29:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4600:0:0"
									},
									"scope": 1257,
									"src": "4548:1081:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "6015:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 283,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "6033:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 285,
														"indexExpression": {
															"argumentTypes": null,
															"id": 284,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "6044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6033:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 287,
													"indexExpression": {
														"argumentTypes": null,
														"id": 286,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "6053:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6033:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 282,
												"id": 288,
												"nodeType": "Return",
												"src": "6026:35:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n@param account The address of the account holding the funds\n@param spender The address of the account spending the funds\n@return The number of tokens approved",
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "5952:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "5969:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5951:34:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "6009:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6009:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6008:6:0"
									},
									"scope": 1257,
									"src": "5933:136:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "6621:347:0",
										"statements": [
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "6632:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 299,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "6632:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 301,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6632:13:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 302,
														"name": "rawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "6660:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "6678:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6679:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6673:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6673:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6660:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6735:96:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 316,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "6750:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 318,
																			"name": "rawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "6766:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "4661697361613a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
																			"id": 319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6777:41:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_428c16dcdda4166530f34a26c4e94fb86da1569e2a9829862ee509d219284dd8",
																				"typeString": "literal_string \"Faisaa::approve: amount exceeds 96 bits\""
																			},
																			"value": "Faisaa::approve: amount exceeds 96 bits"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_428c16dcdda4166530f34a26c4e94fb86da1569e2a9829862ee509d219284dd8",
																				"typeString": "literal_string \"Faisaa::approve: amount exceeds 96 bits\""
																			}
																		],
																		"id": 317,
																		"name": "safe96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "6759:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																			"typeString": "function (uint256,string memory) pure returns (uint96)"
																		}
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6759:60:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "6750:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 322,
															"nodeType": "ExpressionStatement",
															"src": "6750:69:0"
														}
													]
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6656:175:0",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "6683:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 308,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "6698:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "6714:2:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 310,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6715:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6707:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": "uint96"
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6707:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "6698:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 314,
															"nodeType": "ExpressionStatement",
															"src": "6698:19:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 325,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "6843:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																	"typeString": "mapping(address => mapping(address => uint96))"
																}
															},
															"id": 329,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 326,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "6854:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6854:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6843:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 330,
														"indexExpression": {
															"argumentTypes": null,
															"id": 328,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "6866:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6843:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 331,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "6877:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "6843:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "6843:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 335,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "6910:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6910:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 337,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "6922:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 338,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "6931:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 334,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "6901:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6901:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "EmitStatement",
												"src": "6896:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6956:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 298,
												"id": 342,
												"nodeType": "Return",
												"src": "6949:11:0"
											}
										]
									},
									"documentation": "@notice Approve `spender` to transfer up to `amount` from `src`\n@dev This will overwrite the approval amount for `spender`\n and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n@param spender The address of the account which may transfer tokens\n@param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n@return Whether or not the approval succeeded",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "6564:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "6581:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6563:33:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "6615:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6615:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6614:6:0"
									},
									"scope": 1257,
									"src": "6547:421:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "7577:943:0",
										"statements": [
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "7588:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 361,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "7588:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7588:13:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 364,
														"name": "rawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "7616:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "7634:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7635:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7629:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7629:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7616:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7691:95:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 378,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "7706:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 380,
																			"name": "rawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 350,
																			"src": "7722:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "4661697361613a3a7065726d69743a20616d6f756e7420657863656564732039362062697473",
																			"id": 381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7733:40:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_a4168aba4fc669f0dc452530929310103d41a501cffe432724f3e347c4692ffd",
																				"typeString": "literal_string \"Faisaa::permit: amount exceeds 96 bits\""
																			},
																			"value": "Faisaa::permit: amount exceeds 96 bits"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_a4168aba4fc669f0dc452530929310103d41a501cffe432724f3e347c4692ffd",
																				"typeString": "literal_string \"Faisaa::permit: amount exceeds 96 bits\""
																			}
																		],
																		"id": 379,
																		"name": "safe96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "7715:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																			"typeString": "function (uint256,string memory) pure returns (uint96)"
																		}
																	},
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7715:59:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "7706:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 384,
															"nodeType": "ExpressionStatement",
															"src": "7706:68:0"
														}
													]
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7612:174:0",
												"trueBody": {
													"id": 377,
													"nodeType": "Block",
													"src": "7639:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 370,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "7654:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "7670:2:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7671:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7663:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": "uint96"
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7663:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "7654:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 376,
															"nodeType": "ExpressionStatement",
															"src": "7654:19:0"
														}
													]
												}
											},
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "7798:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 387,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 405,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 392,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "7845:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 395,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "7878:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				],
																				"id": 394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7872:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": "bytes"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7872:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 393,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "7862:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7862:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 398,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "7886:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7886:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 401,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "7908:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Faisaa_$1257",
																				"typeString": "contract Faisaa"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Faisaa_$1257",
																				"typeString": "contract Faisaa"
																			}
																		],
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7900:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7900:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 390,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "7834:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7834:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 389,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "7824:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7824:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7798:117:0"
											},
											{
												"assignments": [
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "7926:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 406,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 422,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 411,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "7968:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 412,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "7985:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 413,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "7992:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 414,
																	"name": "rawAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "8001:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "8012:15:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 415,
																			"name": "nonces",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 74,
																			"src": "8012:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 417,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 416,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "8019:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "8012:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 419,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "8029:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 409,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "7957:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7957:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7957:81:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 408,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "7947:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7947:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7926:113:0"
											},
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "8050:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 423,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8094:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 429,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "8106:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 430,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "8123:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 426,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "8077:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8077:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8077:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 425,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "8067:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8067:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8050:85:0"
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"scope": 480,
														"src": "8146:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8146:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 437,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "8176:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 438,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "8184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 439,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "8187:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 440,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "8190:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 436,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "8166:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8166:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8146:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 444,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "8211:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8232:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8224:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8224:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8211:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a7065726d69743a20696e76616c6964207369676e6174757265",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8236:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bba7b7f3786cb16c894e9f3d17e6938ea20c55fb0d256b4342cf8e91cd2677e",
																"typeString": "literal_string \"Faisaa::permit: invalid signature\""
															},
															"value": "Faisaa::permit: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bba7b7f3786cb16c894e9f3d17e6938ea20c55fb0d256b4342cf8e91cd2677e",
																"typeString": "literal_string \"Faisaa::permit: invalid signature\""
															}
														],
														"id": 443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "8203:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8203:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "8203:69:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 453,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "8291:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 454,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "8304:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8291:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a7065726d69743a20756e617574686f72697a6564",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8311:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0e023546713d7bee2a492502378d6ea1a309914cd81eb611920277d92954b0d",
																"typeString": "literal_string \"Faisaa::permit: unauthorized\""
															},
															"value": "Faisaa::permit: unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0e023546713d7bee2a492502378d6ea1a309914cd81eb611920277d92954b0d",
																"typeString": "literal_string \"Faisaa::permit: unauthorized\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "8283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8283:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "8283:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 460,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "8361:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 461,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "8368:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8361:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a7065726d69743a207369676e61747572652065787069726564",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8378:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66d321922337c5b7814f518438c8464c8efbbb77ade775957918251086a37924",
																"typeString": "literal_string \"Faisaa::permit: signature expired\""
															},
															"value": "Faisaa::permit: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66d321922337c5b7814f518438c8464c8efbbb77ade775957918251086a37924",
																"typeString": "literal_string \"Faisaa::permit: signature expired\""
															}
														],
														"id": 459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "8353:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8353:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "8353:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 466,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "8427:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																	"typeString": "mapping(address => mapping(address => uint96))"
																}
															},
															"id": 469,
															"indexExpression": {
																"argumentTypes": null,
																"id": 467,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "8438:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8427:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 470,
														"indexExpression": {
															"argumentTypes": null,
															"id": 468,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "8445:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8427:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 471,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "8456:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "8427:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "8427:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 475,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "8489:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 476,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "8496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 477,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "8505:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 474,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "8480:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8480:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "EmitStatement",
												"src": "8475:37:0"
											}
										]
									},
									"documentation": "@notice Triggers an approval from owner to spends\n@param owner The address to approve from\n@param spender The address to be approved\n@param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n@param deadline The time at which to expire the signature\n@param v The recovery byte of the signature\n@param r Half of the ECDSA signature pair\n@param s Half of the ECDSA signature pair",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7474:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7489:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7506:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7506:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7522:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7537:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 353,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7537:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7546:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7557:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7473:94:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7577:0:0"
									},
									"scope": 1257,
									"src": "7458:1062:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "8788:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 488,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "8806:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 490,
													"indexExpression": {
														"argumentTypes": null,
														"id": 489,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "8815:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8806:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 487,
												"id": 491,
												"nodeType": "Return",
												"src": "8799:24:0"
											}
										]
									},
									"documentation": "@notice Get the number of tokens held by the `account`\n@param account The address of the account to get the balance of\n@return The number of tokens held",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8742:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8741:17:0"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8782:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8782:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8781:6:0"
									},
									"scope": 1257,
									"src": "8723:108:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "9166:169:0",
										"statements": [
											{
												"assignments": [
													503
												],
												"declarations": [
													{
														"constant": false,
														"id": 503,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "9177:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 502,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "9177:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 508,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 505,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "9200:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9211:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7ebab050738648e1b5349fb2fbed408028a6c60180b562f13f48eb805432532",
																"typeString": "literal_string \"Faisaa::transfer: amount exceeds 96 bits\""
															},
															"value": "Faisaa::transfer: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_b7ebab050738648e1b5349fb2fbed408028a6c60180b562f13f48eb805432532",
																"typeString": "literal_string \"Faisaa::transfer: amount exceeds 96 bits\""
															}
														],
														"id": 504,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "9193:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9193:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9177:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 510,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "9281:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9281:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 512,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "9293:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 513,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "9298:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 509,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "9265:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9265:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "9265:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9323:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 501,
												"id": 517,
												"nodeType": "Return",
												"src": "9316:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `msg.sender` to `dst`\n@param dst The address of the destination account\n@param rawAmount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "9113:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "9126:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9126:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9112:29:0"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "9160:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9160:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9159:6:0"
									},
									"scope": 1257,
									"src": "9095:240:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "9733:588:0",
										"statements": [
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "9744:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 530,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9744:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 534,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 532,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "9762:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "9762:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9744:28:0"
											},
											{
												"assignments": [
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"name": "spenderAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "9783:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 535,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "9783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 542,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 537,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "9809:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 539,
														"indexExpression": {
															"argumentTypes": null,
															"id": 538,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "9820:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9809:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 541,
													"indexExpression": {
														"argumentTypes": null,
														"id": 540,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "9825:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9809:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9783:50:0"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "9844:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 543,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "9844:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 546,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "9867:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9878:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_428c16dcdda4166530f34a26c4e94fb86da1569e2a9829862ee509d219284dd8",
																"typeString": "literal_string \"Faisaa::approve: amount exceeds 96 bits\""
															},
															"value": "Faisaa::approve: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_428c16dcdda4166530f34a26c4e94fb86da1569e2a9829862ee509d219284dd8",
																"typeString": "literal_string \"Faisaa::approve: amount exceeds 96 bits\""
															}
														],
														"id": 545,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "9860:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9860:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9844:76:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 550,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9937:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 551,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "9948:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "9937:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 553,
															"name": "spenderAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "9955:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "9982:2:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9983:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																],
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9975:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint96_$",
																	"typeString": "type(uint96)"
																},
																"typeName": "uint96"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9975:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"src": "9955:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9937:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9933:313:0",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9987:259:0",
													"statements": [
														{
															"assignments": [
																561
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 561,
																	"name": "newAllowance",
																	"nodeType": "VariableDeclaration",
																	"scope": 582,
																	"src": "10002:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"typeName": {
																		"id": 560,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "10002:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 567,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 563,
																		"name": "spenderAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "10030:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 564,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "10048:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4661697361613a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10056:65:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6e6266f1ed26838a519be3251a5adc1b708c96f88b2d9fca8c7664416cc89ae8",
																			"typeString": "literal_string \"Faisaa::transferFrom: transfer amount exceeds spender allowance\""
																		},
																		"value": "Faisaa::transferFrom: transfer amount exceeds spender allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6e6266f1ed26838a519be3251a5adc1b708c96f88b2d9fca8c7664416cc89ae8",
																			"typeString": "literal_string \"Faisaa::transferFrom: transfer amount exceeds spender allowance\""
																		}
																	],
																	"id": 562,
																	"name": "sub96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "10024:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																		"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10024:98:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10002:120:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 568,
																			"name": "allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 32,
																			"src": "10137:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																				"typeString": "mapping(address => mapping(address => uint96))"
																			}
																		},
																		"id": 571,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 569,
																			"name": "src",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "10148:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10137:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																			"typeString": "mapping(address => uint96)"
																		}
																	},
																	"id": 572,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 570,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "10153:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10137:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 573,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "10164:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "10137:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 575,
															"nodeType": "ExpressionStatement",
															"src": "10137:39:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 577,
																		"name": "src",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "10207:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 578,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "10212:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 579,
																		"name": "newAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "10221:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"id": 576,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "10198:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10198:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "EmitStatement",
															"src": "10193:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 585,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "10274:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 586,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "10279:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 587,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "10284:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 584,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "10258:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10258:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "10258:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10309:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 529,
												"id": 591,
												"nodeType": "Return",
												"src": "10302:11:0"
											}
										]
									},
									"documentation": "@notice Transfer `amount` tokens from `src` to `dst`\n@param src The address of the source account\n@param dst The address of the destination account\n@param rawAmount The number of tokens to transfer\n@return Whether or not the transfer succeeded",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "9667:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "9680:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9680:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"name": "rawAmount",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "9693:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9693:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9666:42:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "9727:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9727:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9726:6:0"
									},
									"scope": 1257,
									"src": "9645:676:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "10513:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 599,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "10541:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10541:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 601,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "10553:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 598,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "10531:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10531:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 597,
												"id": 603,
												"nodeType": "Return",
												"src": "10524:39:0"
											}
										]
									},
									"documentation": "@notice Delegate votes from `msg.sender` to `delegatee`\n@param delegatee The address to delegate votes to",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "10487:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10486:19:0"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10513:0:0"
									},
									"scope": 1257,
									"src": "10469:102:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "11110:690:0",
										"statements": [
											{
												"assignments": [
													621
												],
												"declarations": [
													{
														"constant": false,
														"id": 621,
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "11121:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 620,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "11121:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 625,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "11168:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 628,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "11201:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory",
																						"typeString": "string memory"
																					}
																				],
																				"id": 627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11195:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": "bytes"
																			},
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11195:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 626,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "11185:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11185:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 631,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "11209:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11209:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 634,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "11231:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Faisaa_$1257",
																				"typeString": "contract Faisaa"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Faisaa_$1257",
																				"typeString": "contract Faisaa"
																			}
																		],
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11223:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11223:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 623,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "11157:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11157:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11157:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 622,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "11147:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11147:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11121:117:0"
											},
											{
												"assignments": [
													640
												],
												"declarations": [
													{
														"constant": false,
														"id": 640,
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "11249:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 639,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "11249:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 650,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 644,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "11291:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 645,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "11312:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 646,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "11323:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 647,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "11330:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 642,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "11280:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11280:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11280:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 641,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "11270:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11270:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11249:89:0"
											},
											{
												"assignments": [
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 652,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "11349:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 651,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "11349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11393:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 657,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "11405:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 658,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "11422:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 654,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "11376:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11376:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11376:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 653,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "11366:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11366:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11349:85:0"
											},
											{
												"assignments": [
													663
												],
												"declarations": [
													{
														"constant": false,
														"id": 663,
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "11445:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 662,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11445:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 670,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 665,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "11475:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 666,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "11483:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 667,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "11486:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 668,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "11489:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 664,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "11465:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11465:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11445:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 672,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "11510:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11531:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11523:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11523:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11510:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11535:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc42ecd0ad65ac67b8bb4dbac768677706fb9a0fbb6335d058dc53a56bbd31df",
																"typeString": "literal_string \"Faisaa::delegateBySig: invalid signature\""
															},
															"value": "Faisaa::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc42ecd0ad65ac67b8bb4dbac768677706fb9a0fbb6335d058dc53a56bbd31df",
																"typeString": "literal_string \"Faisaa::delegateBySig: invalid signature\""
															}
														],
														"id": 671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "11502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11502:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "11502:76:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 681,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "11597:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "11606:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 682,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "11606:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 684,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 683,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "11613:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11606:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11597:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11627:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be8a6d809cc9f4ff1cf4521b91f51874149bae2006223ec41845b088e1693560",
																"typeString": "literal_string \"Faisaa::delegateBySig: invalid nonce\""
															},
															"value": "Faisaa::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be8a6d809cc9f4ff1cf4521b91f51874149bae2006223ec41845b088e1693560",
																"typeString": "literal_string \"Faisaa::delegateBySig: invalid nonce\""
															}
														],
														"id": 680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "11589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11589:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "11589:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 691,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "11685:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 692,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "11692:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11685:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11700:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2f14eebe3bbc7d4adc60052a7d595b79f34724fbfa7082143585fb5bd8626ee",
																"typeString": "literal_string \"Faisaa::delegateBySig: signature expired\""
															},
															"value": "Faisaa::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2f14eebe3bbc7d4adc60052a7d595b79f34724fbfa7082143585fb5bd8626ee",
																"typeString": "literal_string \"Faisaa::delegateBySig: signature expired\""
															}
														],
														"id": 690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "11677:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11677:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "11677:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 698,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "11771:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 699,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "11782:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 697,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "11761:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11761:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 619,
												"id": 701,
												"nodeType": "Return",
												"src": "11754:38:0"
											}
										]
									},
									"documentation": "@notice Delegates votes from signatory to `delegatee`\n@param delegatee The address to delegate votes to\n@param nonce The contract state required to match the signature\n@param expiry The time at which to expire the signature\n@param v The recovery byte of the signature\n@param r Half of the ECDSA signature pair\n@param s Half of the ECDSA signature pair",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11028:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11047:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11059:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11059:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11072:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 612,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11072:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11081:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 614,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11092:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 616,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11027:75:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11110:0:0"
									},
									"scope": 1257,
									"src": "11005:795:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "12074:149:0",
										"statements": [
											{
												"assignments": [
													711
												],
												"declarations": [
													{
														"constant": false,
														"id": 711,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "12085:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 710,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "12085:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 712,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "12107:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 714,
													"indexExpression": {
														"argumentTypes": null,
														"id": 713,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "12122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12107:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12085:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 716,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "12148:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12163:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12148:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12214:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12148:67:0",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 719,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "12167:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint storage ref))"
																	}
																},
																"id": 721,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 720,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "12179:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12167:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																	"typeString": "mapping(uint32 => struct Faisaa.Checkpoint storage ref)"
																}
															},
															"id": 725,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 722,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "12188:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12203:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12188:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12167:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																"typeString": "struct Faisaa.Checkpoint storage ref"
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "12167:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 709,
												"id": 729,
												"nodeType": "Return",
												"src": "12141:74:0"
											}
										]
									},
									"documentation": "@notice Gets the current votes balance for `account`\n@param account The address to get votes balance\n@return The number of current votes for `account`",
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "12026:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12025:17:0"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "12066:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 707,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12066:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12065:8:0"
									},
									"scope": 1257,
									"src": "12001:222:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "12741:1133:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 741,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "12760:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 742,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "12774:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12774:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12760:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12788:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e175c657e0f1e403f720ee547408b254751930f62507bddf82a8534bbb500da4",
																"typeString": "literal_string \"Faisaa::getPriorVotes: not yet determined\""
															},
															"value": "Faisaa::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e175c657e0f1e403f720ee547408b254751930f62507bddf82a8534bbb500da4",
																"typeString": "literal_string \"Faisaa::getPriorVotes: not yet determined\""
															}
														],
														"id": 740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "12752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12752:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "12752:80:0"
											},
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "12845:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 748,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "12845:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 750,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "12867:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 752,
													"indexExpression": {
														"argumentTypes": null,
														"id": 751,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "12882:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12867:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12845:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 754,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "12905:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12921:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12905:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 760,
												"nodeType": "IfStatement",
												"src": "12901:58:0",
												"trueBody": {
													"id": 759,
													"nodeType": "Block",
													"src": "12924:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12946:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 739,
															"id": 758,
															"nodeType": "Return",
															"src": "12939:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 761,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "13019:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint storage ref))"
																	}
																},
																"id": 763,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 762,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "13031:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13019:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																	"typeString": "mapping(uint32 => struct Faisaa.Checkpoint storage ref)"
																}
															},
															"id": 767,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 764,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "13040:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13055:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13040:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13019:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																"typeString": "struct Faisaa.Checkpoint storage ref"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 42,
														"src": "13019:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 769,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "13071:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13019:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 781,
												"nodeType": "IfStatement",
												"src": "13015:147:0",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "13084:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 771,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 51,
																			"src": "13106:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint storage ref))"
																			}
																		},
																		"id": 773,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 772,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 733,
																			"src": "13118:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13106:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																			"typeString": "mapping(uint32 => struct Faisaa.Checkpoint storage ref)"
																		}
																	},
																	"id": 777,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 774,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "13127:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13142:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13127:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13106:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																		"typeString": "struct Faisaa.Checkpoint storage ref"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "13106:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 739,
															"id": 779,
															"nodeType": "Return",
															"src": "13099:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 782,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "13223:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint storage ref))"
																	}
																},
																"id": 784,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 783,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "13235:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13223:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																	"typeString": "mapping(uint32 => struct Faisaa.Checkpoint storage ref)"
																}
															},
															"id": 786,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13244:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13223:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																"typeString": "struct Faisaa.Checkpoint storage ref"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 42,
														"src": "13223:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 788,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "13259:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13223:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 793,
												"nodeType": "IfStatement",
												"src": "13219:88:0",
												"trueBody": {
													"id": 792,
													"nodeType": "Block",
													"src": "13272:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13294:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 739,
															"id": 791,
															"nodeType": "Return",
															"src": "13287:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "13319:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 794,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "13319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 797,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13334:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13319:16:0"
											},
											{
												"assignments": [
													799
												],
												"declarations": [
													{
														"constant": false,
														"id": 799,
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "13346:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 798,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "13346:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 803,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 800,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "13361:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13376:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "13361:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13346:31:0"
											},
											{
												"body": {
													"id": 852,
													"nodeType": "Block",
													"src": "13410:406:0",
													"statements": [
														{
															"assignments": [
																808
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 808,
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"scope": 852,
																	"src": "13425:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 807,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "13425:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 817,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 809,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "13441:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 810,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "13450:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 811,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 795,
																					"src": "13458:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "13450:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 813,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "13449:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13467:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "13449:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "13441:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13425:43:0"
														},
														{
															"assignments": [
																819
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 819,
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"scope": 852,
																	"src": "13510:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$45_memory_ptr",
																		"typeString": "struct Faisaa.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 818,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 45,
																		"src": "13510:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$45_storage_ptr",
																			"typeString": "struct Faisaa.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 825,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 820,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "13533:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint storage ref))"
																		}
																	},
																	"id": 822,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 821,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "13545:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13533:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																		"typeString": "mapping(uint32 => struct Faisaa.Checkpoint storage ref)"
																	}
																},
																"id": 824,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "13554:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13533:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																	"typeString": "struct Faisaa.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13510:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 826,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "13580:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$45_memory_ptr",
																			"typeString": "struct Faisaa.Checkpoint memory"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 42,
																	"src": "13580:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 828,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "13596:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13580:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 834,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "13669:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$45_memory_ptr",
																				"typeString": "struct Faisaa.Checkpoint memory"
																			}
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 42,
																		"src": "13669:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 836,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "13684:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13669:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 849,
																	"nodeType": "Block",
																	"src": "13752:53:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 847,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 843,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "13771:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 846,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 844,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 808,
																						"src": "13779:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 845,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13788:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "13779:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "13771:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 848,
																			"nodeType": "ExpressionStatement",
																			"src": "13771:18:0"
																		}
																	]
																},
																"id": 850,
																"nodeType": "IfStatement",
																"src": "13665:140:0",
																"trueBody": {
																	"id": 842,
																	"nodeType": "Block",
																	"src": "13697:49:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 838,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 795,
																					"src": "13716:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 839,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 808,
																					"src": "13724:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "13716:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 841,
																			"nodeType": "ExpressionStatement",
																			"src": "13716:14:0"
																		}
																	]
																}
															},
															"id": 851,
															"nodeType": "IfStatement",
															"src": "13576:229:0",
															"trueBody": {
																"id": 833,
																"nodeType": "Block",
																"src": "13609:50:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 830,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 819,
																				"src": "13635:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$45_memory_ptr",
																					"typeString": "struct Faisaa.Checkpoint memory"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 44,
																			"src": "13635:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"functionReturnParameters": 739,
																		"id": 832,
																		"nodeType": "Return",
																		"src": "13628:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 804,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "13395:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 805,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "13403:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "13395:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 853,
												"nodeType": "WhileStatement",
												"src": "13388:428:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 854,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "13833:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint storage ref))"
																}
															},
															"id": 856,
															"indexExpression": {
																"argumentTypes": null,
																"id": 855,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "13845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13833:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																"typeString": "mapping(uint32 => struct Faisaa.Checkpoint storage ref)"
															}
														},
														"id": 858,
														"indexExpression": {
															"argumentTypes": null,
															"id": 857,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "13854:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13833:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
															"typeString": "struct Faisaa.Checkpoint storage ref"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 44,
													"src": "13833:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 739,
												"id": 860,
												"nodeType": "Return",
												"src": "13826:40:0"
											}
										]
									},
									"documentation": "@notice Determine the prior number of votes for an account as of a block number\n@dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n@param account The address of the account to check\n@param blockNumber The block number to get the vote balance at\n@return The number of votes the account had as of the given block",
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "12677:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "12694:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12694:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12676:35:0"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "12733:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 737,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12732:8:0"
									},
									"scope": 1257,
									"src": "12654:1220:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "13948:309:0",
										"statements": [
											{
												"assignments": [
													870
												],
												"declarations": [
													{
														"constant": false,
														"id": 870,
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "13959:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 869,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13959:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 871,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "13985:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 873,
													"indexExpression": {
														"argumentTypes": null,
														"id": 872,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "13995:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13985:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13959:46:0"
											},
											{
												"assignments": [
													876
												],
												"declarations": [
													{
														"constant": false,
														"id": 876,
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "14016:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 875,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "14016:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 880,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 877,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "14042:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 879,
													"indexExpression": {
														"argumentTypes": null,
														"id": 878,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "14051:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14042:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14016:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 881,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "14072:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 883,
														"indexExpression": {
															"argumentTypes": null,
															"id": 882,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "14082:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14072:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 884,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "14095:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14072:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "14072:32:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 888,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "14138:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 889,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "14149:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 890,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "14166:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 887,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "14122:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14122:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "EmitStatement",
												"src": "14117:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 894,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "14204:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 895,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "14221:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 896,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "14232:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 893,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "14189:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14189:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "14189:60:0"
											}
										]
									},
									"documentation": null,
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "13901:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "13920:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13900:38:0"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13948:0:0"
									},
									"scope": 1257,
									"src": "13882:375:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "14340:547:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 910,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "14359:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14374:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14366:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14366:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14359:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14378:64:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74df45df00faba5bc1ed7d46b19584c67a1a16fa2b4884024b61f1c877a11495",
																"typeString": "literal_string \"Faisaa::_transferTokens: cannot transfer from the zero address\""
															},
															"value": "Faisaa::_transferTokens: cannot transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74df45df00faba5bc1ed7d46b19584c67a1a16fa2b4884024b61f1c877a11495",
																"typeString": "literal_string \"Faisaa::_transferTokens: cannot transfer from the zero address\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "14351:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14351:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "14351:92:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 919,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "14462:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14477:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14469:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14469:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14462:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14481:62:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b8291aee6764a0a745b0e353b7b208822ccbb09ab1975dce9e22b9009718407",
																"typeString": "literal_string \"Faisaa::_transferTokens: cannot transfer to the zero address\""
															},
															"value": "Faisaa::_transferTokens: cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b8291aee6764a0a745b0e353b7b208822ccbb09ab1975dce9e22b9009718407",
																"typeString": "literal_string \"Faisaa::_transferTokens: cannot transfer to the zero address\""
															}
														],
														"id": 918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "14454:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14454:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "14454:90:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 927,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "14557:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 929,
														"indexExpression": {
															"argumentTypes": null,
															"id": 928,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "14566:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14557:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 931,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "14579:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 933,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 932,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "14588:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14579:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"id": 934,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "14594:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "4661697361613a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14602:58:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_43ed79fb8577a7fd423a8b2881d6391af07471b5737d457346ebe6ee6b0cee9e",
																	"typeString": "literal_string \"Faisaa::_transferTokens: transfer amount exceeds balance\""
																},
																"value": "Faisaa::_transferTokens: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_43ed79fb8577a7fd423a8b2881d6391af07471b5737d457346ebe6ee6b0cee9e",
																	"typeString": "literal_string \"Faisaa::_transferTokens: transfer amount exceeds balance\""
																}
															],
															"id": 930,
															"name": "sub96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "14573:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14573:88:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "14557:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "14557:104:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 939,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "14672:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 941,
														"indexExpression": {
															"argumentTypes": null,
															"id": 940,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "14681:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14672:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 943,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "14694:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 945,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 944,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "14703:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14694:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"id": 946,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "14709:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "4661697361613a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14717:52:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_2916bd5d9f3a5329c4fa4d99e766ef3046ffc185f6f1990dafcd61d8c37227ba",
																	"typeString": "literal_string \"Faisaa::_transferTokens: transfer amount overflows\""
																},
																"value": "Faisaa::_transferTokens: transfer amount overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_2916bd5d9f3a5329c4fa4d99e766ef3046ffc185f6f1990dafcd61d8c37227ba",
																	"typeString": "literal_string \"Faisaa::_transferTokens: transfer amount overflows\""
																}
															],
															"id": 942,
															"name": "add96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "14688:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14688:82:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "14672:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "14672:98:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 952,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "14795:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 953,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "14800:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 954,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "14805:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 951,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "14786:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14786:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "EmitStatement",
												"src": "14781:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 958,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "14840:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 960,
															"indexExpression": {
																"argumentTypes": null,
																"id": 959,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "14850:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14840:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 961,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "14856:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 963,
															"indexExpression": {
																"argumentTypes": null,
																"id": 962,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "14866:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14856:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 964,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "14872:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 957,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "14825:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14825:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "14825:54:0"
											}
										]
									},
									"documentation": null,
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "14290:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"name": "dst",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "14303:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "14316:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 905,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "14316:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14289:41:0"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14340:0:0"
									},
									"scope": 1257,
									"src": "14265:622:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "14975:863:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 977,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "14990:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 978,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "15000:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14990:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 980,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "15010:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15019:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15010:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14990:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "14986:845:0",
												"trueBody": {
													"id": 1072,
													"nodeType": "Block",
													"src": "15022:809:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 984,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "15041:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15059:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15051:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15051:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "15041:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1027,
															"nodeType": "IfStatement",
															"src": "15037:384:0",
															"trueBody": {
																"id": 1026,
																"nodeType": "Block",
																"src": "15063:358:0",
																"statements": [
																	{
																		"assignments": [
																			990
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 990,
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1026,
																				"src": "15082:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 989,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "15082:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 994,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 991,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 55,
																				"src": "15101:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 993,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 992,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 970,
																				"src": "15116:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15101:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15082:41:0"
																	},
																	{
																		"assignments": [
																			996
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 996,
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1026,
																				"src": "15142:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 995,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "15142:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1010,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 997,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 990,
																					"src": "15161:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 998,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15173:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "15161:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15220:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "15161:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1000,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 51,
																							"src": "15177:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint storage ref))"
																							}
																						},
																						"id": 1002,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1001,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 970,
																							"src": "15189:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "15177:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																							"typeString": "mapping(uint32 => struct Faisaa.Checkpoint storage ref)"
																						}
																					},
																					"id": 1006,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1005,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1003,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 990,
																							"src": "15197:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1004,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15209:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "15197:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "15177:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																						"typeString": "struct Faisaa.Checkpoint storage ref"
																					}
																				},
																				"id": 1007,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 44,
																				"src": "15177:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15142:79:0"
																	},
																	{
																		"assignments": [
																			1012
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1012,
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1026,
																				"src": "15240:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 1011,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "15240:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1018,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1014,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "15265:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1015,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 974,
																					"src": "15276:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "4661697361613a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
																					"id": 1016,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15284:44:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_b50b21b8e6629dceee6e3bfa4e8b2213ec51504b30e82482904829a475f147a4",
																						"typeString": "literal_string \"Faisaa::_moveVotes: vote amount underflows\""
																					},
																					"value": "Faisaa::_moveVotes: vote amount underflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_b50b21b8e6629dceee6e3bfa4e8b2213ec51504b30e82482904829a475f147a4",
																						"typeString": "literal_string \"Faisaa::_moveVotes: vote amount underflows\""
																					}
																				],
																				"id": 1013,
																				"name": "sub96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1244,
																				"src": "15259:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15259:70:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15240:89:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1020,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 970,
																					"src": "15365:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1021,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 990,
																					"src": "15373:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1022,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "15384:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1023,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1012,
																					"src": "15395:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 1019,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "15348:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15348:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1025,
																		"nodeType": "ExpressionStatement",
																		"src": "15348:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1028,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "15441:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15459:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15451:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15451:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "15441:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1071,
															"nodeType": "IfStatement",
															"src": "15437:383:0",
															"trueBody": {
																"id": 1070,
																"nodeType": "Block",
																"src": "15463:357:0",
																"statements": [
																	{
																		"assignments": [
																			1034
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1034,
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"scope": 1070,
																				"src": "15482:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1033,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "15482:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1038,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1035,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 55,
																				"src": "15501:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1037,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1036,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "15516:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15501:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15482:41:0"
																	},
																	{
																		"assignments": [
																			1040
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1040,
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"scope": 1070,
																				"src": "15542:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 1039,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "15542:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1054,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1041,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1034,
																					"src": "15561:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1042,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15573:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "15561:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15620:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "15561:60:0",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1044,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 51,
																							"src": "15577:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint storage ref))"
																							}
																						},
																						"id": 1046,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1045,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 972,
																							"src": "15589:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "15577:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																							"typeString": "mapping(uint32 => struct Faisaa.Checkpoint storage ref)"
																						}
																					},
																					"id": 1050,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1049,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1047,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1034,
																							"src": "15597:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1048,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15609:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "15597:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "15577:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																						"typeString": "struct Faisaa.Checkpoint storage ref"
																					}
																				},
																				"id": 1051,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 44,
																				"src": "15577:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15542:79:0"
																	},
																	{
																		"assignments": [
																			1056
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1056,
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"scope": 1070,
																				"src": "15640:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 1055,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "15640:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1062,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1058,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1040,
																					"src": "15665:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1059,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 974,
																					"src": "15676:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "4661697361613a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773",
																					"id": 1060,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15684:43:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_fc81d128416baf4fee714ec0d5401cbb3caca3ea6e814a2d780d0598ff531954",
																						"typeString": "literal_string \"Faisaa::_moveVotes: vote amount overflows\""
																					},
																					"value": "Faisaa::_moveVotes: vote amount overflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_fc81d128416baf4fee714ec0d5401cbb3caca3ea6e814a2d780d0598ff531954",
																						"typeString": "literal_string \"Faisaa::_moveVotes: vote amount overflows\""
																					}
																				],
																				"id": 1057,
																				"name": "add96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1221,
																				"src": "15659:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 1061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15659:69:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "15640:88:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1064,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "15764:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1065,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1034,
																					"src": "15772:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1066,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1040,
																					"src": "15783:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1067,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1056,
																					"src": "15794:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 1063,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "15747:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15747:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1069,
																		"nodeType": "ExpressionStatement",
																		"src": "15747:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14919:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14935:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14951:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 973,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "14951:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14918:47:0"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14975:0:0"
									},
									"scope": 1257,
									"src": "14895:943:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "15955:522:0",
										"statements": [
											{
												"assignments": [
													1087
												],
												"declarations": [
													{
														"constant": false,
														"id": 1087,
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "15964:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1086,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15964:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1093,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1089,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "15992:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15992:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661697361613a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16006:56:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b03f8a305451fbc58fdc933bd269d18af5db07650e26a77dc772c6fadf875335",
																"typeString": "literal_string \"Faisaa::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "Faisaa::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_b03f8a305451fbc58fdc933bd269d18af5db07650e26a77dc772c6fadf875335",
																"typeString": "literal_string \"Faisaa::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 1088,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "15985:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15985:78:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15964:99:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1094,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "16078:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16093:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16078:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1097,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "16098:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint storage ref))"
																		}
																	},
																	"id": 1099,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1098,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "16110:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16098:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																		"typeString": "mapping(uint32 => struct Faisaa.Checkpoint storage ref)"
																	}
																},
																"id": 1103,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1100,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "16121:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16136:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "16121:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16098:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																	"typeString": "struct Faisaa.Checkpoint storage ref"
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "16098:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1105,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "16152:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "16098:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16078:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1139,
													"nodeType": "Block",
													"src": "16251:152:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1120,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 51,
																			"src": "16264:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint storage ref))"
																			}
																		},
																		"id": 1123,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1121,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1077,
																			"src": "16276:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16264:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																			"typeString": "mapping(uint32 => struct Faisaa.Checkpoint storage ref)"
																		}
																	},
																	"id": 1124,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1122,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "16287:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16264:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																		"typeString": "struct Faisaa.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1126,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "16314:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1127,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1083,
																			"src": "16327:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"id": 1125,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "16303:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$45_storage_ptr_$",
																			"typeString": "type(struct Faisaa.Checkpoint storage pointer)"
																		}
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16303:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$45_memory",
																		"typeString": "struct Faisaa.Checkpoint memory"
																	}
																},
																"src": "16264:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																	"typeString": "struct Faisaa.Checkpoint storage ref"
																}
															},
															"id": 1130,
															"nodeType": "ExpressionStatement",
															"src": "16264:72:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1131,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 55,
																		"src": "16349:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 1133,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1132,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "16364:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16349:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1134,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "16377:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16392:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "16377:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "16349:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1138,
															"nodeType": "ExpressionStatement",
															"src": "16349:44:0"
														}
													]
												},
												"id": 1140,
												"nodeType": "IfStatement",
												"src": "16074:329:0",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "16165:80:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1108,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 51,
																				"src": "16178:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct Faisaa.Checkpoint storage ref))"
																				}
																			},
																			"id": 1113,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1109,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1077,
																				"src": "16190:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16178:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$45_storage_$",
																				"typeString": "mapping(uint32 => struct Faisaa.Checkpoint storage ref)"
																			}
																		},
																		"id": 1114,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1110,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "16201:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16216:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "16201:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16178:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$45_storage",
																			"typeString": "struct Faisaa.Checkpoint storage ref"
																		}
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "16178:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1116,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "16227:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "16178:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 1118,
															"nodeType": "ExpressionStatement",
															"src": "16178:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1142,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "16439:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1143,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "16450:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"argumentTypes": null,
															"id": 1144,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "16460:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1141,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "16418:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16418:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "EmitStatement",
												"src": "16413:56:0"
											}
										]
									},
									"documentation": null,
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "15872:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "15891:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1078,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15891:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "15912:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1080,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "15912:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "15929:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1082,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "15929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15871:74:0"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15955:0:0"
									},
									"scope": 1257,
									"src": "15846:631:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "16568:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1158,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "16587:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16591:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16594:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "16591:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "16587:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1163,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "16598:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "16579:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16579:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "16579:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1167,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "16636:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16629:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16629:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1156,
												"id": 1169,
												"nodeType": "Return",
												"src": "16622:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "16501:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16501:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "16509:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16509:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16500:36:0"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "16560:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1154,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "16560:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16559:8:0"
									},
									"scope": 1257,
									"src": "16485:161:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "16737:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1181,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "16756:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16760:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3936",
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16763:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_96_by_1",
																		"typeString": "int_const 96"
																	},
																	"value": "96"
																},
																"src": "16760:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																}
															},
															"src": "16756:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1186,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "16767:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "16748:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16748:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "16748:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1190,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "16805:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16798:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": "uint96"
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16798:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1179,
												"id": 1192,
												"nodeType": "Return",
												"src": "16791:16:0"
											}
										]
									},
									"documentation": null,
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "16670:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16670:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "16678:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16678:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16669:36:0"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "16729:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1177,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "16729:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16728:8:0"
									},
									"scope": 1257,
									"src": "16654:161:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "16917:94:0",
										"statements": [
											{
												"assignments": [
													1206
												],
												"declarations": [
													{
														"constant": false,
														"id": 1206,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "16928:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1205,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "16928:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1210,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1207,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "16939:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1208,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "16943:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "16939:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16928:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1212,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "16963:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1213,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "16968:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "16963:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1215,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "16971:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "16955:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16955:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "16955:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1218,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1206,
													"src": "17002:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1204,
												"id": 1219,
												"nodeType": "Return",
												"src": "16995:8:0"
											}
										]
									},
									"documentation": null,
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "16838:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1195,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "16838:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "16848:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1197,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "16848:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "16858:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1199,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16858:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16837:48:0"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "16909:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1202,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "16909:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16908:8:0"
									},
									"scope": 1257,
									"src": "16823:188:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "17113:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1233,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "17132:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1234,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "17137:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "17132:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1236,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "17140:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "17124:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17124:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "17124:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1239,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "17171:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1240,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "17175:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "17171:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1231,
												"id": 1242,
												"nodeType": "Return",
												"src": "17164:12:0"
											}
										]
									},
									"documentation": null,
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub96",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "17034:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1222,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "17034:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "17044:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1224,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "17044:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "17054:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17054:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17033:48:0"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "17105:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1229,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "17105:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17104:8:0"
									},
									"scope": 1257,
									"src": "17019:165:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "17243:102:0",
										"statements": [
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "17254:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17254:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1251,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "17254:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 1250,
															"isOffset": false,
															"isSlot": false,
															"src": "17291:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 1252,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "17280:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1253,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1250,
													"src": "17330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1248,
												"id": 1254,
												"nodeType": "Return",
												"src": "17323:14:0"
											}
										]
									},
									"documentation": null,
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17211:2:0"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "17237:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17237:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17236:6:0"
									},
									"scope": 1257,
									"src": "17192:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1258,
							"src": "99:17249:0"
						}
					],
					"src": "33:17315:0"
				},
				"id": 0
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1332
						]
					},
					"id": 1333,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1259,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1332,
							"linearizedBaseContracts": [
								1332
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "215:66:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1269,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "234:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1270,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1261,
																				"src": "238:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1271,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1263,
																				"src": "242:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "238:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "234:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1274,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "233:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1275,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "248:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "233:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "251:22:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "225:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "225:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "225:49:1"
											}
										]
									},
									"documentation": null,
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "168:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "168:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "176:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "167:16:1"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "207:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "207:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "206:8:1"
									},
									"scope": 1332,
									"src": "155:126:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "347:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1291,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1288,
																			"src": "366:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1292,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "370:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1293,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1285,
																				"src": "374:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "370:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "366:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1296,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "365:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1297,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "380:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "365:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "383:23:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 1290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "357:50:1"
											}
										]
									},
									"documentation": null,
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "300:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "308:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "299:16:1"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "339:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "339:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "338:8:1"
									},
									"scope": 1332,
									"src": "287:127:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "480:80:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1313,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "498:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "503:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "498:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 1320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1316,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1310,
																					"src": "509:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1319,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1317,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1305,
																						"src": "513:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 1318,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1307,
																						"src": "517:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "513:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "509:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1321,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "508:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1322,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "522:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "508:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1324,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "527:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "508:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "498:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:22:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 1312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1350,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "490:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "490:63:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "490:63:1"
											}
										]
									},
									"documentation": null,
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "433:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "441:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "441:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "432:16:1"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "472:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "471:8:1"
									},
									"scope": 1332,
									"src": "420:140:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1333,
							"src": "132:430:1"
						}
					],
					"src": "0:563:1"
				},
				"id": 1
			}
		}
	}
}